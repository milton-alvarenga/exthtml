//Should it be a reactive when the target table + where conditions change on database like on the save button?
//Should it change to any table change or just the one made by the user?
tasks := DB::task(user_id = :id:)

fn add(){
    task := DB::task.new(){
        v: description,
        //How to avoid injection using direct and not checked value. Should we have a session here, where the values are checked?
        user: id
    }

    task.done = false;
    task.save()
    tasks[] = task
}

<html>
    <head>
    </head>
    <body>
        <input type="text" *model={description} *val={required}><button @click={add}>Add</button>
        <ul>
            <li *for={idx,task in tasks} class={overwrite:task.done}>
                <input type="checkbox" *model={task.done} />
                {task.v}
                <button @click={confirm("Delete the task?") && task.delete()}>X</button>
            </li>
            <li *forelse>No task</li>
    </body>
</html>



id => hash
tasks := DB::task(user_id = :id:)
//tasks := DB::SELECT FROM task WHERE user_id = :id:

fn add(){
    task := DB::task.new(){
        v: description,
        //How to avoid injection using direct and not checked value. Should we have a session here, where the values are checked?
        user: id,
        done: false,
    }.save()

    tasks[] = task
}

<html>
    <head>
    </head>
    <body>
        <input type="text" *model={description} *val={required}><button @click={add}>Add</button>
        <ul>
            <li *for={idx,task in tasks} class={overwrite:task.done}>
                <input type="checkbox" *model={task.done} />
                {task.v}
                <button @click={confirm("Delete the task?") && task.delete()}>X</button>
            </li>
            <li *forelse>No task</li>
    </body>
</html>
