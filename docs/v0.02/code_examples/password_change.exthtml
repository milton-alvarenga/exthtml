//DB analyzes tool check if need to create table, fields or execute any change on database
user = DB::user(user_id = :id:)

function checkpass(){
    if(new_password != check_new_password){
        throw Error("Invalid new password and its confirmation")
    }
    return //Check if need to return
}

function GO::checkCurrentPass(){
    pass := encrypt_pass(@password)
    if user.password != pass {
        //how to throw exception on GO?
    }
}

function save(){
    //Como criptografar?
    user.password = GO::encrypt_pass(@new_password)
    user.save()
    password = ""
    new_password = ""
    check_new_password = ""
    alert("Password changed successfully!")

    //tem que resetar o *val.form
}
<html>
    <head>
    </head>
    <body>
        <label (for)>Current password</label>
        <input type="password" *model={password} *val.form={Validation:required;GO::checkCurrentPass}>
        <label (for)>New password</label>
        <input type="text" *model={new_password} *val.form={Validation:email;checkpass}>
        <label (for)>Check new password</label>
        <input type="text" *model={check_new_password} *val.form={Validation:email;checkpass}>
        <button @click={save} disabled={!form.valid}>Salvar</button>
    </body>
</html>