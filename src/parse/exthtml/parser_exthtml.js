// @generated by Peggy 5.0.0.
//
// https://peggyjs.org/


class peg$SyntaxError extends SyntaxError {
  constructor(message, expected, found, location) {
    super(message);
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";
  }

  format(sources) {
    let str = "Error: " + this.message;
    if (this.location) {
      let src = null;
      const st = sources.find(s => s.source === this.location.source);
      if (st) {
        src = st.text.split(/\r\n|\n|\r/g);
      }
      const s = this.location.start;
      const offset_s = (this.location.source && (typeof this.location.source.offset === "function"))
        ? this.location.source.offset(s)
        : s;
      const loc = this.location.source + ":" + offset_s.line + ":" + offset_s.column;
      if (src) {
        const e = this.location.end;
        const filler = "".padEnd(offset_s.line.toString().length, " ");
        const line = src[s.line - 1];
        const last = s.line === e.line ? e.column : line.length + 1;
        const hatLen = (last - s.column) || 1;
        str += "\n --> " + loc + "\n"
            + filler + " |\n"
            + offset_s.line + " | " + line + "\n"
            + filler + " | " + "".padEnd(s.column - 1, " ")
            + "".padEnd(hatLen, "^");
      } else {
        str += "\n at " + loc;
      }
    }
    return str;
  }

  static buildMessage(expected, found) {
    function hex(ch) {
      return ch.codePointAt(0).toString(16).toUpperCase();
    }

    const nonPrintable = Object.prototype.hasOwnProperty.call(RegExp.prototype, "unicode")
      ? new RegExp("[\\p{C}\\p{Mn}\\p{Mc}]", "gu")
      : null;
    function unicodeEscape(s) {
      if (nonPrintable) {
        return s.replace(nonPrintable,  ch => "\\u{" + hex(ch) + "}");
      }
      return s;
    }

    function literalEscape(s) {
      return unicodeEscape(s
        .replace(/\\/g, "\\\\")
        .replace(/"/g,  "\\\"")
        .replace(/\0/g, "\\0")
        .replace(/\t/g, "\\t")
        .replace(/\n/g, "\\n")
        .replace(/\r/g, "\\r")
        .replace(/[\x00-\x0F]/g,          ch => "\\x0" + hex(ch))
        .replace(/[\x10-\x1F\x7F-\x9F]/g, ch => "\\x"  + hex(ch)));
    }

    function classEscape(s) {
      return unicodeEscape(s
        .replace(/\\/g, "\\\\")
        .replace(/\]/g, "\\]")
        .replace(/\^/g, "\\^")
        .replace(/-/g,  "\\-")
        .replace(/\0/g, "\\0")
        .replace(/\t/g, "\\t")
        .replace(/\n/g, "\\n")
        .replace(/\r/g, "\\r")
        .replace(/[\x00-\x0F]/g,          ch => "\\x0" + hex(ch))
        .replace(/[\x10-\x1F\x7F-\x9F]/g, ch => "\\x"  + hex(ch)));
    }

    const DESCRIBE_EXPECTATION_FNS = {
      literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },

      class(expectation) {
        const escapedParts = expectation.parts.map(
          part => (Array.isArray(part)
            ? classEscape(part[0]) + "-" + classEscape(part[1])
            : classEscape(part))
        );

        return "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]" + (expectation.unicode ? "u" : "");
      },

      any() {
        return "any character";
      },

      end() {
        return "end of input";
      },

      other(expectation) {
        return expectation.description;
      },
    };

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      const descriptions = expected.map(describeExpectation);
      descriptions.sort();

      if (descriptions.length > 0) {
        let j = 1;
        for (let i = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }
        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ")
            + ", or "
            + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  }
}

function peg$parse(input, options) {
  options = options !== undefined ? options : {};

  const peg$FAILED = {};
  const peg$source = options.grammarSource;

  const peg$startRuleFunctions = {
    ExtHTMLDocument: peg$parseExtHTMLDocument,
  };
  let peg$startRuleFunction = peg$parseExtHTMLDocument;

  const peg$c0 = "<script";
  const peg$c1 = ">";
  const peg$c2 = "</script";
  const peg$c3 = "<style";
  const peg$c4 = "</style";
  const peg$c5 = "<textarea";
  const peg$c6 = "</textarea";
  const peg$c7 = "<title";
  const peg$c8 = "</title";
  const peg$c9 = "<plaintext";
  const peg$c10 = "</plaintext";
  const peg$c11 = "<";
  const peg$c12 = "</";
  const peg$c13 = "<!--";
  const peg$c14 = "-->";
  const peg$c15 = "//";
  const peg$c16 = "#";
  const peg$c17 = "/*";
  const peg$c18 = "*/";
  const peg$c19 = "<!doctype";
  const peg$c20 = "public";
  const peg$c21 = "system";
  const peg$c22 = "/>";
  const peg$c23 = "=";
  const peg$c24 = "*";
  const peg$c25 = "(";
  const peg$c26 = ")";
  const peg$c27 = "disabled";
  const peg$c28 = "hidden";
  const peg$c29 = "readonly";
  const peg$c30 = "allowfullscreen";
  const peg$c31 = "allowpaymentrequest";
  const peg$c32 = "async";
  const peg$c33 = "autofocus";
  const peg$c34 = "autoplay";
  const peg$c35 = "checked";
  const peg$c36 = "controls";
  const peg$c37 = "default";
  const peg$c38 = "defer";
  const peg$c39 = "formnovalidate";
  const peg$c40 = "inert";
  const peg$c41 = "ismap";
  const peg$c42 = "itemscope";
  const peg$c43 = "loop";
  const peg$c44 = "multiple";
  const peg$c45 = "muted";
  const peg$c46 = "nomodule";
  const peg$c47 = "novalidate";
  const peg$c48 = "open";
  const peg$c49 = "playsinline";
  const peg$c50 = "required";
  const peg$c51 = "reversed";
  const peg$c52 = "selected";
  const peg$c53 = "shadowrootclonable";
  const peg$c54 = "shadowrootdelegatesfocus";
  const peg$c55 = "shadowrootserializable";
  const peg$c56 = "duration";
  const peg$c57 = "buffered";
  const peg$c58 = "seekable";
  const peg$c59 = "played";
  const peg$c60 = "seeking";
  const peg$c61 = "ended";
  const peg$c62 = "readystate";
  const peg$c63 = "videoheight";
  const peg$c64 = "videowidth";
  const peg$c65 = "naturalwidth";
  const peg$c66 = "naturalheight";
  const peg$c67 = "data-";
  const peg$c68 = "accesskey";
  const peg$c69 = "class";
  const peg$c70 = "contenteditable";
  const peg$c71 = "contextmenu";
  const peg$c72 = "dir";
  const peg$c73 = "draggable";
  const peg$c74 = "dropzone";
  const peg$c75 = "id";
  const peg$c76 = "inputmode";
  const peg$c77 = "lang";
  const peg$c78 = "spellcheck";
  const peg$c79 = "style";
  const peg$c80 = "tabindex";
  const peg$c81 = "title";
  const peg$c82 = "translate";
  const peg$c83 = "@";
  const peg$c84 = ".";
  const peg$c85 = ":";
  const peg$c86 = "if";
  const peg$c87 = "for";
  const peg$c88 = "model";
  const peg$c89 = "in";
  const peg$c90 = "out";
  const peg$c91 = "forelse";
  const peg$c92 = "show";
  const peg$c93 = "hide";
  const peg$c94 = "idname";
  const peg$c95 = "perm";
  const peg$c96 = "val";
  const peg$c97 = "mask";
  const peg$c98 = "perm-group";
  const peg$c99 = "perm-mirror";
  const peg$c100 = "perm-redirect";
  const peg$c101 = "background";
  const peg$c102 = "bgcolor";
  const peg$c103 = "border";
  const peg$c104 = "color";
  const peg$c105 = "height";
  const peg$c106 = "manifest";
  const peg$c107 = "width";
  const peg$c108 = "accept-charset";
  const peg$c109 = "action";
  const peg$c110 = "align";
  const peg$c111 = "allow";
  const peg$c112 = "alt";
  const peg$c113 = "autocapitalize";
  const peg$c114 = "autocomplete";
  const peg$c115 = "capture";
  const peg$c116 = "challenge";
  const peg$c117 = "charset";
  const peg$c118 = "cite";
  const peg$c119 = "code";
  const peg$c120 = "codebase";
  const peg$c121 = "cols";
  const peg$c122 = "colspan";
  const peg$c123 = "content";
  const peg$c124 = "coords";
  const peg$c125 = "crossorigin";
  const peg$c126 = "csp";
  const peg$c127 = "data";
  const peg$c128 = "datetime";
  const peg$c129 = "decoding";
  const peg$c130 = "dirname";
  const peg$c131 = "download";
  const peg$c132 = "enctype";
  const peg$c133 = "enterkeyhint";
  const peg$c134 = "form";
  const peg$c135 = "formaction";
  const peg$c136 = "formenctype";
  const peg$c137 = "formmethod";
  const peg$c138 = "formtarget";
  const peg$c139 = "headers";
  const peg$c140 = "high";
  const peg$c141 = "href";
  const peg$c142 = "hreflang";
  const peg$c143 = "http-equiv";
  const peg$c144 = "icon";
  const peg$c145 = "importance";
  const peg$c146 = "integrity";
  const peg$c147 = "intrinsicsize";
  const peg$c148 = "keytype";
  const peg$c149 = "kind";
  const peg$c150 = "label";
  const peg$c151 = "language";
  const peg$c152 = "loading";
  const peg$c153 = "list";
  const peg$c154 = "low";
  const peg$c155 = "max";
  const peg$c156 = "maxlength";
  const peg$c157 = "minlength";
  const peg$c158 = "media";
  const peg$c159 = "method";
  const peg$c160 = "min";
  const peg$c161 = "name";
  const peg$c162 = "optimum";
  const peg$c163 = "pattern";
  const peg$c164 = "ping";
  const peg$c165 = "placeholder";
  const peg$c166 = "poster";
  const peg$c167 = "preload";
  const peg$c168 = "radiogroup";
  const peg$c169 = "referrerpolicy";
  const peg$c170 = "rel";
  const peg$c171 = "rows";
  const peg$c172 = "rowspan";
  const peg$c173 = "sandbox";
  const peg$c174 = "scope";
  const peg$c175 = "scoped";
  const peg$c176 = "shape";
  const peg$c177 = "size";
  const peg$c178 = "sizes";
  const peg$c179 = "slot";
  const peg$c180 = "span";
  const peg$c181 = "src";
  const peg$c182 = "srcdoc";
  const peg$c183 = "srclang";
  const peg$c184 = "srcset";
  const peg$c185 = "start";
  const peg$c186 = "step";
  const peg$c187 = "summary";
  const peg$c188 = "target";
  const peg$c189 = "type";
  const peg$c190 = "usemap";
  const peg$c191 = "value";
  const peg$c192 = "wrap";
  const peg$c193 = "keydown";
  const peg$c194 = "keypress";
  const peg$c195 = "keyup";
  const peg$c196 = "enter";
  const peg$c197 = "tab";
  const peg$c198 = "delete";
  const peg$c199 = "esc";
  const peg$c200 = "space";
  const peg$c201 = "up";
  const peg$c202 = "down";
  const peg$c203 = "left";
  const peg$c204 = "right";
  const peg$c205 = "ctrl";
  const peg$c206 = "shift";
  const peg$c207 = "meta";
  const peg$c208 = "altgraph";
  const peg$c209 = "fn";
  const peg$c210 = "click";
  const peg$c211 = "mousedown";
  const peg$c212 = "mouseup";
  const peg$c213 = "mousemove";
  const peg$c214 = "dblclick";
  const peg$c215 = "mouseover";
  const peg$c216 = "mouseout";
  const peg$c217 = "mouseenter";
  const peg$c218 = "mouseleave";
  const peg$c219 = "middle";
  const peg$c220 = "stop";
  const peg$c221 = "prevent";
  const peg$c222 = "self";
  const peg$c223 = "once";
  const peg$c224 = "passive";
  const peg$c225 = "debounce";
  const peg$c226 = "throttle";
  const peg$c227 = "\"";
  const peg$c228 = "'";
  const peg$c229 = "{";
  const peg$c230 = "}";
  const peg$c231 = "area";
  const peg$c232 = "base";
  const peg$c233 = "br";
  const peg$c234 = "col";
  const peg$c235 = "embed";
  const peg$c236 = "hr";
  const peg$c237 = "img";
  const peg$c238 = "input";
  const peg$c239 = "link";
  const peg$c240 = "wbr";
  const peg$c241 = "command";
  const peg$c242 = "keygen";
  const peg$c243 = "menuitem";
  const peg$c244 = "param";
  const peg$c245 = "source";
  const peg$c246 = "track";
  const peg$c247 = "acronym";
  const peg$c248 = "applet";
  const peg$c249 = "basefont";
  const peg$c250 = "big";
  const peg$c251 = "center";
  const peg$c252 = "font";
  const peg$c253 = "frameset";
  const peg$c254 = "frame";
  const peg$c255 = "noframes";
  const peg$c256 = "strike";
  const peg$c257 = "tt";
  const peg$c258 = "abbr";
  const peg$c259 = "address";
  const peg$c260 = "article";
  const peg$c261 = "aside";
  const peg$c262 = "audio";
  const peg$c263 = "a";
  const peg$c264 = "bdi";
  const peg$c265 = "bdo";
  const peg$c266 = "blockquote";
  const peg$c267 = "body";
  const peg$c268 = "button";
  const peg$c269 = "b";
  const peg$c270 = "canvas";
  const peg$c271 = "caption";
  const peg$c272 = "colgroup";
  const peg$c273 = "datalist";
  const peg$c274 = "dd";
  const peg$c275 = "del";
  const peg$c276 = "details";
  const peg$c277 = "dfn";
  const peg$c278 = "dialog";
  const peg$c279 = "div";
  const peg$c280 = "dl";
  const peg$c281 = "dt";
  const peg$c282 = "em";
  const peg$c283 = "fieldset";
  const peg$c284 = "figcaption";
  const peg$c285 = "figure";
  const peg$c286 = "footer";
  const peg$c287 = "h1";
  const peg$c288 = "h2";
  const peg$c289 = "h3";
  const peg$c290 = "h4";
  const peg$c291 = "h5";
  const peg$c292 = "h6";
  const peg$c293 = "head";
  const peg$c294 = "header";
  const peg$c295 = "html";
  const peg$c296 = "iframe";
  const peg$c297 = "ins";
  const peg$c298 = "i";
  const peg$c299 = "kbd";
  const peg$c300 = "legend";
  const peg$c301 = "li";
  const peg$c302 = "main";
  const peg$c303 = "map";
  const peg$c304 = "mark";
  const peg$c305 = "meter";
  const peg$c306 = "nav";
  const peg$c307 = "noscript";
  const peg$c308 = "object";
  const peg$c309 = "ol";
  const peg$c310 = "optgroup";
  const peg$c311 = "option";
  const peg$c312 = "output";
  const peg$c313 = "p";
  const peg$c314 = "picture";
  const peg$c315 = "pre";
  const peg$c316 = "progress";
  const peg$c317 = "q";
  const peg$c318 = "rp";
  const peg$c319 = "rt";
  const peg$c320 = "ruby";
  const peg$c321 = "samp";
  const peg$c322 = "script";
  const peg$c323 = "section";
  const peg$c324 = "select";
  const peg$c325 = "small";
  const peg$c326 = "strong";
  const peg$c327 = "sub";
  const peg$c328 = "sup";
  const peg$c329 = "svg";
  const peg$c330 = "s";
  const peg$c331 = "table";
  const peg$c332 = "tbody";
  const peg$c333 = "td";
  const peg$c334 = "template";
  const peg$c335 = "tfoot";
  const peg$c336 = "th";
  const peg$c337 = "thead";
  const peg$c338 = "time";
  const peg$c339 = "tr";
  const peg$c340 = "ul";
  const peg$c341 = "u";
  const peg$c342 = "var";
  const peg$c343 = "video";
  const peg$c344 = "circle";
  const peg$c345 = "ellipse";
  const peg$c346 = "line";
  const peg$c347 = "path";
  const peg$c348 = "polygon";
  const peg$c349 = "polyline";
  const peg$c350 = "rect";
  const peg$c351 = "image";
  const peg$c352 = "g";
  const peg$c353 = "symbol";
  const peg$c354 = "defs";
  const peg$c355 = "metadata";
  const peg$c356 = "switch";
  const peg$c357 = "use";
  const peg$c358 = "view";
  const peg$c359 = "feblend";
  const peg$c360 = "fecolormatrix";
  const peg$c361 = "fecomposite";
  const peg$c362 = "fecomponenttransfer";
  const peg$c363 = "feconvolvematrix";
  const peg$c364 = "fediffuselighting";
  const peg$c365 = "fedisplacementmap";
  const peg$c366 = "fedistantlight";
  const peg$c367 = "fedropshadow";
  const peg$c368 = "feflood";
  const peg$c369 = "fefunca";
  const peg$c370 = "fefuncb";
  const peg$c371 = "fefuncg";
  const peg$c372 = "fefuncr";
  const peg$c373 = "fegaussianblur";
  const peg$c374 = "feimage";
  const peg$c375 = "femerge";
  const peg$c376 = "femergenode";
  const peg$c377 = "femorphology";
  const peg$c378 = "feoffset";
  const peg$c379 = "fepointlight";
  const peg$c380 = "fespecularlighting";
  const peg$c381 = "fespotlight";
  const peg$c382 = "fetile";
  const peg$c383 = "feturbulence";
  const peg$c384 = "animate";
  const peg$c385 = "animatemotion";
  const peg$c386 = "animatetransform";
  const peg$c387 = "mpath";
  const peg$c388 = "set";
  const peg$c389 = "text";
  const peg$c390 = "tspan";
  const peg$c391 = "textpath";
  const peg$c392 = "tref";
  const peg$c393 = "desc";
  const peg$c394 = "font-face";
  const peg$c395 = "glyph";
  const peg$c396 = "missing-glyph";
  const peg$c397 = "hkern";
  const peg$c398 = "vkern";
  const peg$c399 = "clippath";
  const peg$c400 = "marker";
  const peg$c401 = "filter";
  const peg$c402 = "foreignobject";
  const peg$c403 = "mesh";
  const peg$c404 = "color-profile";
  const peg$c405 = "cursor";
  const peg$c406 = "discard";
  const peg$c407 = "hatch";
  const peg$c408 = "hatchpath";
  const peg$c409 = "lineargradient";
  const peg$c410 = "meshgradient";
  const peg$c411 = "meshpatch";
  const peg$c412 = "meshrow";
  const peg$c413 = "radialgradient";
  const peg$c414 = "solidcolor";
  const peg$c415 = "unknown";

  const peg$r0 = /^[^<]/;
  const peg$r1 = /^[a-zA-Z_]/;
  const peg$r2 = /^[\-]/;
  const peg$r3 = /^[a-zA-Z0-9:_]/;
  const peg$r4 = /^[^"'<>` ]/;
  const peg$r5 = /^[^"]/;
  const peg$r6 = /^[^']/;
  const peg$r7 = /^[^}]/;
  const peg$r8 = /^[a-zA-Z_\-]/;
  const peg$r9 = /^[a-zA-Z0-9:_\-]/;
  const peg$r10 = /^[a-zA-Z0-9_\-]/;
  const peg$r11 = /^[a-zA-Z_$]/;
  const peg$r12 = /^[a-zA-Z_$0-9]/;
  const peg$r13 = /^[ \t\f]/;
  const peg$r14 = /^[\r\n]/;

  const peg$e0 = peg$otherExpectation("script");
  const peg$e1 = peg$literalExpectation("<script", true);
  const peg$e2 = peg$literalExpectation(">", false);
  const peg$e3 = peg$literalExpectation("</script", true);
  const peg$e4 = peg$anyExpectation();
  const peg$e5 = peg$otherExpectation("style");
  const peg$e6 = peg$literalExpectation("<style", true);
  const peg$e7 = peg$literalExpectation("</style", true);
  const peg$e8 = peg$otherExpectation("textarea");
  const peg$e9 = peg$literalExpectation("<textarea", true);
  const peg$e10 = peg$literalExpectation("</textarea", true);
  const peg$e11 = peg$otherExpectation("title");
  const peg$e12 = peg$literalExpectation("<title", true);
  const peg$e13 = peg$literalExpectation("</title", true);
  const peg$e14 = peg$otherExpectation("plaintext");
  const peg$e15 = peg$literalExpectation("<plaintext", true);
  const peg$e16 = peg$literalExpectation("</plaintext", true);
  const peg$e17 = peg$otherExpectation("element");
  const peg$e18 = peg$otherExpectation("begin tag");
  const peg$e19 = peg$literalExpectation("<", false);
  const peg$e20 = peg$otherExpectation("end tag");
  const peg$e21 = peg$literalExpectation("</", false);
  const peg$e22 = peg$otherExpectation("self close element");
  const peg$e23 = peg$otherExpectation("component");
  const peg$e24 = peg$otherExpectation("comment");
  const peg$e25 = peg$literalExpectation("<!--", false);
  const peg$e26 = peg$literalExpectation("-->", false);
  const peg$e27 = peg$otherExpectation("ExtHTML comment");
  const peg$e28 = peg$otherExpectation("single line comment");
  const peg$e29 = peg$literalExpectation("//", false);
  const peg$e30 = peg$literalExpectation("#", false);
  const peg$e31 = peg$otherExpectation("multiple line comment");
  const peg$e32 = peg$literalExpectation("/*", false);
  const peg$e33 = peg$literalExpectation("*/", false);
  const peg$e34 = peg$otherExpectation("doctype");
  const peg$e35 = peg$literalExpectation("<!DOCTYPE", true);
  const peg$e36 = peg$literalExpectation("public", true);
  const peg$e37 = peg$literalExpectation("system", true);
  const peg$e38 = peg$literalExpectation("/>", false);
  const peg$e39 = peg$otherExpectation("text node");
  const peg$e40 = peg$otherExpectation("dynamic text node");
  const peg$e41 = peg$otherExpectation("dynamic text");
  const peg$e42 = peg$otherExpectation("text");
  const peg$e43 = peg$classExpectation(["<"], true, false, false);
  const peg$e44 = peg$otherExpectation("attribute");
  const peg$e45 = peg$literalExpectation("=", false);
  const peg$e46 = peg$literalExpectation("*", false);
  const peg$e47 = peg$literalExpectation("(", false);
  const peg$e48 = peg$literalExpectation(")", false);
  const peg$e49 = peg$otherExpectation("dynamic attribute");
  const peg$e50 = peg$otherExpectation("global_boolean_arg_attribute");
  const peg$e51 = peg$literalExpectation("disabled", true);
  const peg$e52 = peg$literalExpectation("hidden", true);
  const peg$e53 = peg$literalExpectation("readonly", true);
  const peg$e54 = peg$otherExpectation("boolean_arg_attribute");
  const peg$e55 = peg$literalExpectation("allowfullscreen", true);
  const peg$e56 = peg$literalExpectation("allowpaymentrequest", true);
  const peg$e57 = peg$literalExpectation("async", true);
  const peg$e58 = peg$literalExpectation("autofocus", true);
  const peg$e59 = peg$literalExpectation("autoplay", true);
  const peg$e60 = peg$literalExpectation("checked", true);
  const peg$e61 = peg$literalExpectation("controls", true);
  const peg$e62 = peg$literalExpectation("default", true);
  const peg$e63 = peg$literalExpectation("defer", true);
  const peg$e64 = peg$literalExpectation("formnovalidate", true);
  const peg$e65 = peg$literalExpectation("inert", true);
  const peg$e66 = peg$literalExpectation("ismap", true);
  const peg$e67 = peg$literalExpectation("itemscope", true);
  const peg$e68 = peg$literalExpectation("loop", true);
  const peg$e69 = peg$literalExpectation("multiple", true);
  const peg$e70 = peg$literalExpectation("muted", true);
  const peg$e71 = peg$literalExpectation("nomodule", true);
  const peg$e72 = peg$literalExpectation("novalidate", true);
  const peg$e73 = peg$literalExpectation("open", true);
  const peg$e74 = peg$literalExpectation("playsinline", true);
  const peg$e75 = peg$literalExpectation("required", true);
  const peg$e76 = peg$literalExpectation("reversed", true);
  const peg$e77 = peg$literalExpectation("selected", true);
  const peg$e78 = peg$literalExpectation("shadowrootclonable", true);
  const peg$e79 = peg$literalExpectation("shadowrootdelegatesfocus", true);
  const peg$e80 = peg$literalExpectation("shadowrootserializable", true);
  const peg$e81 = peg$otherExpectation("read_only_media_attributes");
  const peg$e82 = peg$literalExpectation("duration", true);
  const peg$e83 = peg$literalExpectation("buffered", true);
  const peg$e84 = peg$literalExpectation("seekable", true);
  const peg$e85 = peg$literalExpectation("played", true);
  const peg$e86 = peg$literalExpectation("seeking", true);
  const peg$e87 = peg$literalExpectation("ended", true);
  const peg$e88 = peg$literalExpectation("readyState", true);
  const peg$e89 = peg$otherExpectation("read_only_video_attributes");
  const peg$e90 = peg$literalExpectation("videoHeight", true);
  const peg$e91 = peg$literalExpectation("videoWidth", true);
  const peg$e92 = peg$literalExpectation("naturalWidth", true);
  const peg$e93 = peg$literalExpectation("naturalHeight", true);
  const peg$e94 = peg$otherExpectation("data-*");
  const peg$e95 = peg$literalExpectation("data-", false);
  const peg$e96 = peg$classExpectation([["a", "z"], ["A", "Z"], "_"], false, false, false);
  const peg$e97 = peg$classExpectation(["-"], false, false, false);
  const peg$e98 = peg$classExpectation([["a", "z"], ["A", "Z"], ["0", "9"], ":", "_"], false, false, false);
  const peg$e99 = peg$otherExpectation("global_non_boolean_attribute");
  const peg$e100 = peg$literalExpectation("accesskey", true);
  const peg$e101 = peg$literalExpectation("class", true);
  const peg$e102 = peg$literalExpectation("contenteditable", true);
  const peg$e103 = peg$literalExpectation("contextmenu", true);
  const peg$e104 = peg$literalExpectation("dir", true);
  const peg$e105 = peg$literalExpectation("draggable", true);
  const peg$e106 = peg$literalExpectation("dropzone", true);
  const peg$e107 = peg$literalExpectation("id", true);
  const peg$e108 = peg$literalExpectation("inputmode", true);
  const peg$e109 = peg$literalExpectation("lang", true);
  const peg$e110 = peg$literalExpectation("spellcheck", true);
  const peg$e111 = peg$literalExpectation("style", true);
  const peg$e112 = peg$literalExpectation("tabindex", true);
  const peg$e113 = peg$literalExpectation("title", true);
  const peg$e114 = peg$literalExpectation("translate", true);
  const peg$e115 = peg$otherExpectation("no_arg_attribute");
  const peg$e116 = peg$otherExpectation("no_arg_macro_attribute");
  const peg$e117 = peg$otherExpectation("event attribute");
  const peg$e118 = peg$literalExpectation("@", false);
  const peg$e119 = peg$literalExpectation(".", false);
  const peg$e120 = peg$literalExpectation(":", false);
  const peg$e121 = peg$literalExpectation("if", false);
  const peg$e122 = peg$literalExpectation("for", false);
  const peg$e123 = peg$literalExpectation("model", false);
  const peg$e124 = peg$literalExpectation("in", false);
  const peg$e125 = peg$literalExpectation("out", false);
  const peg$e126 = peg$literalExpectation("forelse", false);
  const peg$e127 = peg$literalExpectation("show", false);
  const peg$e128 = peg$literalExpectation("hide", false);
  const peg$e129 = peg$literalExpectation("idname", false);
  const peg$e130 = peg$literalExpectation("perm", false);
  const peg$e131 = peg$literalExpectation("val", false);
  const peg$e132 = peg$literalExpectation("mask", false);
  const peg$e133 = peg$literalExpectation("perm-group", false);
  const peg$e134 = peg$literalExpectation("perm-mirror", false);
  const peg$e135 = peg$literalExpectation("perm-redirect", false);
  const peg$e136 = peg$otherExpectation("html attribute");
  const peg$e137 = peg$literalExpectation("background", true);
  const peg$e138 = peg$literalExpectation("bgcolor", true);
  const peg$e139 = peg$literalExpectation("border", true);
  const peg$e140 = peg$literalExpectation("color", true);
  const peg$e141 = peg$literalExpectation("height", true);
  const peg$e142 = peg$literalExpectation("manifest", true);
  const peg$e143 = peg$literalExpectation("width", true);
  const peg$e144 = peg$literalExpectation("accept-charset", true);
  const peg$e145 = peg$literalExpectation("action", true);
  const peg$e146 = peg$literalExpectation("align", true);
  const peg$e147 = peg$literalExpectation("allow", true);
  const peg$e148 = peg$literalExpectation("alt", true);
  const peg$e149 = peg$literalExpectation("autocapitalize", true);
  const peg$e150 = peg$literalExpectation("autocomplete", true);
  const peg$e151 = peg$literalExpectation("capture", true);
  const peg$e152 = peg$literalExpectation("challenge", true);
  const peg$e153 = peg$literalExpectation("charset", true);
  const peg$e154 = peg$literalExpectation("cite", true);
  const peg$e155 = peg$literalExpectation("code", true);
  const peg$e156 = peg$literalExpectation("codebase", true);
  const peg$e157 = peg$literalExpectation("cols", true);
  const peg$e158 = peg$literalExpectation("colspan", true);
  const peg$e159 = peg$literalExpectation("content", true);
  const peg$e160 = peg$literalExpectation("coords", true);
  const peg$e161 = peg$literalExpectation("crossorigin", true);
  const peg$e162 = peg$literalExpectation("csp", true);
  const peg$e163 = peg$literalExpectation("data", true);
  const peg$e164 = peg$literalExpectation("datetime", true);
  const peg$e165 = peg$literalExpectation("decoding", true);
  const peg$e166 = peg$literalExpectation("dirname", true);
  const peg$e167 = peg$literalExpectation("download", true);
  const peg$e168 = peg$literalExpectation("enctype", true);
  const peg$e169 = peg$literalExpectation("enterkeyhint", true);
  const peg$e170 = peg$literalExpectation("for", true);
  const peg$e171 = peg$literalExpectation("form", true);
  const peg$e172 = peg$literalExpectation("formaction", true);
  const peg$e173 = peg$literalExpectation("formenctype", true);
  const peg$e174 = peg$literalExpectation("formmethod", true);
  const peg$e175 = peg$literalExpectation("formtarget", true);
  const peg$e176 = peg$literalExpectation("headers", true);
  const peg$e177 = peg$literalExpectation("high", true);
  const peg$e178 = peg$literalExpectation("href", true);
  const peg$e179 = peg$literalExpectation("hreflang", true);
  const peg$e180 = peg$literalExpectation("http-equiv", true);
  const peg$e181 = peg$literalExpectation("icon", true);
  const peg$e182 = peg$literalExpectation("importance", true);
  const peg$e183 = peg$literalExpectation("integrity", true);
  const peg$e184 = peg$literalExpectation("intrinsicsize", true);
  const peg$e185 = peg$literalExpectation("keytype", true);
  const peg$e186 = peg$literalExpectation("kind", true);
  const peg$e187 = peg$literalExpectation("label", true);
  const peg$e188 = peg$literalExpectation("language", true);
  const peg$e189 = peg$literalExpectation("loading", true);
  const peg$e190 = peg$literalExpectation("list", true);
  const peg$e191 = peg$literalExpectation("low", true);
  const peg$e192 = peg$literalExpectation("max", true);
  const peg$e193 = peg$literalExpectation("maxlength", true);
  const peg$e194 = peg$literalExpectation("minlength", true);
  const peg$e195 = peg$literalExpectation("media", true);
  const peg$e196 = peg$literalExpectation("method", true);
  const peg$e197 = peg$literalExpectation("min", true);
  const peg$e198 = peg$literalExpectation("name", true);
  const peg$e199 = peg$literalExpectation("optimum", true);
  const peg$e200 = peg$literalExpectation("pattern", true);
  const peg$e201 = peg$literalExpectation("ping", true);
  const peg$e202 = peg$literalExpectation("placeholder", true);
  const peg$e203 = peg$literalExpectation("poster", true);
  const peg$e204 = peg$literalExpectation("preload", true);
  const peg$e205 = peg$literalExpectation("radiogroup", true);
  const peg$e206 = peg$literalExpectation("referrerpolicy", true);
  const peg$e207 = peg$literalExpectation("rel", true);
  const peg$e208 = peg$literalExpectation("rows", true);
  const peg$e209 = peg$literalExpectation("rowspan", true);
  const peg$e210 = peg$literalExpectation("sandbox", true);
  const peg$e211 = peg$literalExpectation("scope", true);
  const peg$e212 = peg$literalExpectation("scoped", true);
  const peg$e213 = peg$literalExpectation("shape", true);
  const peg$e214 = peg$literalExpectation("size", true);
  const peg$e215 = peg$literalExpectation("sizes", true);
  const peg$e216 = peg$literalExpectation("slot", true);
  const peg$e217 = peg$literalExpectation("span", true);
  const peg$e218 = peg$literalExpectation("src", true);
  const peg$e219 = peg$literalExpectation("srcdoc", true);
  const peg$e220 = peg$literalExpectation("srclang", true);
  const peg$e221 = peg$literalExpectation("srcset", true);
  const peg$e222 = peg$literalExpectation("start", true);
  const peg$e223 = peg$literalExpectation("step", true);
  const peg$e224 = peg$literalExpectation("summary", true);
  const peg$e225 = peg$literalExpectation("target", true);
  const peg$e226 = peg$literalExpectation("type", true);
  const peg$e227 = peg$literalExpectation("usemap", true);
  const peg$e228 = peg$literalExpectation("value", true);
  const peg$e229 = peg$literalExpectation("wrap", true);
  const peg$e230 = peg$literalExpectation("keydown", false);
  const peg$e231 = peg$literalExpectation("keypress", false);
  const peg$e232 = peg$literalExpectation("keyup", false);
  const peg$e233 = peg$literalExpectation("enter", false);
  const peg$e234 = peg$literalExpectation("tab", false);
  const peg$e235 = peg$literalExpectation("delete", false);
  const peg$e236 = peg$literalExpectation("esc", false);
  const peg$e237 = peg$literalExpectation("space", false);
  const peg$e238 = peg$literalExpectation("up", false);
  const peg$e239 = peg$literalExpectation("down", false);
  const peg$e240 = peg$literalExpectation("left", false);
  const peg$e241 = peg$literalExpectation("right", false);
  const peg$e242 = peg$literalExpectation("ctrl", false);
  const peg$e243 = peg$literalExpectation("alt", false);
  const peg$e244 = peg$literalExpectation("shift", false);
  const peg$e245 = peg$literalExpectation("meta", false);
  const peg$e246 = peg$literalExpectation("altgraph", false);
  const peg$e247 = peg$literalExpectation("fn", false);
  const peg$e248 = peg$literalExpectation("click", false);
  const peg$e249 = peg$literalExpectation("mousedown", false);
  const peg$e250 = peg$literalExpectation("mouseup", false);
  const peg$e251 = peg$literalExpectation("mousemove", false);
  const peg$e252 = peg$literalExpectation("dblclick", false);
  const peg$e253 = peg$literalExpectation("mouseover", false);
  const peg$e254 = peg$literalExpectation("mouseout", false);
  const peg$e255 = peg$literalExpectation("mouseenter", false);
  const peg$e256 = peg$literalExpectation("mouseleave", false);
  const peg$e257 = peg$literalExpectation("middle", false);
  const peg$e258 = peg$literalExpectation("stop", false);
  const peg$e259 = peg$literalExpectation("prevent", false);
  const peg$e260 = peg$literalExpectation("capture", false);
  const peg$e261 = peg$literalExpectation("self", false);
  const peg$e262 = peg$literalExpectation("once", false);
  const peg$e263 = peg$literalExpectation("passive", false);
  const peg$e264 = peg$literalExpectation("debounce", false);
  const peg$e265 = peg$literalExpectation("throttle", false);
  const peg$e266 = peg$otherExpectation("string");
  const peg$e267 = peg$classExpectation(["\"", "'", "<", ">", "`", " "], true, false, false);
  const peg$e268 = peg$literalExpectation("\"", false);
  const peg$e269 = peg$classExpectation(["\""], true, false, false);
  const peg$e270 = peg$literalExpectation("'", false);
  const peg$e271 = peg$classExpectation(["'"], true, false, false);
  const peg$e272 = peg$literalExpectation("{", false);
  const peg$e273 = peg$classExpectation(["}"], true, false, false);
  const peg$e274 = peg$literalExpectation("}", false);
  const peg$e275 = peg$literalExpectation("area", true);
  const peg$e276 = peg$literalExpectation("base", true);
  const peg$e277 = peg$literalExpectation("br", true);
  const peg$e278 = peg$literalExpectation("col", true);
  const peg$e279 = peg$literalExpectation("embed", true);
  const peg$e280 = peg$literalExpectation("hr", true);
  const peg$e281 = peg$literalExpectation("img", true);
  const peg$e282 = peg$literalExpectation("input", true);
  const peg$e283 = peg$literalExpectation("link", true);
  const peg$e284 = peg$literalExpectation("wbr", true);
  const peg$e285 = peg$literalExpectation("command", true);
  const peg$e286 = peg$literalExpectation("keygen", true);
  const peg$e287 = peg$literalExpectation("menuitem", true);
  const peg$e288 = peg$literalExpectation("meta", true);
  const peg$e289 = peg$literalExpectation("param", true);
  const peg$e290 = peg$literalExpectation("source", true);
  const peg$e291 = peg$literalExpectation("track", true);
  const peg$e292 = peg$literalExpectation("acronym", true);
  const peg$e293 = peg$literalExpectation("applet", true);
  const peg$e294 = peg$literalExpectation("basefont", true);
  const peg$e295 = peg$literalExpectation("big", true);
  const peg$e296 = peg$literalExpectation("center", true);
  const peg$e297 = peg$literalExpectation("font", true);
  const peg$e298 = peg$literalExpectation("frameset", true);
  const peg$e299 = peg$literalExpectation("frame", true);
  const peg$e300 = peg$literalExpectation("noframes", true);
  const peg$e301 = peg$literalExpectation("strike", true);
  const peg$e302 = peg$literalExpectation("tt", true);
  const peg$e303 = peg$literalExpectation("abbr", true);
  const peg$e304 = peg$literalExpectation("address", true);
  const peg$e305 = peg$literalExpectation("article", true);
  const peg$e306 = peg$literalExpectation("aside", true);
  const peg$e307 = peg$literalExpectation("audio", true);
  const peg$e308 = peg$literalExpectation("a", true);
  const peg$e309 = peg$literalExpectation("bdi", true);
  const peg$e310 = peg$literalExpectation("bdo", true);
  const peg$e311 = peg$literalExpectation("blockquote", true);
  const peg$e312 = peg$literalExpectation("body", true);
  const peg$e313 = peg$literalExpectation("button", true);
  const peg$e314 = peg$literalExpectation("b", true);
  const peg$e315 = peg$literalExpectation("canvas", true);
  const peg$e316 = peg$literalExpectation("caption", true);
  const peg$e317 = peg$literalExpectation("colgroup", true);
  const peg$e318 = peg$literalExpectation("datalist", true);
  const peg$e319 = peg$literalExpectation("dd", true);
  const peg$e320 = peg$literalExpectation("del", true);
  const peg$e321 = peg$literalExpectation("details", true);
  const peg$e322 = peg$literalExpectation("dfn", true);
  const peg$e323 = peg$literalExpectation("dialog", true);
  const peg$e324 = peg$literalExpectation("div", true);
  const peg$e325 = peg$literalExpectation("dl", true);
  const peg$e326 = peg$literalExpectation("dt", true);
  const peg$e327 = peg$literalExpectation("em", true);
  const peg$e328 = peg$literalExpectation("fieldset", true);
  const peg$e329 = peg$literalExpectation("figcaption", true);
  const peg$e330 = peg$literalExpectation("figure", true);
  const peg$e331 = peg$literalExpectation("footer", true);
  const peg$e332 = peg$literalExpectation("h1", true);
  const peg$e333 = peg$literalExpectation("h2", true);
  const peg$e334 = peg$literalExpectation("h3", true);
  const peg$e335 = peg$literalExpectation("h4", true);
  const peg$e336 = peg$literalExpectation("h5", true);
  const peg$e337 = peg$literalExpectation("h6", true);
  const peg$e338 = peg$literalExpectation("head", true);
  const peg$e339 = peg$literalExpectation("header", true);
  const peg$e340 = peg$literalExpectation("html", true);
  const peg$e341 = peg$literalExpectation("iframe", true);
  const peg$e342 = peg$literalExpectation("ins", true);
  const peg$e343 = peg$literalExpectation("i", true);
  const peg$e344 = peg$literalExpectation("kbd", true);
  const peg$e345 = peg$literalExpectation("legend", true);
  const peg$e346 = peg$literalExpectation("li", true);
  const peg$e347 = peg$literalExpectation("main", true);
  const peg$e348 = peg$literalExpectation("map", true);
  const peg$e349 = peg$literalExpectation("mark", true);
  const peg$e350 = peg$literalExpectation("meter", true);
  const peg$e351 = peg$literalExpectation("nav", true);
  const peg$e352 = peg$literalExpectation("noscript", true);
  const peg$e353 = peg$literalExpectation("object", true);
  const peg$e354 = peg$literalExpectation("ol", true);
  const peg$e355 = peg$literalExpectation("optgroup", true);
  const peg$e356 = peg$literalExpectation("option", true);
  const peg$e357 = peg$literalExpectation("output", true);
  const peg$e358 = peg$literalExpectation("p", true);
  const peg$e359 = peg$literalExpectation("picture", true);
  const peg$e360 = peg$literalExpectation("pre", true);
  const peg$e361 = peg$literalExpectation("progress", true);
  const peg$e362 = peg$literalExpectation("q", true);
  const peg$e363 = peg$literalExpectation("rp", true);
  const peg$e364 = peg$literalExpectation("rt", true);
  const peg$e365 = peg$literalExpectation("ruby", true);
  const peg$e366 = peg$literalExpectation("samp", true);
  const peg$e367 = peg$literalExpectation("script", true);
  const peg$e368 = peg$literalExpectation("section", true);
  const peg$e369 = peg$literalExpectation("select", true);
  const peg$e370 = peg$literalExpectation("small", true);
  const peg$e371 = peg$literalExpectation("strong", true);
  const peg$e372 = peg$literalExpectation("sub", true);
  const peg$e373 = peg$literalExpectation("sup", true);
  const peg$e374 = peg$literalExpectation("svg", true);
  const peg$e375 = peg$literalExpectation("s", true);
  const peg$e376 = peg$literalExpectation("table", true);
  const peg$e377 = peg$literalExpectation("tbody", true);
  const peg$e378 = peg$literalExpectation("td", true);
  const peg$e379 = peg$literalExpectation("template", true);
  const peg$e380 = peg$literalExpectation("tfoot", true);
  const peg$e381 = peg$literalExpectation("th", true);
  const peg$e382 = peg$literalExpectation("thead", true);
  const peg$e383 = peg$literalExpectation("time", true);
  const peg$e384 = peg$literalExpectation("tr", true);
  const peg$e385 = peg$literalExpectation("ul", true);
  const peg$e386 = peg$literalExpectation("u", true);
  const peg$e387 = peg$literalExpectation("var", true);
  const peg$e388 = peg$literalExpectation("video", true);
  const peg$e389 = peg$literalExpectation("circle", true);
  const peg$e390 = peg$literalExpectation("ellipse", true);
  const peg$e391 = peg$literalExpectation("line", true);
  const peg$e392 = peg$literalExpectation("path", true);
  const peg$e393 = peg$literalExpectation("polygon", true);
  const peg$e394 = peg$literalExpectation("polyline", true);
  const peg$e395 = peg$literalExpectation("rect", true);
  const peg$e396 = peg$literalExpectation("image", true);
  const peg$e397 = peg$literalExpectation("g", true);
  const peg$e398 = peg$literalExpectation("symbol", true);
  const peg$e399 = peg$literalExpectation("defs", true);
  const peg$e400 = peg$literalExpectation("metadata", true);
  const peg$e401 = peg$literalExpectation("switch", true);
  const peg$e402 = peg$literalExpectation("use", true);
  const peg$e403 = peg$literalExpectation("view", true);
  const peg$e404 = peg$literalExpectation("feBlend", true);
  const peg$e405 = peg$literalExpectation("feColorMatrix", true);
  const peg$e406 = peg$literalExpectation("feComposite", true);
  const peg$e407 = peg$literalExpectation("feComponentTransfer", true);
  const peg$e408 = peg$literalExpectation("feConvolveMatrix", true);
  const peg$e409 = peg$literalExpectation("feDiffuseLighting", true);
  const peg$e410 = peg$literalExpectation("feDisplacementMap", true);
  const peg$e411 = peg$literalExpectation("feDistantLight", true);
  const peg$e412 = peg$literalExpectation("feDropShadow", true);
  const peg$e413 = peg$literalExpectation("feFlood", true);
  const peg$e414 = peg$literalExpectation("feFuncA", true);
  const peg$e415 = peg$literalExpectation("feFuncB", true);
  const peg$e416 = peg$literalExpectation("feFuncG", true);
  const peg$e417 = peg$literalExpectation("feFuncR", true);
  const peg$e418 = peg$literalExpectation("feGaussianBlur", true);
  const peg$e419 = peg$literalExpectation("feImage", true);
  const peg$e420 = peg$literalExpectation("feMerge", true);
  const peg$e421 = peg$literalExpectation("feMergeNode", true);
  const peg$e422 = peg$literalExpectation("feMorphology", true);
  const peg$e423 = peg$literalExpectation("feOffset", true);
  const peg$e424 = peg$literalExpectation("fePointLight", true);
  const peg$e425 = peg$literalExpectation("feSpecularLighting", true);
  const peg$e426 = peg$literalExpectation("feSpotLight", true);
  const peg$e427 = peg$literalExpectation("feTile", true);
  const peg$e428 = peg$literalExpectation("feTurbulence", true);
  const peg$e429 = peg$literalExpectation("animate", true);
  const peg$e430 = peg$literalExpectation("animateMotion", true);
  const peg$e431 = peg$literalExpectation("animateTransform", true);
  const peg$e432 = peg$literalExpectation("mpath", true);
  const peg$e433 = peg$literalExpectation("set", true);
  const peg$e434 = peg$literalExpectation("text", true);
  const peg$e435 = peg$literalExpectation("tspan", true);
  const peg$e436 = peg$literalExpectation("textPath", true);
  const peg$e437 = peg$literalExpectation("tref", true);
  const peg$e438 = peg$literalExpectation("desc", true);
  const peg$e439 = peg$literalExpectation("font-face", true);
  const peg$e440 = peg$literalExpectation("glyph", true);
  const peg$e441 = peg$literalExpectation("missing-glyph", true);
  const peg$e442 = peg$literalExpectation("hkern", true);
  const peg$e443 = peg$literalExpectation("vkern", true);
  const peg$e444 = peg$literalExpectation("clipPath", true);
  const peg$e445 = peg$literalExpectation("mask", true);
  const peg$e446 = peg$literalExpectation("marker", true);
  const peg$e447 = peg$literalExpectation("filter", true);
  const peg$e448 = peg$literalExpectation("foreignObject", true);
  const peg$e449 = peg$literalExpectation("mesh", true);
  const peg$e450 = peg$literalExpectation("color-profile", true);
  const peg$e451 = peg$literalExpectation("cursor", true);
  const peg$e452 = peg$literalExpectation("discard", true);
  const peg$e453 = peg$literalExpectation("hatch", true);
  const peg$e454 = peg$literalExpectation("hatchpath", true);
  const peg$e455 = peg$literalExpectation("linearGradient", true);
  const peg$e456 = peg$literalExpectation("meshgradient", true);
  const peg$e457 = peg$literalExpectation("meshpatch", true);
  const peg$e458 = peg$literalExpectation("meshrow", true);
  const peg$e459 = peg$literalExpectation("radialGradient", true);
  const peg$e460 = peg$literalExpectation("solidcolor", true);
  const peg$e461 = peg$literalExpectation("stop", true);
  const peg$e462 = peg$literalExpectation("unknown", true);
  const peg$e463 = peg$classExpectation([["a", "z"], ["A", "Z"], "_", "-"], false, false, false);
  const peg$e464 = peg$classExpectation([["a", "z"], ["A", "Z"], ["0", "9"], ":", "_", "-"], false, false, false);
  const peg$e465 = peg$classExpectation([["a", "z"], ["A", "Z"], ["0", "9"], "_", "-"], false, false, false);
  const peg$e466 = peg$classExpectation([["a", "z"], ["A", "Z"], "_", "$"], false, false, false);
  const peg$e467 = peg$classExpectation([["a", "z"], ["A", "Z"], "_", "$", ["0", "9"]], false, false, false);
  const peg$e468 = peg$otherExpectation("required space characters");
  const peg$e469 = peg$classExpectation([" ", "\t", "\f"], false, false, false);
  const peg$e470 = peg$otherExpectation("new line");
  const peg$e471 = peg$classExpectation(["\r", "\n"], false, false, false);

  function peg$f0(nodes) {    return nodes;  }
  function peg$f1(attrs, c) {    return c;  }
  function peg$f2(attrs, content) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'SCRIPT_TAG', value: content.join(""), attrs:attrs.filter((v) => { return v.type == 'attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f3(attrs, c) {    return c;  }
  function peg$f4(attrs, content) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'STYLE_TAG', value: content.join(""), attrs:attrs.filter((v) => { return v.type == 'attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f5(attrs, c) {    return c;  }
  function peg$f6(attrs, content) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'TEXTAREA_TAG', value: content.join(""), attrs:attrs.filter((v) => { return v.type == 'attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f7(attrs, c) {    return c;  }
  function peg$f8(attrs, content) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'TITLE_TAG', value: content.join(""), attrs:attrs.filter((v) => { return v.type == 'attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f9(attrs, c) {    return c;  }
  function peg$f10(attrs, content) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'PLAINTEXT_TAG', value: content.join(""), attrs:attrs.filter((v) => { return v.type == 'attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f11(begin, children, end) {    begin.location = location(); begin.children.push(...children); return begin;  }
  function peg$f12(name, attrs) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'HTML_NESTED_TAG', value: name.toUpperCase(), attrs:attrs.filter((v) => { return ['attr','no_arg_attr'].includes(v.type) }).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f13(name, attrs) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'NESTED_TAG', value: name.toUpperCase(), attrs:attrs.filter((v) => { return ['attr','no_arg_attr'].includes(v.type) }).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f14(name, attrs) {    attrs = attrs[0] || [];  return { section: 'ExtHTMLDocument', type: 'SELF_CLOSE_TAG', value: name.toUpperCase(), attrs:attrs.filter((v) => { return v.type == 'attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f15(begin, children, end) {    return { section: 'ExtHTMLDocument', type: 'COMPONENT', value: begin.value, attrs:[...begin.attrs], dynamic_attrs:[...begin.dynamic_attrs], event_attrs:[...begin.event_attrs], children:[...children], location: location() };  }
  function peg$f16(name, attrs) {    attrs = attrs[0] || []; return { section: 'ExtHTMLDocument', type: 'COMPONENT', value: name.toUpperCase(), attrs:attrs.filter((v) => { return v.type == 'attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), dynamic_attrs:attrs.filter((v) => { return v.type == 'dyn_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), event_attrs:attrs.filter((v) => { return v.type == 'event_attr'}).map( (v) => { delete v.type;  v.pos = attrs.indexOf(v); return v}), children:[], location: location() };  }
  function peg$f17(text) {    return { section: 'ExtHTMLDocument', type: 'COMMENT_TEXT', value: text, location: location()}  }
  function peg$f18(comments) {    return comments;  }
  function peg$f19(c) {    return { section: 'ExtHTMLDocument', type: 'SINGLE_LINE_COMMENT', value: c.map(aV =>{ return aV[1]}).join(""), location: location() }  }
  function peg$f20(text) {    return { section: 'ExtHTMLDocument', type: 'MULTIPLE_LINE_COMMENT', value: text.map(aV =>{ return aV[1]}).join(""), location: location() }  }
  function peg$f21(text) {    return text.map(function(v,idx,aOrigin){ return v.join(""); }).join("");  }
  function peg$f22(v) {    return { section: 'ExtHTMLDocument', type: 'TEXT_NODE', value: v.join(""), attrs:[], dynamic_attrs:[], event_attrs:[], children:[], location: location() };  }
  function peg$f23(v) {    return { section: 'ExtHTMLDocument', type: 'DYNAMIC_TEXT_NODE', value: v, attrs:[], dynamic_attrs:[], event_attrs:[], children:[], location: location() };  }
  function peg$f24(v) {    return v;  }
  function peg$f25(c) {    return c  }
  function peg$f26(c) {    return c  }
  function peg$f27(attrs) {    return attrs;  }
  function peg$f28(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "html_global_boolean_attribute"}  }
  function peg$f29(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "html_boolean_attribute"}  }
  function peg$f30(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "html_data_attribute"}  }
  function peg$f31(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "html_global_non_boolean_attribute"}  }
  function peg$f32(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "html_media_readonly"}  }
  function peg$f33(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "html_video_readonly"}  }
  function peg$f34(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "html_attribute"}  }
  function peg$f35(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "custom_attribute"}  }
  function peg$f36(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "drall_directive"}  }
  function peg$f37(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"attr", category: "macro_directive"}  }
  function peg$f38(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "html_global_boolean_attribute"}  }
  function peg$f39(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "html_boolean_attribute"}  }
  function peg$f40(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "html_data_attribute"}  }
  function peg$f41(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "html_global_non_boolean_attribute"}  }
  function peg$f42(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "html_media_readonly"}  }
  function peg$f43(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "html_video_readonly"}  }
  function peg$f44(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "html_attribute"}  }
  function peg$f45(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "lang_directive"}  }
  function peg$f46(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "drall_directive"}  }
  function peg$f47(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "optimization_directive"}  }
  function peg$f48(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "macro_directive"}  }
  function peg$f49(name, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"dyn_attr", category: "custom_attribute"}  }
  function peg$f50(name) {    return { name: name, value: null, type:"no_arg_attr", category: "lang_directive"}  }
  function peg$f51(name) {    return { name: name, value: null, type:"no_arg_attr", category: "macro_directive"}  }
  function peg$f52(name, event_modifiers, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"event_attr", category: "html_attribute", modifiers:event_modifiers.map(v=>v[1])}  }
  function peg$f53(name, keyboard_keys, event_modifiers, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"event_attr", category: "html_attribute", modifiers:event_modifiers.map(v=>v[1]), keyboard_keys:keyboard_keys ? keyboard_keys.filter((v,idx)=>{return idx > 0}) : []}  }
  function peg$f54(name, mouse_keys, keyboard_modifiers_keys, event_modifiers, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"event_attr", category: "html_attribute", modifiers:event_modifiers.map(v=>v[1]), mouse_keys:mouse_keys ? mouse_keys[1] : "", keyboard_modifiers_keys:keyboard_modifiers_keys ? keyboard_modifiers_keys.flat(2).filter(v=>[".",":"].indexOf(v) == -1) : []}  }
  function peg$f55(name, keyboard_modifiers_keys, mouse_keys, event_modifiers, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"event_attr", category: "html_attribute", modifiers:event_modifiers.map(v=>v[1]), mouse_keys:mouse_keys ? mouse_keys : "", keyboard_modifiers_keys:keyboard_modifiers_keys ? keyboard_modifiers_keys.flat(2).filter(v=>[".",":"].indexOf(v) == -1) : []}  }
  function peg$f56(name, event_modifiers, text) {    return { name: name, value: (text && text[3]) ? text[3] : "", type:"event_attr", category: "custom_attribute", modifiers:event_modifiers.map(v=>v[1])}  }
  function peg$f57(name) {    return { name: name, value: null, type:"dyn_attr", category: "html_dom_ref_directive"}  }
  function peg$f58(ch) {    return ch.join("");  }
  function peg$f59(ch) {    return ch.join("");  }
  function peg$f60(ch) {    return ch.join("");  }
  function peg$f61(ch) {    return ch.join("");  }
  function peg$f62(v) {    return { section: 'ExtHTMLDocument', type: 'NEW_LINE', value: v, attrs:[], dynamic_attrs:[], event_attrs:[], children:[], location: location() };  }
  let peg$currPos = options.peg$currPos | 0;
  let peg$savedPos = peg$currPos;
  const peg$posDetailsCache = [{ line: 1, column: 1 }];
  let peg$maxFailPos = peg$currPos;
  let peg$maxFailExpected = options.peg$maxFailExpected || [];
  let peg$silentFails = options.peg$silentFails | 0;

  let peg$result;

  if (options.startRule) {
    if (!(options.startRule in peg$startRuleFunctions)) {
      throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
    }

    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
  }

  function text() {
    return input.substring(peg$savedPos, peg$currPos);
  }

  function offset() {
    return peg$savedPos;
  }

  function range() {
    return {
      source: peg$source,
      start: peg$savedPos,
      end: peg$currPos,
    };
  }

  function location() {
    return peg$computeLocation(peg$savedPos, peg$currPos);
  }

  function expected(description, location) {
    location = location !== undefined
      ? location
      : peg$computeLocation(peg$savedPos, peg$currPos);

    throw peg$buildStructuredError(
      [peg$otherExpectation(description)],
      input.substring(peg$savedPos, peg$currPos),
      location
    );
  }

  function error(message, location) {
    location = location !== undefined
      ? location
      : peg$computeLocation(peg$savedPos, peg$currPos);

    throw peg$buildSimpleError(message, location);
  }

  function peg$getUnicode(pos = peg$currPos) {
    const cp = input.codePointAt(pos);
    if (cp === undefined) {
      return "";
    }
    return String.fromCodePoint(cp);
  }

  function peg$literalExpectation(text, ignoreCase) {
    return { type: "literal", text, ignoreCase };
  }

  function peg$classExpectation(parts, inverted, ignoreCase, unicode) {
    return { type: "class", parts, inverted, ignoreCase, unicode };
  }

  function peg$anyExpectation() {
    return { type: "any" };
  }

  function peg$endExpectation() {
    return { type: "end" };
  }

  function peg$otherExpectation(description) {
    return { type: "other", description };
  }

  function peg$computePosDetails(pos) {
    let details = peg$posDetailsCache[pos];
    let p;

    if (details) {
      return details;
    } else {
      if (pos >= peg$posDetailsCache.length) {
        p = peg$posDetailsCache.length - 1;
      } else {
        p = pos;
        while (!peg$posDetailsCache[--p]) {}
      }

      details = peg$posDetailsCache[p];
      details = {
        line: details.line,
        column: details.column,
      };

      while (p < pos) {
        if (input.charCodeAt(p) === 10) {
          details.line++;
          details.column = 1;
        } else {
          details.column++;
        }

        p++;
      }

      peg$posDetailsCache[pos] = details;

      return details;
    }
  }

  function peg$computeLocation(startPos, endPos, offset) {
    const startPosDetails = peg$computePosDetails(startPos);
    const endPosDetails = peg$computePosDetails(endPos);

    const res = {
      source: peg$source,
      start: {
        offset: startPos,
        line: startPosDetails.line,
        column: startPosDetails.column,
      },
      end: {
        offset: endPos,
        line: endPosDetails.line,
        column: endPosDetails.column,
      },
    };
    if (offset && peg$source && (typeof peg$source.offset === "function")) {
      res.start = peg$source.offset(res.start);
      res.end = peg$source.offset(res.end);
    }
    return res;
  }

  function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) { return; }

    if (peg$currPos > peg$maxFailPos) {
      peg$maxFailPos = peg$currPos;
      peg$maxFailExpected = [];
    }

    peg$maxFailExpected.push(expected);
  }

  function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location);
  }

  function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(
      peg$SyntaxError.buildMessage(expected, found),
      expected,
      found,
      location
    );
  }

  function peg$parseExtHTMLDocument() {
    let s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parse__();
    s2 = [];
    s3 = peg$parseElement();
    while (s3 !== peg$FAILED) {
      s2.push(s3);
      s3 = peg$parseElement();
    }
    peg$savedPos = s0;
    s0 = peg$f0(s2);

    return s0;
  }

  function peg$parseElement() {
    let s0;

    s0 = peg$parseNL();
    if (s0 === peg$FAILED) {
      s0 = peg$parseRawText();
      if (s0 === peg$FAILED) {
        s0 = peg$parseNested();
        if (s0 === peg$FAILED) {
          s0 = peg$parseSelfClose();
          if (s0 === peg$FAILED) {
            s0 = peg$parseComment();
            if (s0 === peg$FAILED) {
              s0 = peg$parseExtHTMLComment();
              if (s0 === peg$FAILED) {
                s0 = peg$parseDocType();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseComponent();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parseDynamicTextNode();
                    if (s0 === peg$FAILED) {
                      s0 = peg$parseTextNode();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseRawText() {
    let s0;

    s0 = peg$parseScript();
    if (s0 === peg$FAILED) {
      s0 = peg$parseStyle();
      if (s0 === peg$FAILED) {
        s0 = peg$parseTextarea();
        if (s0 === peg$FAILED) {
          s0 = peg$parseTitle();
          if (s0 === peg$FAILED) {
            s0 = peg$parsePlainText();
          }
        }
      }
    }

    return s0;
  }

  function peg$parseScript() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = input.substr(peg$currPos, 7);
    if (s1.toLowerCase() === peg$c0) {
      peg$currPos += (7);
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e1); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$parseAttributes();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseAttributes();
      }
      if (input.charCodeAt(peg$currPos) === 62) {
        s3 = peg$c1;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e2); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        s5 = [];
        s6 = peg$currPos;
        s7 = peg$currPos;
        peg$silentFails++;
        s8 = peg$currPos;
        s9 = input.substr(peg$currPos, 8);
        if (s9.toLowerCase() === peg$c2) {
          peg$currPos += (8);
        } else {
          s9 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e3); }
        }
        if (s9 !== peg$FAILED) {
          s10 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s11 = peg$c1;
            peg$currPos++;
          } else {
            s11 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s11 !== peg$FAILED) {
            s9 = [s9, s10, s11];
            s8 = s9;
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
        } else {
          peg$currPos = s8;
          s8 = peg$FAILED;
        }
        peg$silentFails--;
        if (s8 === peg$FAILED) {
          s7 = undefined;
        } else {
          peg$currPos = s7;
          s7 = peg$FAILED;
        }
        if (s7 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s8 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s8 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e4); }
          }
          if (s8 !== peg$FAILED) {
            peg$savedPos = s6;
            s6 = peg$f1(s2, s8);
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        } else {
          peg$currPos = s6;
          s6 = peg$FAILED;
        }
        while (s6 !== peg$FAILED) {
          s5.push(s6);
          s6 = peg$currPos;
          s7 = peg$currPos;
          peg$silentFails++;
          s8 = peg$currPos;
          s9 = input.substr(peg$currPos, 8);
          if (s9.toLowerCase() === peg$c2) {
            peg$currPos += (8);
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e3); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 62) {
              s11 = peg$c1;
              peg$currPos++;
            } else {
              s11 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e2); }
            }
            if (s11 !== peg$FAILED) {
              s9 = [s9, s10, s11];
              s8 = s9;
            } else {
              peg$currPos = s8;
              s8 = peg$FAILED;
            }
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
          peg$silentFails--;
          if (s8 === peg$FAILED) {
            s7 = undefined;
          } else {
            peg$currPos = s7;
            s7 = peg$FAILED;
          }
          if (s7 !== peg$FAILED) {
            if (input.length > peg$currPos) {
              s8 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s8 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e4); }
            }
            if (s8 !== peg$FAILED) {
              peg$savedPos = s6;
              s6 = peg$f1(s2, s8);
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        }
        s6 = peg$parse__();
        s7 = input.substr(peg$currPos, 8);
        if (s7.toLowerCase() === peg$c2) {
          peg$currPos += (8);
        } else {
          s7 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e3); }
        }
        if (s7 !== peg$FAILED) {
          s8 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s9 = peg$c1;
            peg$currPos++;
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f2(s2, s5);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e0); }
    }

    return s0;
  }

  function peg$parseStyle() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = input.substr(peg$currPos, 6);
    if (s1.toLowerCase() === peg$c3) {
      peg$currPos += (6);
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e6); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$parseAttributes();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseAttributes();
      }
      if (input.charCodeAt(peg$currPos) === 62) {
        s3 = peg$c1;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e2); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        s5 = [];
        s6 = peg$currPos;
        s7 = peg$currPos;
        peg$silentFails++;
        s8 = peg$currPos;
        s9 = input.substr(peg$currPos, 7);
        if (s9.toLowerCase() === peg$c4) {
          peg$currPos += (7);
        } else {
          s9 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e7); }
        }
        if (s9 !== peg$FAILED) {
          s10 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s11 = peg$c1;
            peg$currPos++;
          } else {
            s11 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s11 !== peg$FAILED) {
            s9 = [s9, s10, s11];
            s8 = s9;
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
        } else {
          peg$currPos = s8;
          s8 = peg$FAILED;
        }
        peg$silentFails--;
        if (s8 === peg$FAILED) {
          s7 = undefined;
        } else {
          peg$currPos = s7;
          s7 = peg$FAILED;
        }
        if (s7 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s8 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s8 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e4); }
          }
          if (s8 !== peg$FAILED) {
            peg$savedPos = s6;
            s6 = peg$f3(s2, s8);
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        } else {
          peg$currPos = s6;
          s6 = peg$FAILED;
        }
        while (s6 !== peg$FAILED) {
          s5.push(s6);
          s6 = peg$currPos;
          s7 = peg$currPos;
          peg$silentFails++;
          s8 = peg$currPos;
          s9 = input.substr(peg$currPos, 7);
          if (s9.toLowerCase() === peg$c4) {
            peg$currPos += (7);
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e7); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 62) {
              s11 = peg$c1;
              peg$currPos++;
            } else {
              s11 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e2); }
            }
            if (s11 !== peg$FAILED) {
              s9 = [s9, s10, s11];
              s8 = s9;
            } else {
              peg$currPos = s8;
              s8 = peg$FAILED;
            }
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
          peg$silentFails--;
          if (s8 === peg$FAILED) {
            s7 = undefined;
          } else {
            peg$currPos = s7;
            s7 = peg$FAILED;
          }
          if (s7 !== peg$FAILED) {
            if (input.length > peg$currPos) {
              s8 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s8 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e4); }
            }
            if (s8 !== peg$FAILED) {
              peg$savedPos = s6;
              s6 = peg$f3(s2, s8);
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        }
        s6 = peg$parse__();
        s7 = input.substr(peg$currPos, 7);
        if (s7.toLowerCase() === peg$c4) {
          peg$currPos += (7);
        } else {
          s7 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e7); }
        }
        if (s7 !== peg$FAILED) {
          s8 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s9 = peg$c1;
            peg$currPos++;
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f4(s2, s5);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e5); }
    }

    return s0;
  }

  function peg$parseTextarea() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = input.substr(peg$currPos, 9);
    if (s1.toLowerCase() === peg$c5) {
      peg$currPos += (9);
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e9); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$parseAttributes();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseAttributes();
      }
      if (input.charCodeAt(peg$currPos) === 62) {
        s3 = peg$c1;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e2); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        s5 = [];
        s6 = peg$currPos;
        s7 = peg$currPos;
        peg$silentFails++;
        s8 = peg$currPos;
        s9 = input.substr(peg$currPos, 10);
        if (s9.toLowerCase() === peg$c6) {
          peg$currPos += (10);
        } else {
          s9 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e10); }
        }
        if (s9 !== peg$FAILED) {
          s10 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s11 = peg$c1;
            peg$currPos++;
          } else {
            s11 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s11 !== peg$FAILED) {
            s9 = [s9, s10, s11];
            s8 = s9;
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
        } else {
          peg$currPos = s8;
          s8 = peg$FAILED;
        }
        peg$silentFails--;
        if (s8 === peg$FAILED) {
          s7 = undefined;
        } else {
          peg$currPos = s7;
          s7 = peg$FAILED;
        }
        if (s7 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s8 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s8 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e4); }
          }
          if (s8 !== peg$FAILED) {
            peg$savedPos = s6;
            s6 = peg$f5(s2, s8);
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        } else {
          peg$currPos = s6;
          s6 = peg$FAILED;
        }
        while (s6 !== peg$FAILED) {
          s5.push(s6);
          s6 = peg$currPos;
          s7 = peg$currPos;
          peg$silentFails++;
          s8 = peg$currPos;
          s9 = input.substr(peg$currPos, 10);
          if (s9.toLowerCase() === peg$c6) {
            peg$currPos += (10);
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e10); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 62) {
              s11 = peg$c1;
              peg$currPos++;
            } else {
              s11 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e2); }
            }
            if (s11 !== peg$FAILED) {
              s9 = [s9, s10, s11];
              s8 = s9;
            } else {
              peg$currPos = s8;
              s8 = peg$FAILED;
            }
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
          peg$silentFails--;
          if (s8 === peg$FAILED) {
            s7 = undefined;
          } else {
            peg$currPos = s7;
            s7 = peg$FAILED;
          }
          if (s7 !== peg$FAILED) {
            if (input.length > peg$currPos) {
              s8 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s8 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e4); }
            }
            if (s8 !== peg$FAILED) {
              peg$savedPos = s6;
              s6 = peg$f5(s2, s8);
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        }
        s6 = peg$parse__();
        s7 = input.substr(peg$currPos, 10);
        if (s7.toLowerCase() === peg$c6) {
          peg$currPos += (10);
        } else {
          s7 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e10); }
        }
        if (s7 !== peg$FAILED) {
          s8 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s9 = peg$c1;
            peg$currPos++;
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f6(s2, s5);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e8); }
    }

    return s0;
  }

  function peg$parseTitle() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = input.substr(peg$currPos, 6);
    if (s1.toLowerCase() === peg$c7) {
      peg$currPos += (6);
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e12); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$parseAttributes();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseAttributes();
      }
      if (input.charCodeAt(peg$currPos) === 62) {
        s3 = peg$c1;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e2); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        s5 = [];
        s6 = peg$currPos;
        s7 = peg$currPos;
        peg$silentFails++;
        s8 = peg$currPos;
        s9 = input.substr(peg$currPos, 7);
        if (s9.toLowerCase() === peg$c8) {
          peg$currPos += (7);
        } else {
          s9 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e13); }
        }
        if (s9 !== peg$FAILED) {
          s10 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s11 = peg$c1;
            peg$currPos++;
          } else {
            s11 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s11 !== peg$FAILED) {
            s9 = [s9, s10, s11];
            s8 = s9;
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
        } else {
          peg$currPos = s8;
          s8 = peg$FAILED;
        }
        peg$silentFails--;
        if (s8 === peg$FAILED) {
          s7 = undefined;
        } else {
          peg$currPos = s7;
          s7 = peg$FAILED;
        }
        if (s7 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s8 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s8 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e4); }
          }
          if (s8 !== peg$FAILED) {
            peg$savedPos = s6;
            s6 = peg$f7(s2, s8);
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        } else {
          peg$currPos = s6;
          s6 = peg$FAILED;
        }
        while (s6 !== peg$FAILED) {
          s5.push(s6);
          s6 = peg$currPos;
          s7 = peg$currPos;
          peg$silentFails++;
          s8 = peg$currPos;
          s9 = input.substr(peg$currPos, 7);
          if (s9.toLowerCase() === peg$c8) {
            peg$currPos += (7);
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e13); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 62) {
              s11 = peg$c1;
              peg$currPos++;
            } else {
              s11 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e2); }
            }
            if (s11 !== peg$FAILED) {
              s9 = [s9, s10, s11];
              s8 = s9;
            } else {
              peg$currPos = s8;
              s8 = peg$FAILED;
            }
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
          peg$silentFails--;
          if (s8 === peg$FAILED) {
            s7 = undefined;
          } else {
            peg$currPos = s7;
            s7 = peg$FAILED;
          }
          if (s7 !== peg$FAILED) {
            if (input.length > peg$currPos) {
              s8 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s8 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e4); }
            }
            if (s8 !== peg$FAILED) {
              peg$savedPos = s6;
              s6 = peg$f7(s2, s8);
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        }
        s6 = peg$parse__();
        s7 = input.substr(peg$currPos, 7);
        if (s7.toLowerCase() === peg$c8) {
          peg$currPos += (7);
        } else {
          s7 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e13); }
        }
        if (s7 !== peg$FAILED) {
          s8 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s9 = peg$c1;
            peg$currPos++;
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f8(s2, s5);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e11); }
    }

    return s0;
  }

  function peg$parsePlainText() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = input.substr(peg$currPos, 10);
    if (s1.toLowerCase() === peg$c9) {
      peg$currPos += (10);
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e15); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$parseAttributes();
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$parseAttributes();
      }
      if (input.charCodeAt(peg$currPos) === 62) {
        s3 = peg$c1;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e2); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        s5 = [];
        s6 = peg$currPos;
        s7 = peg$currPos;
        peg$silentFails++;
        s8 = peg$currPos;
        s9 = input.substr(peg$currPos, 11);
        if (s9.toLowerCase() === peg$c10) {
          peg$currPos += (11);
        } else {
          s9 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e16); }
        }
        if (s9 !== peg$FAILED) {
          s10 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s11 = peg$c1;
            peg$currPos++;
          } else {
            s11 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s11 !== peg$FAILED) {
            s9 = [s9, s10, s11];
            s8 = s9;
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
        } else {
          peg$currPos = s8;
          s8 = peg$FAILED;
        }
        peg$silentFails--;
        if (s8 === peg$FAILED) {
          s7 = undefined;
        } else {
          peg$currPos = s7;
          s7 = peg$FAILED;
        }
        if (s7 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s8 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s8 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e4); }
          }
          if (s8 !== peg$FAILED) {
            peg$savedPos = s6;
            s6 = peg$f9(s2, s8);
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        } else {
          peg$currPos = s6;
          s6 = peg$FAILED;
        }
        while (s6 !== peg$FAILED) {
          s5.push(s6);
          s6 = peg$currPos;
          s7 = peg$currPos;
          peg$silentFails++;
          s8 = peg$currPos;
          s9 = input.substr(peg$currPos, 11);
          if (s9.toLowerCase() === peg$c10) {
            peg$currPos += (11);
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e16); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 62) {
              s11 = peg$c1;
              peg$currPos++;
            } else {
              s11 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e2); }
            }
            if (s11 !== peg$FAILED) {
              s9 = [s9, s10, s11];
              s8 = s9;
            } else {
              peg$currPos = s8;
              s8 = peg$FAILED;
            }
          } else {
            peg$currPos = s8;
            s8 = peg$FAILED;
          }
          peg$silentFails--;
          if (s8 === peg$FAILED) {
            s7 = undefined;
          } else {
            peg$currPos = s7;
            s7 = peg$FAILED;
          }
          if (s7 !== peg$FAILED) {
            if (input.length > peg$currPos) {
              s8 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s8 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e4); }
            }
            if (s8 !== peg$FAILED) {
              peg$savedPos = s6;
              s6 = peg$f9(s2, s8);
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
          } else {
            peg$currPos = s6;
            s6 = peg$FAILED;
          }
        }
        s6 = peg$parse__();
        s7 = input.substr(peg$currPos, 11);
        if (s7.toLowerCase() === peg$c10) {
          peg$currPos += (11);
        } else {
          s7 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e16); }
        }
        if (s7 !== peg$FAILED) {
          s8 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 62) {
            s9 = peg$c1;
            peg$currPos++;
          } else {
            s9 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e2); }
          }
          if (s9 !== peg$FAILED) {
            s10 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f10(s2, s5);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e14); }
    }

    return s0;
  }

  function peg$parseNested() {
    let s0, s1, s2, s3, s4, s5;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parseHTMLTagBegin();
    if (s1 !== peg$FAILED) {
      s2 = peg$parse__();
      s3 = [];
      s4 = peg$parseElement();
      while (s4 !== peg$FAILED) {
        s3.push(s4);
        s4 = peg$parseElement();
      }
      s4 = peg$parseHTMLTagEnd();
      if (s4 !== peg$FAILED) {
        s5 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f11(s1, s3, s4);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e17); }
    }

    return s0;
  }

  function peg$parseHTMLTagBegin() {
    let s0, s1, s2, s3, s4;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 60) {
      s1 = peg$c11;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e19); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseHTMLTagName();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parseAttributes();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseAttributes();
        }
        if (input.charCodeAt(peg$currPos) === 62) {
          s4 = peg$c1;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
        if (s4 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f12(s2, s3);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e18); }
    }

    return s0;
  }

  function peg$parseHTMLTagEnd() {
    let s0, s1, s2, s3, s4;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c12) {
      s1 = peg$c12;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e21); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseHTMLTagName();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 62) {
          s4 = peg$c1;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
        if (s4 !== peg$FAILED) {
          s1 = [s1, s2, s3, s4];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e20); }
    }

    return s0;
  }

  function peg$parseTagBegin() {
    let s0, s1, s2, s3, s4;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 60) {
      s1 = peg$c11;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e19); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseTagName();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parseAttributes();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseAttributes();
        }
        if (input.charCodeAt(peg$currPos) === 62) {
          s4 = peg$c1;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
        if (s4 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f13(s2, s3);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e18); }
    }

    return s0;
  }

  function peg$parseTagEnd() {
    let s0, s1, s2, s3, s4;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c12) {
      s1 = peg$c12;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e21); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseTagName();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 62) {
          s4 = peg$c1;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
        if (s4 !== peg$FAILED) {
          s1 = [s1, s2, s3, s4];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e20); }
    }

    return s0;
  }

  function peg$parseSelfClose() {
    let s0, s1, s2, s3, s4;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 60) {
      s1 = peg$c11;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e19); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseSelfCloseTagName();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parseAttributes();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseAttributes();
        }
        s4 = peg$parseSelfCloseTag();
        if (s4 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f14(s2, s3);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e22); }
    }

    return s0;
  }

  function peg$parseComponent() {
    let s0, s1;

    peg$silentFails++;
    s0 = peg$parseNestedComponent();
    if (s0 === peg$FAILED) {
      s0 = peg$parseSelfCloseComponent();
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e23); }
    }

    return s0;
  }

  function peg$parseNestedComponent() {
    let s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    s1 = peg$parseTagBegin();
    if (s1 !== peg$FAILED) {
      s2 = peg$parse__();
      s3 = [];
      s4 = peg$parseElement();
      while (s4 !== peg$FAILED) {
        s3.push(s4);
        s4 = peg$parseElement();
      }
      s4 = peg$parse__();
      s5 = peg$parseTagEnd();
      if (s5 !== peg$FAILED) {
        s6 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f15(s1, s3, s5);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSelfCloseComponent() {
    let s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 60) {
      s1 = peg$c11;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e19); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseTagName();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$parseAttributes();
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$parseAttributes();
        }
        s4 = peg$parseSelfCloseTag();
        if (s4 !== peg$FAILED) {
          s5 = peg$parse__();
          peg$savedPos = s0;
          s0 = peg$f16(s2, s3);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseComment() {
    let s0, s1, s2, s3, s4;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.substr(peg$currPos, 4) === peg$c13) {
      s1 = peg$c13;
      peg$currPos += 4;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e25); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseCommentText();
      if (input.substr(peg$currPos, 3) === peg$c14) {
        s3 = peg$c14;
        peg$currPos += 3;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e26); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f17(s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e24); }
    }

    return s0;
  }

  function peg$parseExtHTMLComment() {
    let s0, s1, s2, s3;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parse__();
    s2 = peg$parseSingleLineComment();
    if (s2 === peg$FAILED) {
      s2 = peg$parseMultipleLineComment();
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parse__();
      peg$savedPos = s0;
      s0 = peg$f18(s2);
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e27); }
    }

    return s0;
  }

  function peg$parseSingleLineComment() {
    let s0, s1, s2, s3, s4, s5;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c15) {
      s1 = peg$c15;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e29); }
    }
    if (s1 === peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 35) {
        s1 = peg$c16;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e30); }
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$currPos;
      s4 = peg$currPos;
      peg$silentFails++;
      s5 = peg$parseNL();
      peg$silentFails--;
      if (s5 === peg$FAILED) {
        s4 = undefined;
      } else {
        peg$currPos = s4;
        s4 = peg$FAILED;
      }
      if (s4 !== peg$FAILED) {
        if (input.length > peg$currPos) {
          s5 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e4); }
        }
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        s5 = peg$parseNL();
        peg$silentFails--;
        if (s5 === peg$FAILED) {
          s4 = undefined;
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s5 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e4); }
          }
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      }
      peg$savedPos = s0;
      s0 = peg$f19(s2);
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e28); }
    }

    return s0;
  }

  function peg$parseMultipleLineComment() {
    let s0, s1, s2, s3, s4, s5;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parseOpenMultipleLineComment();
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$currPos;
      s4 = peg$currPos;
      peg$silentFails++;
      s5 = peg$parseCloseMultipleLineComment();
      peg$silentFails--;
      if (s5 === peg$FAILED) {
        s4 = undefined;
      } else {
        peg$currPos = s4;
        s4 = peg$FAILED;
      }
      if (s4 !== peg$FAILED) {
        if (input.length > peg$currPos) {
          s5 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e4); }
        }
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        s5 = peg$parseCloseMultipleLineComment();
        peg$silentFails--;
        if (s5 === peg$FAILED) {
          s4 = undefined;
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          if (input.length > peg$currPos) {
            s5 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e4); }
          }
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      }
      s3 = peg$parseCloseMultipleLineComment();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s0;
        s0 = peg$f20(s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e31); }
    }

    return s0;
  }

  function peg$parseOpenMultipleLineComment() {
    let s0;

    if (input.substr(peg$currPos, 2) === peg$c17) {
      s0 = peg$c17;
      peg$currPos += 2;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e32); }
    }

    return s0;
  }

  function peg$parseCloseMultipleLineComment() {
    let s0;

    if (input.substr(peg$currPos, 2) === peg$c18) {
      s0 = peg$c18;
      peg$currPos += 2;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e33); }
    }

    return s0;
  }

  function peg$parseCommentText() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = [];
    s2 = peg$currPos;
    s3 = peg$currPos;
    peg$silentFails++;
    if (input.substr(peg$currPos, 3) === peg$c14) {
      s4 = peg$c14;
      peg$currPos += 3;
    } else {
      s4 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e26); }
    }
    peg$silentFails--;
    if (s4 === peg$FAILED) {
      s3 = undefined;
    } else {
      peg$currPos = s3;
      s3 = peg$FAILED;
    }
    if (s3 !== peg$FAILED) {
      if (input.length > peg$currPos) {
        s4 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e4); }
      }
      if (s4 !== peg$FAILED) {
        s3 = [s3, s4];
        s2 = s3;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
    } else {
      peg$currPos = s2;
      s2 = peg$FAILED;
    }
    while (s2 !== peg$FAILED) {
      s1.push(s2);
      s2 = peg$currPos;
      s3 = peg$currPos;
      peg$silentFails++;
      if (input.substr(peg$currPos, 3) === peg$c14) {
        s4 = peg$c14;
        peg$currPos += 3;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e26); }
      }
      peg$silentFails--;
      if (s4 === peg$FAILED) {
        s3 = undefined;
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      if (s3 !== peg$FAILED) {
        if (input.length > peg$currPos) {
          s4 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e4); }
        }
        if (s4 !== peg$FAILED) {
          s3 = [s3, s4];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
    }
    peg$savedPos = s0;
    s1 = peg$f21(s1);
    s0 = s1;

    return s0;
  }

  function peg$parseDocType() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = input.substr(peg$currPos, 9);
    if (s1.toLowerCase() === peg$c19) {
      peg$currPos += (9);
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e35); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parse__();
      s3 = peg$parseSymbol();
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        s5 = input.substr(peg$currPos, 6);
        if (s5.toLowerCase() === peg$c20) {
          peg$currPos += (6);
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e36); }
        }
        if (s5 === peg$FAILED) {
          s5 = input.substr(peg$currPos, 6);
          if (s5.toLowerCase() === peg$c21) {
            peg$currPos += (6);
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e37); }
          }
        }
        if (s5 === peg$FAILED) {
          s5 = null;
        }
        s6 = peg$parse__();
        s7 = [];
        s8 = peg$parseString();
        while (s8 !== peg$FAILED) {
          s7.push(s8);
          s8 = peg$parseString();
        }
        if (input.charCodeAt(peg$currPos) === 62) {
          s8 = peg$c1;
          peg$currPos++;
        } else {
          s8 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e2); }
        }
        if (s8 !== peg$FAILED) {
          s9 = peg$parse__();
          s1 = [s1, s2, s3, s4, s5, s6, s7, s8, s9];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e34); }
    }

    return s0;
  }

  function peg$parseGeneralCloseTag() {
    let s0;

    s0 = peg$parseSelfCloseTag();
    if (s0 === peg$FAILED) {
      s0 = peg$parseCloseTag();
    }

    return s0;
  }

  function peg$parseSelfCloseTag() {
    let s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parse__();
    if (input.substr(peg$currPos, 2) === peg$c22) {
      s2 = peg$c22;
      peg$currPos += 2;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e38); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parse__();
      s1 = [s1, s2, s3];
      s0 = s1;
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseCloseTag() {
    let s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parse__();
    if (input.charCodeAt(peg$currPos) === 62) {
      s2 = peg$c1;
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e2); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parse__();
      s1 = [s1, s2, s3];
      s0 = s1;
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseTextNode() {
    let s0, s1;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parseText();
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$f22(s1);
    }
    s0 = s1;
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e39); }
    }

    return s0;
  }

  function peg$parseDynamicTextNode() {
    let s0, s1;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parseDynamicText();
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$f23(s1);
    }
    s0 = s1;
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e40); }
    }

    return s0;
  }

  function peg$parseDynamicText() {
    let s0, s1;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parseVariableQuoteString();
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$f24(s1);
    }
    s0 = s1;
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e41); }
    }

    return s0;
  }

  function peg$parseText() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;

    peg$silentFails++;
    s0 = [];
    s1 = peg$currPos;
    s2 = input.charAt(peg$currPos);
    if (peg$r0.test(s2)) {
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e43); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$currPos;
      peg$silentFails++;
      s4 = peg$parseVariableQuoteString();
      peg$silentFails--;
      if (s4 !== peg$FAILED) {
        peg$currPos = s3;
        s3 = undefined;
      } else {
        s3 = peg$FAILED;
      }
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s1 = peg$f25(s2);
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        s1 = peg$currPos;
        s2 = input.charAt(peg$currPos);
        if (peg$r0.test(s2)) {
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e43); }
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          peg$silentFails++;
          s4 = peg$parseVariableQuoteString();
          peg$silentFails--;
          if (s4 !== peg$FAILED) {
            peg$currPos = s3;
            s3 = undefined;
          } else {
            s3 = peg$FAILED;
          }
          if (s3 !== peg$FAILED) {
            peg$savedPos = s1;
            s1 = peg$f25(s2);
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      }
    } else {
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = [];
      s1 = peg$currPos;
      s2 = peg$currPos;
      peg$silentFails++;
      s3 = peg$parseHTMLTagEnd();
      peg$silentFails--;
      if (s3 === peg$FAILED) {
        s2 = undefined;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parseTagEnd();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = undefined;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$currPos;
          peg$silentFails++;
          s5 = peg$parseSelfClose();
          peg$silentFails--;
          if (s5 === peg$FAILED) {
            s4 = undefined;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$currPos;
            peg$silentFails++;
            s6 = peg$parseComment();
            peg$silentFails--;
            if (s6 === peg$FAILED) {
              s5 = undefined;
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$currPos;
              peg$silentFails++;
              s7 = peg$parseDocType();
              peg$silentFails--;
              if (s7 === peg$FAILED) {
                s6 = undefined;
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
              if (s6 !== peg$FAILED) {
                s7 = peg$currPos;
                peg$silentFails++;
                s8 = peg$parseDynamicTextNode();
                peg$silentFails--;
                if (s8 === peg$FAILED) {
                  s7 = undefined;
                } else {
                  peg$currPos = s7;
                  s7 = peg$FAILED;
                }
                if (s7 !== peg$FAILED) {
                  s8 = peg$currPos;
                  peg$silentFails++;
                  s9 = peg$parseComponent();
                  peg$silentFails--;
                  if (s9 === peg$FAILED) {
                    s8 = undefined;
                  } else {
                    peg$currPos = s8;
                    s8 = peg$FAILED;
                  }
                  if (s8 !== peg$FAILED) {
                    s9 = peg$currPos;
                    peg$silentFails++;
                    s10 = peg$parseNested();
                    peg$silentFails--;
                    if (s10 === peg$FAILED) {
                      s9 = undefined;
                    } else {
                      peg$currPos = s9;
                      s9 = peg$FAILED;
                    }
                    if (s9 !== peg$FAILED) {
                      s10 = peg$currPos;
                      peg$silentFails++;
                      s11 = peg$parseRawText();
                      peg$silentFails--;
                      if (s11 === peg$FAILED) {
                        s10 = undefined;
                      } else {
                        peg$currPos = s10;
                        s10 = peg$FAILED;
                      }
                      if (s10 !== peg$FAILED) {
                        if (input.length > peg$currPos) {
                          s11 = input.charAt(peg$currPos);
                          peg$currPos++;
                        } else {
                          s11 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e4); }
                        }
                        if (s11 !== peg$FAILED) {
                          peg$savedPos = s1;
                          s1 = peg$f26(s11);
                        } else {
                          peg$currPos = s1;
                          s1 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s1;
                        s1 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s1;
                      s1 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$currPos;
          s2 = peg$currPos;
          peg$silentFails++;
          s3 = peg$parseHTMLTagEnd();
          peg$silentFails--;
          if (s3 === peg$FAILED) {
            s2 = undefined;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$currPos;
            peg$silentFails++;
            s4 = peg$parseTagEnd();
            peg$silentFails--;
            if (s4 === peg$FAILED) {
              s3 = undefined;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
            if (s3 !== peg$FAILED) {
              s4 = peg$currPos;
              peg$silentFails++;
              s5 = peg$parseSelfClose();
              peg$silentFails--;
              if (s5 === peg$FAILED) {
                s4 = undefined;
              } else {
                peg$currPos = s4;
                s4 = peg$FAILED;
              }
              if (s4 !== peg$FAILED) {
                s5 = peg$currPos;
                peg$silentFails++;
                s6 = peg$parseComment();
                peg$silentFails--;
                if (s6 === peg$FAILED) {
                  s5 = undefined;
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$currPos;
                  peg$silentFails++;
                  s7 = peg$parseDocType();
                  peg$silentFails--;
                  if (s7 === peg$FAILED) {
                    s6 = undefined;
                  } else {
                    peg$currPos = s6;
                    s6 = peg$FAILED;
                  }
                  if (s6 !== peg$FAILED) {
                    s7 = peg$currPos;
                    peg$silentFails++;
                    s8 = peg$parseDynamicTextNode();
                    peg$silentFails--;
                    if (s8 === peg$FAILED) {
                      s7 = undefined;
                    } else {
                      peg$currPos = s7;
                      s7 = peg$FAILED;
                    }
                    if (s7 !== peg$FAILED) {
                      s8 = peg$currPos;
                      peg$silentFails++;
                      s9 = peg$parseComponent();
                      peg$silentFails--;
                      if (s9 === peg$FAILED) {
                        s8 = undefined;
                      } else {
                        peg$currPos = s8;
                        s8 = peg$FAILED;
                      }
                      if (s8 !== peg$FAILED) {
                        s9 = peg$currPos;
                        peg$silentFails++;
                        s10 = peg$parseNested();
                        peg$silentFails--;
                        if (s10 === peg$FAILED) {
                          s9 = undefined;
                        } else {
                          peg$currPos = s9;
                          s9 = peg$FAILED;
                        }
                        if (s9 !== peg$FAILED) {
                          s10 = peg$currPos;
                          peg$silentFails++;
                          s11 = peg$parseRawText();
                          peg$silentFails--;
                          if (s11 === peg$FAILED) {
                            s10 = undefined;
                          } else {
                            peg$currPos = s10;
                            s10 = peg$FAILED;
                          }
                          if (s10 !== peg$FAILED) {
                            if (input.length > peg$currPos) {
                              s11 = input.charAt(peg$currPos);
                              peg$currPos++;
                            } else {
                              s11 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e4); }
                            }
                            if (s11 !== peg$FAILED) {
                              peg$savedPos = s1;
                              s1 = peg$f26(s11);
                            } else {
                              peg$currPos = s1;
                              s1 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s1;
                            s1 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s1;
                          s1 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s1;
                        s1 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s1;
                      s1 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s1;
                    s1 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s1;
                  s1 = peg$FAILED;
                }
              } else {
                peg$currPos = s1;
                s1 = peg$FAILED;
              }
            } else {
              peg$currPos = s1;
              s1 = peg$FAILED;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        }
      } else {
        s0 = peg$FAILED;
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e42); }
    }

    return s0;
  }

  function peg$parseAttributes() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$parsewhitespace();
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$parseHTMLDomReferenceDirectiveAttribute();
      if (s3 === peg$FAILED) {
        s3 = peg$parseDynamicAttribute();
        if (s3 === peg$FAILED) {
          s3 = peg$parseEventAttribute();
          if (s3 === peg$FAILED) {
            s3 = peg$parseStaticAttribute();
            if (s3 === peg$FAILED) {
              s3 = peg$parseNoArgumentAttribute();
              if (s3 === peg$FAILED) {
                s3 = peg$parseNoArgumentMacroAttribute();
              }
            }
          }
        }
      }
      if (s3 !== peg$FAILED) {
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parseHTMLDomReferenceDirectiveAttribute();
          if (s3 === peg$FAILED) {
            s3 = peg$parseDynamicAttribute();
            if (s3 === peg$FAILED) {
              s3 = peg$parseEventAttribute();
              if (s3 === peg$FAILED) {
                s3 = peg$parseStaticAttribute();
                if (s3 === peg$FAILED) {
                  s3 = peg$parseNoArgumentAttribute();
                  if (s3 === peg$FAILED) {
                    s3 = peg$parseNoArgumentMacroAttribute();
                  }
                }
              }
            }
          }
        }
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parseGeneralCloseTag();
        peg$silentFails--;
        if (s4 !== peg$FAILED) {
          peg$currPos = s3;
          s3 = undefined;
        } else {
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f27(s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseStaticAttribute() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parseGlobalBooleanAttribute();
    if (s1 !== peg$FAILED) {
      s2 = peg$currPos;
      s3 = peg$parse__();
      if (input.charCodeAt(peg$currPos) === 61) {
        s4 = peg$c23;
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e45); }
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$parse__();
        s6 = peg$parseDoubleQuoteString();
        if (s6 !== peg$FAILED) {
          s3 = [s3, s4, s5, s6];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f28(s1, s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parseBooleanAttribute();
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 61) {
          s4 = peg$c23;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e45); }
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parse__();
          s6 = peg$parseDoubleQuoteString();
          if (s6 !== peg$FAILED) {
            s3 = [s3, s4, s5, s6];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          peg$savedPos = s0;
          s0 = peg$f29(s1, s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseHTMLDataAttr();
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 61) {
            s4 = peg$c23;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e45); }
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parse__();
            s6 = peg$parseDoubleQuoteString();
            if (s6 !== peg$FAILED) {
              s3 = [s3, s4, s5, s6];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f30(s1, s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseGlobalNonBooleanAttribute();
          if (s1 !== peg$FAILED) {
            s2 = peg$currPos;
            s3 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 61) {
              s4 = peg$c23;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e45); }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse__();
              s6 = peg$parseDoubleQuoteString();
              if (s6 !== peg$FAILED) {
                s3 = [s3, s4, s5, s6];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              s3 = peg$parse__();
              peg$savedPos = s0;
              s0 = peg$f31(s1, s2);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parseReadonlyMediaAttr();
            if (s1 !== peg$FAILED) {
              s2 = peg$currPos;
              s3 = peg$parse__();
              if (input.charCodeAt(peg$currPos) === 61) {
                s4 = peg$c23;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e45); }
              }
              if (s4 !== peg$FAILED) {
                s5 = peg$parse__();
                s6 = peg$parseDoubleQuoteString();
                if (s6 !== peg$FAILED) {
                  s3 = [s3, s4, s5, s6];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 !== peg$FAILED) {
                s3 = peg$parse__();
                peg$savedPos = s0;
                s0 = peg$f32(s1, s2);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = peg$parseReadonlyVideoAttr();
              if (s1 !== peg$FAILED) {
                s2 = peg$currPos;
                s3 = peg$parse__();
                if (input.charCodeAt(peg$currPos) === 61) {
                  s4 = peg$c23;
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e45); }
                }
                if (s4 !== peg$FAILED) {
                  s5 = peg$parse__();
                  s6 = peg$parseDoubleQuoteString();
                  if (s6 !== peg$FAILED) {
                    s3 = [s3, s4, s5, s6];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 !== peg$FAILED) {
                  s3 = peg$parse__();
                  peg$savedPos = s0;
                  s0 = peg$f33(s1, s2);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parseHTMLAttrName();
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  s3 = peg$parse__();
                  if (input.charCodeAt(peg$currPos) === 61) {
                    s4 = peg$c23;
                    peg$currPos++;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e45); }
                  }
                  if (s4 !== peg$FAILED) {
                    s5 = peg$parse__();
                    s6 = peg$parseDoubleQuoteString();
                    if (s6 !== peg$FAILED) {
                      s3 = [s3, s4, s5, s6];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 !== peg$FAILED) {
                    s3 = peg$parse__();
                    peg$savedPos = s0;
                    s0 = peg$f34(s1, s2);
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  s1 = peg$parseAttrName();
                  if (s1 !== peg$FAILED) {
                    s2 = peg$currPos;
                    s3 = peg$parse__();
                    if (input.charCodeAt(peg$currPos) === 61) {
                      s4 = peg$c23;
                      peg$currPos++;
                    } else {
                      s4 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e45); }
                    }
                    if (s4 !== peg$FAILED) {
                      s5 = peg$parse__();
                      s6 = peg$parseDoubleQuoteString();
                      if (s6 !== peg$FAILED) {
                        s3 = [s3, s4, s5, s6];
                        s2 = s3;
                      } else {
                        peg$currPos = s2;
                        s2 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                    if (s2 !== peg$FAILED) {
                      s3 = peg$parse__();
                      peg$savedPos = s0;
                      s0 = peg$f35(s1, s2);
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.charCodeAt(peg$currPos) === 42) {
                      s1 = peg$c24;
                      peg$currPos++;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e46); }
                    }
                    if (s1 !== peg$FAILED) {
                      s2 = peg$parseSpecificDrallDirectives();
                      if (s2 !== peg$FAILED) {
                        s3 = peg$currPos;
                        s4 = peg$parse__();
                        if (input.charCodeAt(peg$currPos) === 61) {
                          s5 = peg$c23;
                          peg$currPos++;
                        } else {
                          s5 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e45); }
                        }
                        if (s5 !== peg$FAILED) {
                          s6 = peg$parse__();
                          s7 = peg$parseDoubleQuoteString();
                          if (s7 !== peg$FAILED) {
                            s4 = [s4, s5, s6, s7];
                            s3 = s4;
                          } else {
                            peg$currPos = s3;
                            s3 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s3;
                          s3 = peg$FAILED;
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parse__();
                          peg$savedPos = s0;
                          s0 = peg$f36(s2, s3);
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      if (input.charCodeAt(peg$currPos) === 40) {
                        s1 = peg$c25;
                        peg$currPos++;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e47); }
                      }
                      if (s1 !== peg$FAILED) {
                        s2 = peg$parseOptimizationReservedDirectivesMacro();
                        if (s2 !== peg$FAILED) {
                          if (input.charCodeAt(peg$currPos) === 41) {
                            s3 = peg$c26;
                            peg$currPos++;
                          } else {
                            s3 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e48); }
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$currPos;
                            s5 = peg$parse__();
                            if (input.charCodeAt(peg$currPos) === 61) {
                              s6 = peg$c23;
                              peg$currPos++;
                            } else {
                              s6 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e45); }
                            }
                            if (s6 !== peg$FAILED) {
                              s7 = peg$parse__();
                              s8 = peg$parseDoubleQuoteString();
                              if (s8 !== peg$FAILED) {
                                s5 = [s5, s6, s7, s8];
                                s4 = s5;
                              } else {
                                peg$currPos = s4;
                                s4 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s4;
                              s4 = peg$FAILED;
                            }
                            if (s4 !== peg$FAILED) {
                              s5 = peg$parse__();
                              peg$savedPos = s0;
                              s0 = peg$f37(s2, s4);
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e44); }
    }

    return s0;
  }

  function peg$parseDynamicAttribute() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = peg$parseGlobalBooleanAttribute();
    if (s1 !== peg$FAILED) {
      s2 = peg$currPos;
      s3 = peg$parse__();
      if (input.charCodeAt(peg$currPos) === 61) {
        s4 = peg$c23;
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e45); }
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$parse__();
        s6 = peg$parseVariableQuoteString();
        if (s6 !== peg$FAILED) {
          s3 = [s3, s4, s5, s6];
          s2 = s3;
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f38(s1, s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parseBooleanAttribute();
      if (s1 !== peg$FAILED) {
        s2 = peg$currPos;
        s3 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 61) {
          s4 = peg$c23;
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e45); }
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parse__();
          s6 = peg$parseVariableQuoteString();
          if (s6 !== peg$FAILED) {
            s3 = [s3, s4, s5, s6];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s3 = peg$parse__();
          peg$savedPos = s0;
          s0 = peg$f39(s1, s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parseHTMLDataAttr();
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          s3 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 61) {
            s4 = peg$c23;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e45); }
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parse__();
            s6 = peg$parseVariableQuoteString();
            if (s6 !== peg$FAILED) {
              s3 = [s3, s4, s5, s6];
              s2 = s3;
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f40(s1, s2);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parseGlobalNonBooleanAttribute();
          if (s1 !== peg$FAILED) {
            s2 = peg$currPos;
            s3 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 61) {
              s4 = peg$c23;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e45); }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parse__();
              s6 = peg$parseVariableQuoteString();
              if (s6 !== peg$FAILED) {
                s3 = [s3, s4, s5, s6];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$FAILED;
            }
            if (s2 !== peg$FAILED) {
              s3 = peg$parse__();
              peg$savedPos = s0;
              s0 = peg$f41(s1, s2);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parseReadonlyMediaAttr();
            if (s1 !== peg$FAILED) {
              s2 = peg$currPos;
              s3 = peg$parse__();
              if (input.charCodeAt(peg$currPos) === 61) {
                s4 = peg$c23;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e45); }
              }
              if (s4 !== peg$FAILED) {
                s5 = peg$parse__();
                s6 = peg$parseVariableQuoteString();
                if (s6 !== peg$FAILED) {
                  s3 = [s3, s4, s5, s6];
                  s2 = s3;
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$FAILED;
              }
              if (s2 !== peg$FAILED) {
                s3 = peg$parse__();
                peg$savedPos = s0;
                s0 = peg$f42(s1, s2);
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              s1 = peg$parseReadonlyVideoAttr();
              if (s1 !== peg$FAILED) {
                s2 = peg$currPos;
                s3 = peg$parse__();
                if (input.charCodeAt(peg$currPos) === 61) {
                  s4 = peg$c23;
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e45); }
                }
                if (s4 !== peg$FAILED) {
                  s5 = peg$parse__();
                  s6 = peg$parseVariableQuoteString();
                  if (s6 !== peg$FAILED) {
                    s3 = [s3, s4, s5, s6];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$FAILED;
                }
                if (s2 !== peg$FAILED) {
                  s3 = peg$parse__();
                  peg$savedPos = s0;
                  s0 = peg$f43(s1, s2);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                s1 = peg$parseHTMLAttrName();
                if (s1 !== peg$FAILED) {
                  s2 = peg$currPos;
                  s3 = peg$parse__();
                  if (input.charCodeAt(peg$currPos) === 61) {
                    s4 = peg$c23;
                    peg$currPos++;
                  } else {
                    s4 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e45); }
                  }
                  if (s4 !== peg$FAILED) {
                    s5 = peg$parse__();
                    s6 = peg$parseVariableQuoteString();
                    if (s6 !== peg$FAILED) {
                      s3 = [s3, s4, s5, s6];
                      s2 = s3;
                    } else {
                      peg$currPos = s2;
                      s2 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s2;
                    s2 = peg$FAILED;
                  }
                  if (s2 !== peg$FAILED) {
                    s3 = peg$parse__();
                    peg$savedPos = s0;
                    s0 = peg$f44(s1, s2);
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  if (input.charCodeAt(peg$currPos) === 42) {
                    s1 = peg$c24;
                    peg$currPos++;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e46); }
                  }
                  if (s1 !== peg$FAILED) {
                    s2 = peg$parsePrimitiveLanguageReservedDirectives();
                    if (s2 !== peg$FAILED) {
                      s3 = peg$currPos;
                      s4 = peg$parse__();
                      if (input.charCodeAt(peg$currPos) === 61) {
                        s5 = peg$c23;
                        peg$currPos++;
                      } else {
                        s5 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e45); }
                      }
                      if (s5 !== peg$FAILED) {
                        s6 = peg$parse__();
                        s7 = peg$parseVariableQuoteString();
                        if (s7 !== peg$FAILED) {
                          s4 = [s4, s5, s6, s7];
                          s3 = s4;
                        } else {
                          peg$currPos = s3;
                          s3 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s3;
                        s3 = peg$FAILED;
                      }
                      if (s3 !== peg$FAILED) {
                        s4 = peg$parse__();
                        peg$savedPos = s0;
                        s0 = peg$f45(s2, s3);
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                  if (s0 === peg$FAILED) {
                    s0 = peg$currPos;
                    if (input.charCodeAt(peg$currPos) === 42) {
                      s1 = peg$c24;
                      peg$currPos++;
                    } else {
                      s1 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e46); }
                    }
                    if (s1 !== peg$FAILED) {
                      s2 = peg$parseSpecificDrallDirectives();
                      if (s2 !== peg$FAILED) {
                        s3 = peg$currPos;
                        s4 = peg$parse__();
                        if (input.charCodeAt(peg$currPos) === 61) {
                          s5 = peg$c23;
                          peg$currPos++;
                        } else {
                          s5 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e45); }
                        }
                        if (s5 !== peg$FAILED) {
                          s6 = peg$parse__();
                          s7 = peg$parseVariableQuoteString();
                          if (s7 !== peg$FAILED) {
                            s4 = [s4, s5, s6, s7];
                            s3 = s4;
                          } else {
                            peg$currPos = s3;
                            s3 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s3;
                          s3 = peg$FAILED;
                        }
                        if (s3 !== peg$FAILED) {
                          s4 = peg$parse__();
                          peg$savedPos = s0;
                          s0 = peg$f46(s2, s3);
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                    if (s0 === peg$FAILED) {
                      s0 = peg$currPos;
                      if (input.charCodeAt(peg$currPos) === 42) {
                        s1 = peg$c24;
                        peg$currPos++;
                      } else {
                        s1 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e46); }
                      }
                      if (s1 !== peg$FAILED) {
                        s2 = peg$parseOptimizationReservedDirectives();
                        if (s2 !== peg$FAILED) {
                          s3 = peg$currPos;
                          s4 = peg$parse__();
                          if (input.charCodeAt(peg$currPos) === 61) {
                            s5 = peg$c23;
                            peg$currPos++;
                          } else {
                            s5 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e45); }
                          }
                          if (s5 !== peg$FAILED) {
                            s6 = peg$parse__();
                            s7 = peg$parseVariableQuoteString();
                            if (s7 !== peg$FAILED) {
                              s4 = [s4, s5, s6, s7];
                              s3 = s4;
                            } else {
                              peg$currPos = s3;
                              s3 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s3;
                            s3 = peg$FAILED;
                          }
                          if (s3 !== peg$FAILED) {
                            s4 = peg$parse__();
                            peg$savedPos = s0;
                            s0 = peg$f47(s2, s3);
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                      if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.charCodeAt(peg$currPos) === 40) {
                          s1 = peg$c25;
                          peg$currPos++;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e47); }
                        }
                        if (s1 !== peg$FAILED) {
                          s2 = peg$parseOptimizationReservedDirectivesMacro();
                          if (s2 !== peg$FAILED) {
                            if (input.charCodeAt(peg$currPos) === 41) {
                              s3 = peg$c26;
                              peg$currPos++;
                            } else {
                              s3 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e48); }
                            }
                            if (s3 !== peg$FAILED) {
                              s4 = peg$currPos;
                              s5 = peg$parse__();
                              if (input.charCodeAt(peg$currPos) === 61) {
                                s6 = peg$c23;
                                peg$currPos++;
                              } else {
                                s6 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$e45); }
                              }
                              if (s6 !== peg$FAILED) {
                                s7 = peg$parse__();
                                s8 = peg$parseVariableQuoteString();
                                if (s8 !== peg$FAILED) {
                                  s5 = [s5, s6, s7, s8];
                                  s4 = s5;
                                } else {
                                  peg$currPos = s4;
                                  s4 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s4;
                                s4 = peg$FAILED;
                              }
                              if (s4 !== peg$FAILED) {
                                s5 = peg$parse__();
                                peg$savedPos = s0;
                                s0 = peg$f48(s2, s4);
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                          s0 = peg$currPos;
                          s1 = peg$parseAttrName();
                          if (s1 !== peg$FAILED) {
                            s2 = peg$currPos;
                            s3 = peg$parse__();
                            if (input.charCodeAt(peg$currPos) === 61) {
                              s4 = peg$c23;
                              peg$currPos++;
                            } else {
                              s4 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e45); }
                            }
                            if (s4 !== peg$FAILED) {
                              s5 = peg$parse__();
                              s6 = peg$parseVariableQuoteString();
                              if (s6 !== peg$FAILED) {
                                s3 = [s3, s4, s5, s6];
                                s2 = s3;
                              } else {
                                peg$currPos = s2;
                                s2 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s2;
                              s2 = peg$FAILED;
                            }
                            if (s2 !== peg$FAILED) {
                              s3 = peg$parse__();
                              peg$savedPos = s0;
                              s0 = peg$f49(s1, s2);
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e49); }
    }

    return s0;
  }

  function peg$parseGlobalBooleanAttribute() {
    let s0, s1;

    peg$silentFails++;
    s0 = input.substr(peg$currPos, 8);
    if (s0.toLowerCase() === peg$c27) {
      peg$currPos += (8);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e51); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 6);
      if (s0.toLowerCase() === peg$c28) {
        peg$currPos += (6);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e52); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 8);
        if (s0.toLowerCase() === peg$c29) {
          peg$currPos += (8);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e53); }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e50); }
    }

    return s0;
  }

  function peg$parseBooleanAttribute() {
    let s0, s1;

    peg$silentFails++;
    s0 = input.substr(peg$currPos, 15);
    if (s0.toLowerCase() === peg$c30) {
      peg$currPos += (15);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e55); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 19);
      if (s0.toLowerCase() === peg$c31) {
        peg$currPos += (19);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e56); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 5);
        if (s0.toLowerCase() === peg$c32) {
          peg$currPos += (5);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e57); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 9);
          if (s0.toLowerCase() === peg$c33) {
            peg$currPos += (9);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e58); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 8);
            if (s0.toLowerCase() === peg$c34) {
              peg$currPos += (8);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e59); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 7);
              if (s0.toLowerCase() === peg$c35) {
                peg$currPos += (7);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e60); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 8);
                if (s0.toLowerCase() === peg$c36) {
                  peg$currPos += (8);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e61); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 7);
                  if (s0.toLowerCase() === peg$c37) {
                    peg$currPos += (7);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e62); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 5);
                    if (s0.toLowerCase() === peg$c38) {
                      peg$currPos += (5);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e63); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 14);
                      if (s0.toLowerCase() === peg$c39) {
                        peg$currPos += (14);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e64); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 5);
                        if (s0.toLowerCase() === peg$c40) {
                          peg$currPos += (5);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e65); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 5);
                          if (s0.toLowerCase() === peg$c41) {
                            peg$currPos += (5);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e66); }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 9);
                            if (s0.toLowerCase() === peg$c42) {
                              peg$currPos += (9);
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e67); }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 4);
                              if (s0.toLowerCase() === peg$c43) {
                                peg$currPos += (4);
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$e68); }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 8);
                                if (s0.toLowerCase() === peg$c44) {
                                  peg$currPos += (8);
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$e69); }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.substr(peg$currPos, 5);
                                  if (s0.toLowerCase() === peg$c45) {
                                    peg$currPos += (5);
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$e70); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = input.substr(peg$currPos, 8);
                                    if (s0.toLowerCase() === peg$c46) {
                                      peg$currPos += (8);
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$e71); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = input.substr(peg$currPos, 10);
                                      if (s0.toLowerCase() === peg$c47) {
                                        peg$currPos += (10);
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$e72); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = input.substr(peg$currPos, 4);
                                        if (s0.toLowerCase() === peg$c48) {
                                          peg$currPos += (4);
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$e73); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = input.substr(peg$currPos, 11);
                                          if (s0.toLowerCase() === peg$c49) {
                                            peg$currPos += (11);
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$e74); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = input.substr(peg$currPos, 8);
                                            if (s0.toLowerCase() === peg$c50) {
                                              peg$currPos += (8);
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$e75); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = input.substr(peg$currPos, 8);
                                              if (s0.toLowerCase() === peg$c51) {
                                                peg$currPos += (8);
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$e76); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = input.substr(peg$currPos, 8);
                                                if (s0.toLowerCase() === peg$c52) {
                                                  peg$currPos += (8);
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$e77); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = input.substr(peg$currPos, 18);
                                                  if (s0.toLowerCase() === peg$c53) {
                                                    peg$currPos += (18);
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$e78); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = input.substr(peg$currPos, 24);
                                                    if (s0.toLowerCase() === peg$c54) {
                                                      peg$currPos += (24);
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$e79); }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = input.substr(peg$currPos, 22);
                                                      if (s0.toLowerCase() === peg$c55) {
                                                        peg$currPos += (22);
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$e80); }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e54); }
    }

    return s0;
  }

  function peg$parseReadonlyMediaAttr() {
    let s0, s1;

    peg$silentFails++;
    s0 = input.substr(peg$currPos, 8);
    if (s0.toLowerCase() === peg$c56) {
      peg$currPos += (8);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e82); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 8);
      if (s0.toLowerCase() === peg$c57) {
        peg$currPos += (8);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e83); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 8);
        if (s0.toLowerCase() === peg$c58) {
          peg$currPos += (8);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e84); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 6);
          if (s0.toLowerCase() === peg$c59) {
            peg$currPos += (6);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e85); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 7);
            if (s0.toLowerCase() === peg$c60) {
              peg$currPos += (7);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e86); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 5);
              if (s0.toLowerCase() === peg$c61) {
                peg$currPos += (5);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e87); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 10);
                if (s0.toLowerCase() === peg$c62) {
                  peg$currPos += (10);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e88); }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e81); }
    }

    return s0;
  }

  function peg$parseReadonlyVideoAttr() {
    let s0, s1;

    peg$silentFails++;
    s0 = input.substr(peg$currPos, 11);
    if (s0.toLowerCase() === peg$c63) {
      peg$currPos += (11);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e90); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 10);
      if (s0.toLowerCase() === peg$c64) {
        peg$currPos += (10);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e91); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 12);
        if (s0.toLowerCase() === peg$c65) {
          peg$currPos += (12);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e92); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 13);
          if (s0.toLowerCase() === peg$c66) {
            peg$currPos += (13);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e93); }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e89); }
    }

    return s0;
  }

  function peg$parseHTMLDataAttr() {
    let s0, s1, s2, s3, s4, s5, s6;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.substr(peg$currPos, 5) === peg$c67) {
      s1 = peg$c67;
      peg$currPos += 5;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e95); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = input.charAt(peg$currPos);
      if (peg$r1.test(s3)) {
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e96); }
      }
      if (s3 !== peg$FAILED) {
        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = input.charAt(peg$currPos);
          if (peg$r1.test(s3)) {
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e96); }
          }
        }
      } else {
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$currPos;
        s5 = input.charAt(peg$currPos);
        if (peg$r2.test(s5)) {
          peg$currPos++;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e97); }
        }
        if (s5 !== peg$FAILED) {
          s6 = input.charAt(peg$currPos);
          if (peg$r3.test(s6)) {
            peg$currPos++;
          } else {
            s6 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e98); }
          }
          if (s6 !== peg$FAILED) {
            s5 = [s5, s6];
            s4 = s5;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$currPos;
          s5 = input.charAt(peg$currPos);
          if (peg$r2.test(s5)) {
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e97); }
          }
          if (s5 !== peg$FAILED) {
            s6 = input.charAt(peg$currPos);
            if (peg$r3.test(s6)) {
              peg$currPos++;
            } else {
              s6 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e98); }
            }
            if (s6 !== peg$FAILED) {
              s5 = [s5, s6];
              s4 = s5;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        }
        s1 = [s1, s2, s3];
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e94); }
    }

    return s0;
  }

  function peg$parseGlobalNonBooleanAttribute() {
    let s0, s1;

    peg$silentFails++;
    s0 = input.substr(peg$currPos, 9);
    if (s0.toLowerCase() === peg$c68) {
      peg$currPos += (9);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e100); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 5);
      if (s0.toLowerCase() === peg$c69) {
        peg$currPos += (5);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e101); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 15);
        if (s0.toLowerCase() === peg$c70) {
          peg$currPos += (15);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e102); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 11);
          if (s0.toLowerCase() === peg$c71) {
            peg$currPos += (11);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e103); }
          }
          if (s0 === peg$FAILED) {
            s0 = peg$parseHTMLDataAttr();
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 3);
              if (s0.toLowerCase() === peg$c72) {
                peg$currPos += (3);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e104); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 9);
                if (s0.toLowerCase() === peg$c73) {
                  peg$currPos += (9);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e105); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 8);
                  if (s0.toLowerCase() === peg$c74) {
                    peg$currPos += (8);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e106); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 2);
                    if (s0.toLowerCase() === peg$c75) {
                      peg$currPos += (2);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e107); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 9);
                      if (s0.toLowerCase() === peg$c76) {
                        peg$currPos += (9);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e108); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 4);
                        if (s0.toLowerCase() === peg$c77) {
                          peg$currPos += (4);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e109); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 10);
                          if (s0.toLowerCase() === peg$c78) {
                            peg$currPos += (10);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e110); }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 5);
                            if (s0.toLowerCase() === peg$c79) {
                              peg$currPos += (5);
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e111); }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 8);
                              if (s0.toLowerCase() === peg$c80) {
                                peg$currPos += (8);
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$e112); }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 5);
                                if (s0.toLowerCase() === peg$c81) {
                                  peg$currPos += (5);
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$e113); }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.substr(peg$currPos, 9);
                                  if (s0.toLowerCase() === peg$c82) {
                                    peg$currPos += (9);
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$e114); }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e99); }
    }

    return s0;
  }

  function peg$parseNoArgumentAttribute() {
    let s0, s1, s2, s3;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 42) {
      s1 = peg$c24;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e46); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseNoArgumentsLanguageReservedDirectives();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f50(s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e115); }
    }

    return s0;
  }

  function peg$parseNoArgumentMacroAttribute() {
    let s0, s1, s2, s3, s4;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 40) {
      s1 = peg$c25;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e47); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseOptimizationReservedDirectivesMacroWithNoArgument();
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 41) {
          s3 = peg$c26;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e48); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parse__();
          peg$savedPos = s0;
          s0 = peg$f51(s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e116); }
    }

    return s0;
  }

  function peg$parseEventAttribute() {
    let s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 64) {
      s1 = peg$c83;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e118); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseHTMLAttrName();
      if (s2 !== peg$FAILED) {
        s3 = [];
        s4 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 46) {
          s5 = peg$c84;
          peg$currPos++;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e119); }
        }
        if (s5 !== peg$FAILED) {
          s6 = peg$parseEventModifiers();
          if (s6 !== peg$FAILED) {
            s5 = [s5, s6];
            s4 = s5;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 46) {
            s5 = peg$c84;
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e119); }
          }
          if (s5 !== peg$FAILED) {
            s6 = peg$parseEventModifiers();
            if (s6 !== peg$FAILED) {
              s5 = [s5, s6];
              s4 = s5;
            } else {
              peg$currPos = s4;
              s4 = peg$FAILED;
            }
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        }
        s4 = peg$currPos;
        s5 = peg$parse__();
        if (input.charCodeAt(peg$currPos) === 61) {
          s6 = peg$c23;
          peg$currPos++;
        } else {
          s6 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e45); }
        }
        if (s6 !== peg$FAILED) {
          s7 = peg$parse__();
          s8 = peg$parseVariableQuoteString();
          if (s8 !== peg$FAILED) {
            s5 = [s5, s6, s7, s8];
            s4 = s5;
          } else {
            peg$currPos = s4;
            s4 = peg$FAILED;
          }
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parse__();
          peg$savedPos = s0;
          s0 = peg$f52(s2, s3, s4);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 64) {
        s1 = peg$c83;
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e118); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseKeyboardEvent();
        if (s2 !== peg$FAILED) {
          s3 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 58) {
            s4 = peg$c85;
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e120); }
          }
          if (s4 !== peg$FAILED) {
            s5 = peg$parseKeyboardKeys();
            if (s5 !== peg$FAILED) {
              s4 = [s4, s5];
              s3 = s4;
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
          if (s3 === peg$FAILED) {
            s3 = null;
          }
          s4 = [];
          s5 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 46) {
            s6 = peg$c84;
            peg$currPos++;
          } else {
            s6 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e119); }
          }
          if (s6 !== peg$FAILED) {
            s7 = peg$parseEventModifiers();
            if (s7 !== peg$FAILED) {
              s6 = [s6, s7];
              s5 = s6;
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
          } else {
            peg$currPos = s5;
            s5 = peg$FAILED;
          }
          while (s5 !== peg$FAILED) {
            s4.push(s5);
            s5 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 46) {
              s6 = peg$c84;
              peg$currPos++;
            } else {
              s6 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e119); }
            }
            if (s6 !== peg$FAILED) {
              s7 = peg$parseEventModifiers();
              if (s7 !== peg$FAILED) {
                s6 = [s6, s7];
                s5 = s6;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
          }
          s5 = peg$currPos;
          s6 = peg$parse__();
          if (input.charCodeAt(peg$currPos) === 61) {
            s7 = peg$c23;
            peg$currPos++;
          } else {
            s7 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e45); }
          }
          if (s7 !== peg$FAILED) {
            s8 = peg$parse__();
            s9 = peg$parseVariableQuoteString();
            if (s9 !== peg$FAILED) {
              s6 = [s6, s7, s8, s9];
              s5 = s6;
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
          } else {
            peg$currPos = s5;
            s5 = peg$FAILED;
          }
          if (s5 !== peg$FAILED) {
            s6 = peg$parse__();
            peg$savedPos = s0;
            s0 = peg$f53(s2, s3, s4, s5);
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.charCodeAt(peg$currPos) === 64) {
          s1 = peg$c83;
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e118); }
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parseMouseEvent();
          if (s2 !== peg$FAILED) {
            s3 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 58) {
              s4 = peg$c85;
              peg$currPos++;
            } else {
              s4 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e120); }
            }
            if (s4 !== peg$FAILED) {
              s5 = peg$parseMouseClick();
              if (s5 !== peg$FAILED) {
                s4 = [s4, s5];
                s3 = s4;
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
            } else {
              peg$currPos = s3;
              s3 = peg$FAILED;
            }
            if (s3 === peg$FAILED) {
              s3 = null;
            }
            s4 = [];
            s5 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 46) {
              s6 = peg$c84;
              peg$currPos++;
            } else {
              s6 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e119); }
            }
            if (s6 !== peg$FAILED) {
              s7 = peg$parseKeyboardSystemModifiersKeys();
              if (s7 !== peg$FAILED) {
                s6 = [s6, s7];
                s5 = s6;
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            } else {
              peg$currPos = s5;
              s5 = peg$FAILED;
            }
            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 46) {
                s6 = peg$c84;
                peg$currPos++;
              } else {
                s6 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e119); }
              }
              if (s6 !== peg$FAILED) {
                s7 = peg$parseKeyboardSystemModifiersKeys();
                if (s7 !== peg$FAILED) {
                  s6 = [s6, s7];
                  s5 = s6;
                } else {
                  peg$currPos = s5;
                  s5 = peg$FAILED;
                }
              } else {
                peg$currPos = s5;
                s5 = peg$FAILED;
              }
            }
            s5 = [];
            s6 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 46) {
              s7 = peg$c84;
              peg$currPos++;
            } else {
              s7 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e119); }
            }
            if (s7 !== peg$FAILED) {
              s8 = peg$parseEventModifiers();
              if (s8 !== peg$FAILED) {
                s7 = [s7, s8];
                s6 = s7;
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
            while (s6 !== peg$FAILED) {
              s5.push(s6);
              s6 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 46) {
                s7 = peg$c84;
                peg$currPos++;
              } else {
                s7 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e119); }
              }
              if (s7 !== peg$FAILED) {
                s8 = peg$parseEventModifiers();
                if (s8 !== peg$FAILED) {
                  s7 = [s7, s8];
                  s6 = s7;
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
            }
            s6 = peg$currPos;
            s7 = peg$parse__();
            if (input.charCodeAt(peg$currPos) === 61) {
              s8 = peg$c23;
              peg$currPos++;
            } else {
              s8 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e45); }
            }
            if (s8 !== peg$FAILED) {
              s9 = peg$parse__();
              s10 = peg$parseVariableQuoteString();
              if (s10 !== peg$FAILED) {
                s7 = [s7, s8, s9, s10];
                s6 = s7;
              } else {
                peg$currPos = s6;
                s6 = peg$FAILED;
              }
            } else {
              peg$currPos = s6;
              s6 = peg$FAILED;
            }
            if (s6 !== peg$FAILED) {
              s7 = peg$parse__();
              peg$savedPos = s0;
              s0 = peg$f54(s2, s3, s4, s5, s6);
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 64) {
            s1 = peg$c83;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e118); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parseMouseEvent();
            if (s2 !== peg$FAILED) {
              s3 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 58) {
                s4 = peg$c85;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e120); }
              }
              if (s4 !== peg$FAILED) {
                s5 = [];
                s6 = peg$currPos;
                s7 = peg$parseKeyboardSystemModifiersKeys();
                if (s7 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 46) {
                    s8 = peg$c84;
                    peg$currPos++;
                  } else {
                    s8 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e119); }
                  }
                  if (s8 !== peg$FAILED) {
                    s7 = [s7, s8];
                    s6 = s7;
                  } else {
                    peg$currPos = s6;
                    s6 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  while (s6 !== peg$FAILED) {
                    s5.push(s6);
                    s6 = peg$currPos;
                    s7 = peg$parseKeyboardSystemModifiersKeys();
                    if (s7 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 46) {
                        s8 = peg$c84;
                        peg$currPos++;
                      } else {
                        s8 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e119); }
                      }
                      if (s8 !== peg$FAILED) {
                        s7 = [s7, s8];
                        s6 = s7;
                      } else {
                        peg$currPos = s6;
                        s6 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s6;
                      s6 = peg$FAILED;
                    }
                  }
                } else {
                  s5 = peg$FAILED;
                }
                if (s5 !== peg$FAILED) {
                  s4 = [s4, s5];
                  s3 = s4;
                } else {
                  peg$currPos = s3;
                  s3 = peg$FAILED;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$FAILED;
              }
              if (s3 === peg$FAILED) {
                s3 = null;
              }
              s4 = peg$parseMouseClick();
              if (s4 !== peg$FAILED) {
                s5 = [];
                s6 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 46) {
                  s7 = peg$c84;
                  peg$currPos++;
                } else {
                  s7 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e119); }
                }
                if (s7 !== peg$FAILED) {
                  s8 = peg$parseEventModifiers();
                  if (s8 !== peg$FAILED) {
                    s7 = [s7, s8];
                    s6 = s7;
                  } else {
                    peg$currPos = s6;
                    s6 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                while (s6 !== peg$FAILED) {
                  s5.push(s6);
                  s6 = peg$currPos;
                  if (input.charCodeAt(peg$currPos) === 46) {
                    s7 = peg$c84;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e119); }
                  }
                  if (s7 !== peg$FAILED) {
                    s8 = peg$parseEventModifiers();
                    if (s8 !== peg$FAILED) {
                      s7 = [s7, s8];
                      s6 = s7;
                    } else {
                      peg$currPos = s6;
                      s6 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s6;
                    s6 = peg$FAILED;
                  }
                }
                s6 = peg$currPos;
                s7 = peg$parse__();
                if (input.charCodeAt(peg$currPos) === 61) {
                  s8 = peg$c23;
                  peg$currPos++;
                } else {
                  s8 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e45); }
                }
                if (s8 !== peg$FAILED) {
                  s9 = peg$parse__();
                  s10 = peg$parseVariableQuoteString();
                  if (s10 !== peg$FAILED) {
                    s7 = [s7, s8, s9, s10];
                    s6 = s7;
                  } else {
                    peg$currPos = s6;
                    s6 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s6;
                  s6 = peg$FAILED;
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$parse__();
                  peg$savedPos = s0;
                  s0 = peg$f55(s2, s3, s4, s5, s6);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.charCodeAt(peg$currPos) === 64) {
              s1 = peg$c83;
              peg$currPos++;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e118); }
            }
            if (s1 !== peg$FAILED) {
              s2 = peg$parseAttrName();
              if (s2 !== peg$FAILED) {
                s3 = [];
                s4 = peg$currPos;
                if (input.charCodeAt(peg$currPos) === 46) {
                  s5 = peg$c84;
                  peg$currPos++;
                } else {
                  s5 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e119); }
                }
                if (s5 !== peg$FAILED) {
                  s6 = peg$parseEventModifiers();
                  if (s6 !== peg$FAILED) {
                    s5 = [s5, s6];
                    s4 = s5;
                  } else {
                    peg$currPos = s4;
                    s4 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s4;
                  s4 = peg$FAILED;
                }
                while (s4 !== peg$FAILED) {
                  s3.push(s4);
                  s4 = peg$currPos;
                  if (input.charCodeAt(peg$currPos) === 46) {
                    s5 = peg$c84;
                    peg$currPos++;
                  } else {
                    s5 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e119); }
                  }
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parseEventModifiers();
                    if (s6 !== peg$FAILED) {
                      s5 = [s5, s6];
                      s4 = s5;
                    } else {
                      peg$currPos = s4;
                      s4 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s4;
                    s4 = peg$FAILED;
                  }
                }
                s4 = peg$currPos;
                s5 = peg$parse__();
                if (input.charCodeAt(peg$currPos) === 61) {
                  s6 = peg$c23;
                  peg$currPos++;
                } else {
                  s6 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e45); }
                }
                if (s6 !== peg$FAILED) {
                  s7 = peg$parse__();
                  s8 = peg$parseVariableQuoteString();
                  if (s8 !== peg$FAILED) {
                    s5 = [s5, s6, s7, s8];
                    s4 = s5;
                  } else {
                    peg$currPos = s4;
                    s4 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s4;
                  s4 = peg$FAILED;
                }
                if (s4 !== peg$FAILED) {
                  s5 = peg$parse__();
                  peg$savedPos = s0;
                  s0 = peg$f56(s2, s3, s4);
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e117); }
    }

    return s0;
  }

  function peg$parseHTMLDomReferenceDirectiveAttribute() {
    let s0, s1, s2, s3;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 35) {
      s1 = peg$c16;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e30); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseHTMLDomVarName();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f57(s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsePrimitiveLanguageReservedDirectives() {
    let s0;

    if (input.substr(peg$currPos, 2) === peg$c86) {
      s0 = peg$c86;
      peg$currPos += 2;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e121); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c87) {
        s0 = peg$c87;
        peg$currPos += 3;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e122); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c88) {
          s0 = peg$c88;
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e123); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 2) === peg$c89) {
            s0 = peg$c89;
            peg$currPos += 2;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e124); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 3) === peg$c90) {
              s0 = peg$c90;
              peg$currPos += 3;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e125); }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseNoArgumentsLanguageReservedDirectives() {
    let s0;

    if (input.substr(peg$currPos, 7) === peg$c91) {
      s0 = peg$c91;
      peg$currPos += 7;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e126); }
    }

    return s0;
  }

  function peg$parseOptimizationReservedDirectives() {
    let s0;

    if (input.substr(peg$currPos, 4) === peg$c92) {
      s0 = peg$c92;
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e127); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c93) {
        s0 = peg$c93;
        peg$currPos += 4;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e128); }
      }
    }

    return s0;
  }

  function peg$parseOptimizationReservedDirectivesMacro() {
    let s0;

    if (input.substr(peg$currPos, 6) === peg$c94) {
      s0 = peg$c94;
      peg$currPos += 6;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e129); }
    }

    return s0;
  }

  function peg$parseOptimizationReservedDirectivesMacroWithNoArgument() {
    let s0;

    if (input.substr(peg$currPos, 3) === peg$c87) {
      s0 = peg$c87;
      peg$currPos += 3;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e122); }
    }

    return s0;
  }

  function peg$parseSpecificDrallDirectives() {
    let s0;

    if (input.substr(peg$currPos, 4) === peg$c95) {
      s0 = peg$c95;
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e130); }
    }
    if (s0 === peg$FAILED) {
      s0 = peg$parseSpecificDrallPermSimplificationDirectives();
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 3) === peg$c96) {
          s0 = peg$c96;
          peg$currPos += 3;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e131); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 4) === peg$c97) {
            s0 = peg$c97;
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e132); }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSpecificDrallPermSimplificationDirectives() {
    let s0;

    if (input.substr(peg$currPos, 10) === peg$c98) {
      s0 = peg$c98;
      peg$currPos += 10;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e133); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 11) === peg$c99) {
        s0 = peg$c99;
        peg$currPos += 11;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e134); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 13) === peg$c100) {
          s0 = peg$c100;
          peg$currPos += 13;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e135); }
        }
      }
    }

    return s0;
  }

  function peg$parseHTMLAttrName() {
    let s0, s1;

    peg$silentFails++;
    s0 = peg$parseLegacyHtmlAttrName();
    if (s0 === peg$FAILED) {
      s0 = peg$parseCurrentHtmlAttrName();
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e136); }
    }

    return s0;
  }

  function peg$parseLegacyHtmlAttrName() {
    let s0;

    s0 = input.substr(peg$currPos, 10);
    if (s0.toLowerCase() === peg$c101) {
      peg$currPos += (10);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e137); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 7);
      if (s0.toLowerCase() === peg$c102) {
        peg$currPos += (7);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e138); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 6);
        if (s0.toLowerCase() === peg$c103) {
          peg$currPos += (6);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e139); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 5);
          if (s0.toLowerCase() === peg$c104) {
            peg$currPos += (5);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e140); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 6);
            if (s0.toLowerCase() === peg$c105) {
              peg$currPos += (6);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e141); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 8);
              if (s0.toLowerCase() === peg$c106) {
                peg$currPos += (8);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e142); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 5);
                if (s0.toLowerCase() === peg$c107) {
                  peg$currPos += (5);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e143); }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseCurrentHtmlAttrName() {
    let s0;

    s0 = input.substr(peg$currPos, 14);
    if (s0.toLowerCase() === peg$c108) {
      peg$currPos += (14);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e144); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 9);
      if (s0.toLowerCase() === peg$c68) {
        peg$currPos += (9);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e100); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 6);
        if (s0.toLowerCase() === peg$c109) {
          peg$currPos += (6);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e145); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 5);
          if (s0.toLowerCase() === peg$c110) {
            peg$currPos += (5);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e146); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 5);
            if (s0.toLowerCase() === peg$c111) {
              peg$currPos += (5);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e147); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 3);
              if (s0.toLowerCase() === peg$c112) {
                peg$currPos += (3);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e148); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 14);
                if (s0.toLowerCase() === peg$c113) {
                  peg$currPos += (14);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e149); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 12);
                  if (s0.toLowerCase() === peg$c114) {
                    peg$currPos += (12);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e150); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 8);
                    if (s0.toLowerCase() === peg$c57) {
                      peg$currPos += (8);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e83); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 7);
                      if (s0.toLowerCase() === peg$c115) {
                        peg$currPos += (7);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e151); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 9);
                        if (s0.toLowerCase() === peg$c116) {
                          peg$currPos += (9);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e152); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 7);
                          if (s0.toLowerCase() === peg$c117) {
                            peg$currPos += (7);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e153); }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 4);
                            if (s0.toLowerCase() === peg$c118) {
                              peg$currPos += (4);
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e154); }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 5);
                              if (s0.toLowerCase() === peg$c69) {
                                peg$currPos += (5);
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$e101); }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 4);
                                if (s0.toLowerCase() === peg$c119) {
                                  peg$currPos += (4);
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$e155); }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.substr(peg$currPos, 8);
                                  if (s0.toLowerCase() === peg$c120) {
                                    peg$currPos += (8);
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$e156); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = input.substr(peg$currPos, 4);
                                    if (s0.toLowerCase() === peg$c121) {
                                      peg$currPos += (4);
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$e157); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = input.substr(peg$currPos, 7);
                                      if (s0.toLowerCase() === peg$c122) {
                                        peg$currPos += (7);
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$e158); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = input.substr(peg$currPos, 7);
                                        if (s0.toLowerCase() === peg$c123) {
                                          peg$currPos += (7);
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$e159); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = input.substr(peg$currPos, 15);
                                          if (s0.toLowerCase() === peg$c70) {
                                            peg$currPos += (15);
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$e102); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = input.substr(peg$currPos, 11);
                                            if (s0.toLowerCase() === peg$c71) {
                                              peg$currPos += (11);
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$e103); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = input.substr(peg$currPos, 6);
                                              if (s0.toLowerCase() === peg$c124) {
                                                peg$currPos += (6);
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$e160); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = input.substr(peg$currPos, 11);
                                                if (s0.toLowerCase() === peg$c125) {
                                                  peg$currPos += (11);
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$e161); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = input.substr(peg$currPos, 3);
                                                  if (s0.toLowerCase() === peg$c126) {
                                                    peg$currPos += (3);
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$e162); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = input.substr(peg$currPos, 4);
                                                    if (s0.toLowerCase() === peg$c127) {
                                                      peg$currPos += (4);
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$e163); }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = input.substr(peg$currPos, 8);
                                                      if (s0.toLowerCase() === peg$c128) {
                                                        peg$currPos += (8);
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$e164); }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        s0 = input.substr(peg$currPos, 8);
                                                        if (s0.toLowerCase() === peg$c129) {
                                                          peg$currPos += (8);
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$e165); }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          s0 = input.substr(peg$currPos, 3);
                                                          if (s0.toLowerCase() === peg$c72) {
                                                            peg$currPos += (3);
                                                          } else {
                                                            s0 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$e104); }
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            s0 = input.substr(peg$currPos, 7);
                                                            if (s0.toLowerCase() === peg$c130) {
                                                              peg$currPos += (7);
                                                            } else {
                                                              s0 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$e166); }
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              s0 = input.substr(peg$currPos, 8);
                                                              if (s0.toLowerCase() === peg$c131) {
                                                                peg$currPos += (8);
                                                              } else {
                                                                s0 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$e167); }
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                s0 = input.substr(peg$currPos, 9);
                                                                if (s0.toLowerCase() === peg$c73) {
                                                                  peg$currPos += (9);
                                                                } else {
                                                                  s0 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$e105); }
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  s0 = input.substr(peg$currPos, 8);
                                                                  if (s0.toLowerCase() === peg$c74) {
                                                                    peg$currPos += (8);
                                                                  } else {
                                                                    s0 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$e106); }
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    s0 = input.substr(peg$currPos, 7);
                                                                    if (s0.toLowerCase() === peg$c132) {
                                                                      peg$currPos += (7);
                                                                    } else {
                                                                      s0 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$e168); }
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      s0 = input.substr(peg$currPos, 12);
                                                                      if (s0.toLowerCase() === peg$c133) {
                                                                        peg$currPos += (12);
                                                                      } else {
                                                                        s0 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$e169); }
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        s0 = input.substr(peg$currPos, 3);
                                                                        if (s0.toLowerCase() === peg$c87) {
                                                                          peg$currPos += (3);
                                                                        } else {
                                                                          s0 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$e170); }
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          s0 = input.substr(peg$currPos, 4);
                                                                          if (s0.toLowerCase() === peg$c134) {
                                                                            peg$currPos += (4);
                                                                          } else {
                                                                            s0 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$e171); }
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            s0 = input.substr(peg$currPos, 10);
                                                                            if (s0.toLowerCase() === peg$c135) {
                                                                              peg$currPos += (10);
                                                                            } else {
                                                                              s0 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$e172); }
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              s0 = input.substr(peg$currPos, 11);
                                                                              if (s0.toLowerCase() === peg$c136) {
                                                                                peg$currPos += (11);
                                                                              } else {
                                                                                s0 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$e173); }
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                s0 = input.substr(peg$currPos, 10);
                                                                                if (s0.toLowerCase() === peg$c137) {
                                                                                  peg$currPos += (10);
                                                                                } else {
                                                                                  s0 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e174); }
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  s0 = input.substr(peg$currPos, 10);
                                                                                  if (s0.toLowerCase() === peg$c138) {
                                                                                    peg$currPos += (10);
                                                                                  } else {
                                                                                    s0 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e175); }
                                                                                  }
                                                                                  if (s0 === peg$FAILED) {
                                                                                    s0 = input.substr(peg$currPos, 7);
                                                                                    if (s0.toLowerCase() === peg$c139) {
                                                                                      peg$currPos += (7);
                                                                                    } else {
                                                                                      s0 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e176); }
                                                                                    }
                                                                                    if (s0 === peg$FAILED) {
                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                      if (s0.toLowerCase() === peg$c140) {
                                                                                        peg$currPos += (4);
                                                                                      } else {
                                                                                        s0 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e177); }
                                                                                      }
                                                                                      if (s0 === peg$FAILED) {
                                                                                        s0 = input.substr(peg$currPos, 4);
                                                                                        if (s0.toLowerCase() === peg$c141) {
                                                                                          peg$currPos += (4);
                                                                                        } else {
                                                                                          s0 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e178); }
                                                                                        }
                                                                                        if (s0 === peg$FAILED) {
                                                                                          s0 = input.substr(peg$currPos, 8);
                                                                                          if (s0.toLowerCase() === peg$c142) {
                                                                                            peg$currPos += (8);
                                                                                          } else {
                                                                                            s0 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e179); }
                                                                                          }
                                                                                          if (s0 === peg$FAILED) {
                                                                                            s0 = input.substr(peg$currPos, 10);
                                                                                            if (s0.toLowerCase() === peg$c143) {
                                                                                              peg$currPos += (10);
                                                                                            } else {
                                                                                              s0 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e180); }
                                                                                            }
                                                                                            if (s0 === peg$FAILED) {
                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                              if (s0.toLowerCase() === peg$c144) {
                                                                                                peg$currPos += (4);
                                                                                              } else {
                                                                                                s0 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e181); }
                                                                                              }
                                                                                              if (s0 === peg$FAILED) {
                                                                                                s0 = input.substr(peg$currPos, 2);
                                                                                                if (s0.toLowerCase() === peg$c75) {
                                                                                                  peg$currPos += (2);
                                                                                                } else {
                                                                                                  s0 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e107); }
                                                                                                }
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  s0 = input.substr(peg$currPos, 10);
                                                                                                  if (s0.toLowerCase() === peg$c145) {
                                                                                                    peg$currPos += (10);
                                                                                                  } else {
                                                                                                    s0 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e182); }
                                                                                                  }
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    s0 = input.substr(peg$currPos, 9);
                                                                                                    if (s0.toLowerCase() === peg$c146) {
                                                                                                      peg$currPos += (9);
                                                                                                    } else {
                                                                                                      s0 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e183); }
                                                                                                    }
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      s0 = input.substr(peg$currPos, 13);
                                                                                                      if (s0.toLowerCase() === peg$c147) {
                                                                                                        peg$currPos += (13);
                                                                                                      } else {
                                                                                                        s0 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e184); }
                                                                                                      }
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        s0 = input.substr(peg$currPos, 9);
                                                                                                        if (s0.toLowerCase() === peg$c76) {
                                                                                                          peg$currPos += (9);
                                                                                                        } else {
                                                                                                          s0 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e108); }
                                                                                                        }
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          s0 = input.substr(peg$currPos, 7);
                                                                                                          if (s0.toLowerCase() === peg$c148) {
                                                                                                            peg$currPos += (7);
                                                                                                          } else {
                                                                                                            s0 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e185); }
                                                                                                          }
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            s0 = input.substr(peg$currPos, 4);
                                                                                                            if (s0.toLowerCase() === peg$c149) {
                                                                                                              peg$currPos += (4);
                                                                                                            } else {
                                                                                                              s0 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e186); }
                                                                                                            }
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              s0 = input.substr(peg$currPos, 5);
                                                                                                              if (s0.toLowerCase() === peg$c150) {
                                                                                                                peg$currPos += (5);
                                                                                                              } else {
                                                                                                                s0 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e187); }
                                                                                                              }
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                s0 = input.substr(peg$currPos, 4);
                                                                                                                if (s0.toLowerCase() === peg$c77) {
                                                                                                                  peg$currPos += (4);
                                                                                                                } else {
                                                                                                                  s0 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e109); }
                                                                                                                }
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  s0 = input.substr(peg$currPos, 8);
                                                                                                                  if (s0.toLowerCase() === peg$c151) {
                                                                                                                    peg$currPos += (8);
                                                                                                                  } else {
                                                                                                                    s0 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e188); }
                                                                                                                  }
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    s0 = input.substr(peg$currPos, 7);
                                                                                                                    if (s0.toLowerCase() === peg$c152) {
                                                                                                                      peg$currPos += (7);
                                                                                                                    } else {
                                                                                                                      s0 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e189); }
                                                                                                                    }
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                      if (s0.toLowerCase() === peg$c153) {
                                                                                                                        peg$currPos += (4);
                                                                                                                      } else {
                                                                                                                        s0 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e190); }
                                                                                                                      }
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        s0 = input.substr(peg$currPos, 3);
                                                                                                                        if (s0.toLowerCase() === peg$c154) {
                                                                                                                          peg$currPos += (3);
                                                                                                                        } else {
                                                                                                                          s0 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e191); }
                                                                                                                        }
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          s0 = input.substr(peg$currPos, 3);
                                                                                                                          if (s0.toLowerCase() === peg$c155) {
                                                                                                                            peg$currPos += (3);
                                                                                                                          } else {
                                                                                                                            s0 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e192); }
                                                                                                                          }
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            s0 = input.substr(peg$currPos, 9);
                                                                                                                            if (s0.toLowerCase() === peg$c156) {
                                                                                                                              peg$currPos += (9);
                                                                                                                            } else {
                                                                                                                              s0 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e193); }
                                                                                                                            }
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              s0 = input.substr(peg$currPos, 9);
                                                                                                                              if (s0.toLowerCase() === peg$c157) {
                                                                                                                                peg$currPos += (9);
                                                                                                                              } else {
                                                                                                                                s0 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e194); }
                                                                                                                              }
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                                                if (s0.toLowerCase() === peg$c158) {
                                                                                                                                  peg$currPos += (5);
                                                                                                                                } else {
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e195); }
                                                                                                                                }
                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                                                                  if (s0.toLowerCase() === peg$c159) {
                                                                                                                                    peg$currPos += (6);
                                                                                                                                  } else {
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e196); }
                                                                                                                                  }
                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                    s0 = input.substr(peg$currPos, 3);
                                                                                                                                    if (s0.toLowerCase() === peg$c160) {
                                                                                                                                      peg$currPos += (3);
                                                                                                                                    } else {
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e197); }
                                                                                                                                    }
                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                                      if (s0.toLowerCase() === peg$c161) {
                                                                                                                                        peg$currPos += (4);
                                                                                                                                      } else {
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e198); }
                                                                                                                                      }
                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                        s0 = input.substr(peg$currPos, 7);
                                                                                                                                        if (s0.toLowerCase() === peg$c162) {
                                                                                                                                          peg$currPos += (7);
                                                                                                                                        } else {
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e199); }
                                                                                                                                        }
                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                          s0 = input.substr(peg$currPos, 7);
                                                                                                                                          if (s0.toLowerCase() === peg$c163) {
                                                                                                                                            peg$currPos += (7);
                                                                                                                                          } else {
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e200); }
                                                                                                                                          }
                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                            s0 = input.substr(peg$currPos, 4);
                                                                                                                                            if (s0.toLowerCase() === peg$c164) {
                                                                                                                                              peg$currPos += (4);
                                                                                                                                            } else {
                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e201); }
                                                                                                                                            }
                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                              s0 = input.substr(peg$currPos, 11);
                                                                                                                                              if (s0.toLowerCase() === peg$c165) {
                                                                                                                                                peg$currPos += (11);
                                                                                                                                              } else {
                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e202); }
                                                                                                                                              }
                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                s0 = input.substr(peg$currPos, 6);
                                                                                                                                                if (s0.toLowerCase() === peg$c166) {
                                                                                                                                                  peg$currPos += (6);
                                                                                                                                                } else {
                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e203); }
                                                                                                                                                }
                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                  s0 = input.substr(peg$currPos, 7);
                                                                                                                                                  if (s0.toLowerCase() === peg$c167) {
                                                                                                                                                    peg$currPos += (7);
                                                                                                                                                  } else {
                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e204); }
                                                                                                                                                  }
                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                    s0 = input.substr(peg$currPos, 10);
                                                                                                                                                    if (s0.toLowerCase() === peg$c168) {
                                                                                                                                                      peg$currPos += (10);
                                                                                                                                                    } else {
                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e205); }
                                                                                                                                                    }
                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                      s0 = input.substr(peg$currPos, 14);
                                                                                                                                                      if (s0.toLowerCase() === peg$c169) {
                                                                                                                                                        peg$currPos += (14);
                                                                                                                                                      } else {
                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e206); }
                                                                                                                                                      }
                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                        s0 = input.substr(peg$currPos, 3);
                                                                                                                                                        if (s0.toLowerCase() === peg$c170) {
                                                                                                                                                          peg$currPos += (3);
                                                                                                                                                        } else {
                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e207); }
                                                                                                                                                        }
                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                                                          if (s0.toLowerCase() === peg$c171) {
                                                                                                                                                            peg$currPos += (4);
                                                                                                                                                          } else {
                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e208); }
                                                                                                                                                          }
                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                            s0 = input.substr(peg$currPos, 7);
                                                                                                                                                            if (s0.toLowerCase() === peg$c172) {
                                                                                                                                                              peg$currPos += (7);
                                                                                                                                                            } else {
                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e209); }
                                                                                                                                                            }
                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                              s0 = input.substr(peg$currPos, 7);
                                                                                                                                                              if (s0.toLowerCase() === peg$c173) {
                                                                                                                                                                peg$currPos += (7);
                                                                                                                                                              } else {
                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e210); }
                                                                                                                                                              }
                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                if (s0.toLowerCase() === peg$c174) {
                                                                                                                                                                  peg$currPos += (5);
                                                                                                                                                                } else {
                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e211); }
                                                                                                                                                                }
                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                  if (s0.toLowerCase() === peg$c175) {
                                                                                                                                                                    peg$currPos += (6);
                                                                                                                                                                  } else {
                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e212); }
                                                                                                                                                                  }
                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                    s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                    if (s0.toLowerCase() === peg$c176) {
                                                                                                                                                                      peg$currPos += (5);
                                                                                                                                                                    } else {
                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e213); }
                                                                                                                                                                    }
                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                      if (s0.toLowerCase() === peg$c177) {
                                                                                                                                                                        peg$currPos += (4);
                                                                                                                                                                      } else {
                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e214); }
                                                                                                                                                                      }
                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                        s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                        if (s0.toLowerCase() === peg$c178) {
                                                                                                                                                                          peg$currPos += (5);
                                                                                                                                                                        } else {
                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e215); }
                                                                                                                                                                        }
                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                          if (s0.toLowerCase() === peg$c179) {
                                                                                                                                                                            peg$currPos += (4);
                                                                                                                                                                          } else {
                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e216); }
                                                                                                                                                                          }
                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                            s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                            if (s0.toLowerCase() === peg$c180) {
                                                                                                                                                                              peg$currPos += (4);
                                                                                                                                                                            } else {
                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e217); }
                                                                                                                                                                            }
                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                              s0 = input.substr(peg$currPos, 10);
                                                                                                                                                                              if (s0.toLowerCase() === peg$c78) {
                                                                                                                                                                                peg$currPos += (10);
                                                                                                                                                                              } else {
                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e110); }
                                                                                                                                                                              }
                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                                if (s0.toLowerCase() === peg$c181) {
                                                                                                                                                                                  peg$currPos += (3);
                                                                                                                                                                                } else {
                                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e218); }
                                                                                                                                                                                }
                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                                  if (s0.toLowerCase() === peg$c182) {
                                                                                                                                                                                    peg$currPos += (6);
                                                                                                                                                                                  } else {
                                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e219); }
                                                                                                                                                                                  }
                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                    s0 = input.substr(peg$currPos, 7);
                                                                                                                                                                                    if (s0.toLowerCase() === peg$c183) {
                                                                                                                                                                                      peg$currPos += (7);
                                                                                                                                                                                    } else {
                                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e220); }
                                                                                                                                                                                    }
                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                      s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                                      if (s0.toLowerCase() === peg$c184) {
                                                                                                                                                                                        peg$currPos += (6);
                                                                                                                                                                                      } else {
                                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e221); }
                                                                                                                                                                                      }
                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                        s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                        if (s0.toLowerCase() === peg$c185) {
                                                                                                                                                                                          peg$currPos += (5);
                                                                                                                                                                                        } else {
                                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e222); }
                                                                                                                                                                                        }
                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                                          if (s0.toLowerCase() === peg$c186) {
                                                                                                                                                                                            peg$currPos += (4);
                                                                                                                                                                                          } else {
                                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e223); }
                                                                                                                                                                                          }
                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                            s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                            if (s0.toLowerCase() === peg$c79) {
                                                                                                                                                                                              peg$currPos += (5);
                                                                                                                                                                                            } else {
                                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e111); }
                                                                                                                                                                                            }
                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                              s0 = input.substr(peg$currPos, 7);
                                                                                                                                                                                              if (s0.toLowerCase() === peg$c187) {
                                                                                                                                                                                                peg$currPos += (7);
                                                                                                                                                                                              } else {
                                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e224); }
                                                                                                                                                                                              }
                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                s0 = input.substr(peg$currPos, 8);
                                                                                                                                                                                                if (s0.toLowerCase() === peg$c80) {
                                                                                                                                                                                                  peg$currPos += (8);
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e112); }
                                                                                                                                                                                                }
                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                                                  if (s0.toLowerCase() === peg$c188) {
                                                                                                                                                                                                    peg$currPos += (6);
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e225); }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                    s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                                    if (s0.toLowerCase() === peg$c81) {
                                                                                                                                                                                                      peg$currPos += (5);
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e113); }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                      s0 = input.substr(peg$currPos, 9);
                                                                                                                                                                                                      if (s0.toLowerCase() === peg$c82) {
                                                                                                                                                                                                        peg$currPos += (9);
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e114); }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                        s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                                                        if (s0.toLowerCase() === peg$c189) {
                                                                                                                                                                                                          peg$currPos += (4);
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e226); }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                          s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                                                          if (s0.toLowerCase() === peg$c190) {
                                                                                                                                                                                                            peg$currPos += (6);
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e227); }
                                                                                                                                                                                                          }
                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                            s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                                            if (s0.toLowerCase() === peg$c191) {
                                                                                                                                                                                                              peg$currPos += (5);
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e228); }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                                                              if (s0.toLowerCase() === peg$c192) {
                                                                                                                                                                                                                peg$currPos += (4);
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e229); }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseKeyboardEvent() {
    let s0;

    if (input.substr(peg$currPos, 7) === peg$c193) {
      s0 = peg$c193;
      peg$currPos += 7;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e230); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 8) === peg$c194) {
        s0 = peg$c194;
        peg$currPos += 8;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e231); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c195) {
          s0 = peg$c195;
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e232); }
        }
      }
    }

    return s0;
  }

  function peg$parseKeyboardKeys() {
    let s0;

    if (input.substr(peg$currPos, 5) === peg$c196) {
      s0 = peg$c196;
      peg$currPos += 5;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e233); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c197) {
        s0 = peg$c197;
        peg$currPos += 3;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e234); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c198) {
          s0 = peg$c198;
          peg$currPos += 6;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e235); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 3) === peg$c199) {
            s0 = peg$c199;
            peg$currPos += 3;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e236); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 5) === peg$c200) {
              s0 = peg$c200;
              peg$currPos += 5;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e237); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c201) {
                s0 = peg$c201;
                peg$currPos += 2;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e238); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 4) === peg$c202) {
                  s0 = peg$c202;
                  peg$currPos += 4;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e239); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 4) === peg$c203) {
                    s0 = peg$c203;
                    peg$currPos += 4;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e240); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 5) === peg$c204) {
                      s0 = peg$c204;
                      peg$currPos += 5;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e241); }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseKeyboardSystemModifiersKeys() {
    let s0;

    if (input.substr(peg$currPos, 4) === peg$c205) {
      s0 = peg$c205;
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e242); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 3) === peg$c112) {
        s0 = peg$c112;
        peg$currPos += 3;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e243); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c206) {
          s0 = peg$c206;
          peg$currPos += 5;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e244); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 4) === peg$c207) {
            s0 = peg$c207;
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e245); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 8) === peg$c208) {
              s0 = peg$c208;
              peg$currPos += 8;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e246); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 2) === peg$c209) {
                s0 = peg$c209;
                peg$currPos += 2;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e247); }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseMouseEvent() {
    let s0;

    if (input.substr(peg$currPos, 5) === peg$c210) {
      s0 = peg$c210;
      peg$currPos += 5;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e248); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 9) === peg$c211) {
        s0 = peg$c211;
        peg$currPos += 9;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e249); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c212) {
          s0 = peg$c212;
          peg$currPos += 7;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e250); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 9) === peg$c213) {
            s0 = peg$c213;
            peg$currPos += 9;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e251); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 8) === peg$c214) {
              s0 = peg$c214;
              peg$currPos += 8;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e252); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 9) === peg$c215) {
                s0 = peg$c215;
                peg$currPos += 9;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e253); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 8) === peg$c216) {
                  s0 = peg$c216;
                  peg$currPos += 8;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e254); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 10) === peg$c217) {
                    s0 = peg$c217;
                    peg$currPos += 10;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e255); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 10) === peg$c218) {
                      s0 = peg$c218;
                      peg$currPos += 10;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e256); }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseMouseClick() {
    let s0;

    if (input.substr(peg$currPos, 4) === peg$c203) {
      s0 = peg$c203;
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e240); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 5) === peg$c204) {
        s0 = peg$c204;
        peg$currPos += 5;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e241); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c219) {
          s0 = peg$c219;
          peg$currPos += 6;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e257); }
        }
      }
    }

    return s0;
  }

  function peg$parseEventModifiers() {
    let s0;

    if (input.substr(peg$currPos, 4) === peg$c220) {
      s0 = peg$c220;
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e258); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 7) === peg$c221) {
        s0 = peg$c221;
        peg$currPos += 7;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e259); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c115) {
          s0 = peg$c115;
          peg$currPos += 7;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e260); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 4) === peg$c222) {
            s0 = peg$c222;
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e261); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 4) === peg$c223) {
              s0 = peg$c223;
              peg$currPos += 4;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e262); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 7) === peg$c224) {
                s0 = peg$c224;
                peg$currPos += 7;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e263); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 8) === peg$c225) {
                  s0 = peg$c225;
                  peg$currPos += 8;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e264); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 8) === peg$c226) {
                    s0 = peg$c226;
                    peg$currPos += 8;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e265); }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseString() {
    let s0, s1, s2;

    peg$silentFails++;
    s0 = peg$parseDoubleQuoteString();
    if (s0 === peg$FAILED) {
      s0 = peg$parseSingleQuoteString();
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = [];
        s2 = input.charAt(peg$currPos);
        if (peg$r4.test(s2)) {
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e267); }
        }
        if (s2 !== peg$FAILED) {
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            s2 = input.charAt(peg$currPos);
            if (peg$r4.test(s2)) {
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e267); }
            }
          }
        } else {
          s1 = peg$FAILED;
        }
        if (s1 !== peg$FAILED) {
          s2 = peg$parse__();
          peg$savedPos = s0;
          s0 = peg$f58(s1);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e266); }
    }

    return s0;
  }

  function peg$parseDoubleQuoteString() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 34) {
      s1 = peg$c227;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e268); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = input.charAt(peg$currPos);
      if (peg$r5.test(s3)) {
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e269); }
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = input.charAt(peg$currPos);
        if (peg$r5.test(s3)) {
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e269); }
        }
      }
      if (input.charCodeAt(peg$currPos) === 34) {
        s3 = peg$c227;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e268); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f59(s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSingleQuoteString() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 39) {
      s1 = peg$c228;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e270); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = input.charAt(peg$currPos);
      if (peg$r6.test(s3)) {
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e271); }
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = input.charAt(peg$currPos);
        if (peg$r6.test(s3)) {
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e271); }
        }
      }
      if (input.charCodeAt(peg$currPos) === 39) {
        s3 = peg$c228;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e270); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parse__();
        peg$savedPos = s0;
        s0 = peg$f60(s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseVariableQuoteString() {
    let s0, s1, s2, s3;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 123) {
      s1 = peg$c229;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e272); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = input.charAt(peg$currPos);
      if (peg$r7.test(s3)) {
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e273); }
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = input.charAt(peg$currPos);
        if (peg$r7.test(s3)) {
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e273); }
        }
      }
      if (input.charCodeAt(peg$currPos) === 125) {
        s3 = peg$c230;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e274); }
      }
      if (s3 !== peg$FAILED) {
        peg$savedPos = s0;
        s0 = peg$f61(s2);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSelfCloseTagName() {
    let s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c231) {
      peg$currPos += (4);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e275); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 4);
      if (s0.toLowerCase() === peg$c232) {
        peg$currPos += (4);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e276); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 2);
        if (s0.toLowerCase() === peg$c233) {
          peg$currPos += (2);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e277); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 3);
          if (s0.toLowerCase() === peg$c234) {
            peg$currPos += (3);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e278); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 5);
            if (s0.toLowerCase() === peg$c235) {
              peg$currPos += (5);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e279); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 2);
              if (s0.toLowerCase() === peg$c236) {
                peg$currPos += (2);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e280); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 3);
                if (s0.toLowerCase() === peg$c237) {
                  peg$currPos += (3);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e281); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 5);
                  if (s0.toLowerCase() === peg$c238) {
                    peg$currPos += (5);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e282); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 4);
                    if (s0.toLowerCase() === peg$c239) {
                      peg$currPos += (4);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e283); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 3);
                      if (s0.toLowerCase() === peg$c240) {
                        peg$currPos += (3);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e284); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 7);
                        if (s0.toLowerCase() === peg$c241) {
                          peg$currPos += (7);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e285); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 6);
                          if (s0.toLowerCase() === peg$c242) {
                            peg$currPos += (6);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e286); }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 8);
                            if (s0.toLowerCase() === peg$c243) {
                              peg$currPos += (8);
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e287); }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = peg$parseSelfCloseTagNameHtml5();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSelfCloseTagNameHtml5() {
    let s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c207) {
      peg$currPos += (4);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e288); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 5);
      if (s0.toLowerCase() === peg$c244) {
        peg$currPos += (5);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e289); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 6);
        if (s0.toLowerCase() === peg$c245) {
          peg$currPos += (6);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e290); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 5);
          if (s0.toLowerCase() === peg$c246) {
            peg$currPos += (5);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e291); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 3);
            if (s0.toLowerCase() === peg$c240) {
              peg$currPos += (3);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e284); }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseHTMLTagName() {
    let s0;

    s0 = peg$parseHtml4ExclusivesTagName();
    if (s0 === peg$FAILED) {
      s0 = peg$parseHtml5TagName();
      if (s0 === peg$FAILED) {
        s0 = peg$parseSvgElementName();
      }
    }

    return s0;
  }

  function peg$parseHtml4ExclusivesTagName() {
    let s0;

    s0 = input.substr(peg$currPos, 7);
    if (s0.toLowerCase() === peg$c247) {
      peg$currPos += (7);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e292); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 6);
      if (s0.toLowerCase() === peg$c248) {
        peg$currPos += (6);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e293); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 8);
        if (s0.toLowerCase() === peg$c249) {
          peg$currPos += (8);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e294); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 3);
          if (s0.toLowerCase() === peg$c250) {
            peg$currPos += (3);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e295); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 6);
            if (s0.toLowerCase() === peg$c251) {
              peg$currPos += (6);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e296); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 3);
              if (s0.toLowerCase() === peg$c72) {
                peg$currPos += (3);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e104); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 4);
                if (s0.toLowerCase() === peg$c252) {
                  peg$currPos += (4);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e297); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 8);
                  if (s0.toLowerCase() === peg$c253) {
                    peg$currPos += (8);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e298); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 5);
                    if (s0.toLowerCase() === peg$c254) {
                      peg$currPos += (5);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e299); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 8);
                      if (s0.toLowerCase() === peg$c255) {
                        peg$currPos += (8);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e300); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 6);
                        if (s0.toLowerCase() === peg$c256) {
                          peg$currPos += (6);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e301); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 2);
                          if (s0.toLowerCase() === peg$c257) {
                            peg$currPos += (2);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e302); }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseHtml5TagName() {
    let s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c258) {
      peg$currPos += (4);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e303); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 7);
      if (s0.toLowerCase() === peg$c259) {
        peg$currPos += (7);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e304); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 4);
        if (s0.toLowerCase() === peg$c231) {
          peg$currPos += (4);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e275); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 7);
          if (s0.toLowerCase() === peg$c260) {
            peg$currPos += (7);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e305); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 5);
            if (s0.toLowerCase() === peg$c261) {
              peg$currPos += (5);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e306); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 5);
              if (s0.toLowerCase() === peg$c262) {
                peg$currPos += (5);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e307); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.charAt(peg$currPos);
                if (s0.toLowerCase() === peg$c263) {
                  peg$currPos++;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e308); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 4);
                  if (s0.toLowerCase() === peg$c232) {
                    peg$currPos += (4);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e276); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 8);
                    if (s0.toLowerCase() === peg$c249) {
                      peg$currPos += (8);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e294); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 3);
                      if (s0.toLowerCase() === peg$c264) {
                        peg$currPos += (3);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e309); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 3);
                        if (s0.toLowerCase() === peg$c265) {
                          peg$currPos += (3);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e310); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 10);
                          if (s0.toLowerCase() === peg$c266) {
                            peg$currPos += (10);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e311); }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 4);
                            if (s0.toLowerCase() === peg$c267) {
                              peg$currPos += (4);
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e312); }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 2);
                              if (s0.toLowerCase() === peg$c233) {
                                peg$currPos += (2);
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$e277); }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 6);
                                if (s0.toLowerCase() === peg$c268) {
                                  peg$currPos += (6);
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$e313); }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.charAt(peg$currPos);
                                  if (s0.toLowerCase() === peg$c269) {
                                    peg$currPos++;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$e314); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = input.substr(peg$currPos, 6);
                                    if (s0.toLowerCase() === peg$c270) {
                                      peg$currPos += (6);
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$e315); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = input.substr(peg$currPos, 7);
                                      if (s0.toLowerCase() === peg$c271) {
                                        peg$currPos += (7);
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$e316); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = input.substr(peg$currPos, 4);
                                        if (s0.toLowerCase() === peg$c118) {
                                          peg$currPos += (4);
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$e154); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = input.substr(peg$currPos, 4);
                                          if (s0.toLowerCase() === peg$c119) {
                                            peg$currPos += (4);
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$e155); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = input.substr(peg$currPos, 3);
                                            if (s0.toLowerCase() === peg$c234) {
                                              peg$currPos += (3);
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$e278); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = input.substr(peg$currPos, 8);
                                              if (s0.toLowerCase() === peg$c272) {
                                                peg$currPos += (8);
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$e317); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = input.substr(peg$currPos, 4);
                                                if (s0.toLowerCase() === peg$c127) {
                                                  peg$currPos += (4);
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$e163); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = input.substr(peg$currPos, 8);
                                                  if (s0.toLowerCase() === peg$c273) {
                                                    peg$currPos += (8);
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$e318); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = input.substr(peg$currPos, 2);
                                                    if (s0.toLowerCase() === peg$c274) {
                                                      peg$currPos += (2);
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$e319); }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = input.substr(peg$currPos, 3);
                                                      if (s0.toLowerCase() === peg$c275) {
                                                        peg$currPos += (3);
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$e320); }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        s0 = input.substr(peg$currPos, 7);
                                                        if (s0.toLowerCase() === peg$c276) {
                                                          peg$currPos += (7);
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$e321); }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          s0 = input.substr(peg$currPos, 3);
                                                          if (s0.toLowerCase() === peg$c277) {
                                                            peg$currPos += (3);
                                                          } else {
                                                            s0 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$e322); }
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            s0 = input.substr(peg$currPos, 6);
                                                            if (s0.toLowerCase() === peg$c278) {
                                                              peg$currPos += (6);
                                                            } else {
                                                              s0 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$e323); }
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              s0 = input.substr(peg$currPos, 3);
                                                              if (s0.toLowerCase() === peg$c279) {
                                                                peg$currPos += (3);
                                                              } else {
                                                                s0 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$e324); }
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                s0 = input.substr(peg$currPos, 2);
                                                                if (s0.toLowerCase() === peg$c280) {
                                                                  peg$currPos += (2);
                                                                } else {
                                                                  s0 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$e325); }
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  s0 = input.substr(peg$currPos, 2);
                                                                  if (s0.toLowerCase() === peg$c281) {
                                                                    peg$currPos += (2);
                                                                  } else {
                                                                    s0 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$e326); }
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    s0 = input.substr(peg$currPos, 2);
                                                                    if (s0.toLowerCase() === peg$c282) {
                                                                      peg$currPos += (2);
                                                                    } else {
                                                                      s0 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$e327); }
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      s0 = input.substr(peg$currPos, 5);
                                                                      if (s0.toLowerCase() === peg$c235) {
                                                                        peg$currPos += (5);
                                                                      } else {
                                                                        s0 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$e279); }
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        s0 = input.substr(peg$currPos, 8);
                                                                        if (s0.toLowerCase() === peg$c283) {
                                                                          peg$currPos += (8);
                                                                        } else {
                                                                          s0 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$e328); }
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          s0 = input.substr(peg$currPos, 10);
                                                                          if (s0.toLowerCase() === peg$c284) {
                                                                            peg$currPos += (10);
                                                                          } else {
                                                                            s0 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$e329); }
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            s0 = input.substr(peg$currPos, 6);
                                                                            if (s0.toLowerCase() === peg$c285) {
                                                                              peg$currPos += (6);
                                                                            } else {
                                                                              s0 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$e330); }
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              s0 = input.substr(peg$currPos, 6);
                                                                              if (s0.toLowerCase() === peg$c286) {
                                                                                peg$currPos += (6);
                                                                              } else {
                                                                                s0 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$e331); }
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                s0 = input.substr(peg$currPos, 4);
                                                                                if (s0.toLowerCase() === peg$c134) {
                                                                                  peg$currPos += (4);
                                                                                } else {
                                                                                  s0 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e171); }
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  s0 = input.substr(peg$currPos, 2);
                                                                                  if (s0.toLowerCase() === peg$c287) {
                                                                                    peg$currPos += (2);
                                                                                  } else {
                                                                                    s0 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e332); }
                                                                                  }
                                                                                  if (s0 === peg$FAILED) {
                                                                                    s0 = input.substr(peg$currPos, 2);
                                                                                    if (s0.toLowerCase() === peg$c288) {
                                                                                      peg$currPos += (2);
                                                                                    } else {
                                                                                      s0 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e333); }
                                                                                    }
                                                                                    if (s0 === peg$FAILED) {
                                                                                      s0 = input.substr(peg$currPos, 2);
                                                                                      if (s0.toLowerCase() === peg$c289) {
                                                                                        peg$currPos += (2);
                                                                                      } else {
                                                                                        s0 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e334); }
                                                                                      }
                                                                                      if (s0 === peg$FAILED) {
                                                                                        s0 = input.substr(peg$currPos, 2);
                                                                                        if (s0.toLowerCase() === peg$c290) {
                                                                                          peg$currPos += (2);
                                                                                        } else {
                                                                                          s0 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e335); }
                                                                                        }
                                                                                        if (s0 === peg$FAILED) {
                                                                                          s0 = input.substr(peg$currPos, 2);
                                                                                          if (s0.toLowerCase() === peg$c291) {
                                                                                            peg$currPos += (2);
                                                                                          } else {
                                                                                            s0 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e336); }
                                                                                          }
                                                                                          if (s0 === peg$FAILED) {
                                                                                            s0 = input.substr(peg$currPos, 2);
                                                                                            if (s0.toLowerCase() === peg$c292) {
                                                                                              peg$currPos += (2);
                                                                                            } else {
                                                                                              s0 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e337); }
                                                                                            }
                                                                                            if (s0 === peg$FAILED) {
                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                              if (s0.toLowerCase() === peg$c293) {
                                                                                                peg$currPos += (4);
                                                                                              } else {
                                                                                                s0 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e338); }
                                                                                              }
                                                                                              if (s0 === peg$FAILED) {
                                                                                                s0 = input.substr(peg$currPos, 6);
                                                                                                if (s0.toLowerCase() === peg$c294) {
                                                                                                  peg$currPos += (6);
                                                                                                } else {
                                                                                                  s0 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e339); }
                                                                                                }
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  s0 = input.substr(peg$currPos, 2);
                                                                                                  if (s0.toLowerCase() === peg$c236) {
                                                                                                    peg$currPos += (2);
                                                                                                  } else {
                                                                                                    s0 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e280); }
                                                                                                  }
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    s0 = input.substr(peg$currPos, 4);
                                                                                                    if (s0.toLowerCase() === peg$c295) {
                                                                                                      peg$currPos += (4);
                                                                                                    } else {
                                                                                                      s0 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e340); }
                                                                                                    }
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      s0 = input.substr(peg$currPos, 6);
                                                                                                      if (s0.toLowerCase() === peg$c296) {
                                                                                                        peg$currPos += (6);
                                                                                                      } else {
                                                                                                        s0 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e341); }
                                                                                                      }
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        s0 = input.substr(peg$currPos, 3);
                                                                                                        if (s0.toLowerCase() === peg$c237) {
                                                                                                          peg$currPos += (3);
                                                                                                        } else {
                                                                                                          s0 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e281); }
                                                                                                        }
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          s0 = input.substr(peg$currPos, 5);
                                                                                                          if (s0.toLowerCase() === peg$c238) {
                                                                                                            peg$currPos += (5);
                                                                                                          } else {
                                                                                                            s0 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e282); }
                                                                                                          }
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            s0 = input.substr(peg$currPos, 3);
                                                                                                            if (s0.toLowerCase() === peg$c297) {
                                                                                                              peg$currPos += (3);
                                                                                                            } else {
                                                                                                              s0 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e342); }
                                                                                                            }
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              s0 = input.charAt(peg$currPos);
                                                                                                              if (s0.toLowerCase() === peg$c298) {
                                                                                                                peg$currPos++;
                                                                                                              } else {
                                                                                                                s0 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e343); }
                                                                                                              }
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                s0 = input.substr(peg$currPos, 3);
                                                                                                                if (s0.toLowerCase() === peg$c299) {
                                                                                                                  peg$currPos += (3);
                                                                                                                } else {
                                                                                                                  s0 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e344); }
                                                                                                                }
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  s0 = input.substr(peg$currPos, 5);
                                                                                                                  if (s0.toLowerCase() === peg$c150) {
                                                                                                                    peg$currPos += (5);
                                                                                                                  } else {
                                                                                                                    s0 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e187); }
                                                                                                                  }
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    s0 = input.substr(peg$currPos, 6);
                                                                                                                    if (s0.toLowerCase() === peg$c300) {
                                                                                                                      peg$currPos += (6);
                                                                                                                    } else {
                                                                                                                      s0 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e345); }
                                                                                                                    }
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                      if (s0.toLowerCase() === peg$c239) {
                                                                                                                        peg$currPos += (4);
                                                                                                                      } else {
                                                                                                                        s0 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e283); }
                                                                                                                      }
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        s0 = input.substr(peg$currPos, 2);
                                                                                                                        if (s0.toLowerCase() === peg$c301) {
                                                                                                                          peg$currPos += (2);
                                                                                                                        } else {
                                                                                                                          s0 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e346); }
                                                                                                                        }
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                          if (s0.toLowerCase() === peg$c302) {
                                                                                                                            peg$currPos += (4);
                                                                                                                          } else {
                                                                                                                            s0 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e347); }
                                                                                                                          }
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            s0 = input.substr(peg$currPos, 3);
                                                                                                                            if (s0.toLowerCase() === peg$c303) {
                                                                                                                              peg$currPos += (3);
                                                                                                                            } else {
                                                                                                                              s0 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e348); }
                                                                                                                            }
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                                                              if (s0.toLowerCase() === peg$c304) {
                                                                                                                                peg$currPos += (4);
                                                                                                                              } else {
                                                                                                                                s0 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e349); }
                                                                                                                              }
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                                                if (s0.toLowerCase() === peg$c305) {
                                                                                                                                  peg$currPos += (5);
                                                                                                                                } else {
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e350); }
                                                                                                                                }
                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                  s0 = input.substr(peg$currPos, 3);
                                                                                                                                  if (s0.toLowerCase() === peg$c306) {
                                                                                                                                    peg$currPos += (3);
                                                                                                                                  } else {
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e351); }
                                                                                                                                  }
                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                    s0 = input.substr(peg$currPos, 8);
                                                                                                                                    if (s0.toLowerCase() === peg$c307) {
                                                                                                                                      peg$currPos += (8);
                                                                                                                                    } else {
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e352); }
                                                                                                                                    }
                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                      s0 = input.substr(peg$currPos, 6);
                                                                                                                                      if (s0.toLowerCase() === peg$c308) {
                                                                                                                                        peg$currPos += (6);
                                                                                                                                      } else {
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e353); }
                                                                                                                                      }
                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                        s0 = input.substr(peg$currPos, 2);
                                                                                                                                        if (s0.toLowerCase() === peg$c309) {
                                                                                                                                          peg$currPos += (2);
                                                                                                                                        } else {
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e354); }
                                                                                                                                        }
                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                          s0 = input.substr(peg$currPos, 8);
                                                                                                                                          if (s0.toLowerCase() === peg$c310) {
                                                                                                                                            peg$currPos += (8);
                                                                                                                                          } else {
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e355); }
                                                                                                                                          }
                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                            s0 = input.substr(peg$currPos, 6);
                                                                                                                                            if (s0.toLowerCase() === peg$c311) {
                                                                                                                                              peg$currPos += (6);
                                                                                                                                            } else {
                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e356); }
                                                                                                                                            }
                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                              s0 = input.substr(peg$currPos, 6);
                                                                                                                                              if (s0.toLowerCase() === peg$c312) {
                                                                                                                                                peg$currPos += (6);
                                                                                                                                              } else {
                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e357); }
                                                                                                                                              }
                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                s0 = input.charAt(peg$currPos);
                                                                                                                                                if (s0.toLowerCase() === peg$c313) {
                                                                                                                                                  peg$currPos++;
                                                                                                                                                } else {
                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e358); }
                                                                                                                                                }
                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                  s0 = input.substr(peg$currPos, 7);
                                                                                                                                                  if (s0.toLowerCase() === peg$c314) {
                                                                                                                                                    peg$currPos += (7);
                                                                                                                                                  } else {
                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e359); }
                                                                                                                                                  }
                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                    s0 = input.substr(peg$currPos, 3);
                                                                                                                                                    if (s0.toLowerCase() === peg$c315) {
                                                                                                                                                      peg$currPos += (3);
                                                                                                                                                    } else {
                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e360); }
                                                                                                                                                    }
                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                      s0 = input.substr(peg$currPos, 8);
                                                                                                                                                      if (s0.toLowerCase() === peg$c316) {
                                                                                                                                                        peg$currPos += (8);
                                                                                                                                                      } else {
                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e361); }
                                                                                                                                                      }
                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                        s0 = input.charAt(peg$currPos);
                                                                                                                                                        if (s0.toLowerCase() === peg$c317) {
                                                                                                                                                          peg$currPos++;
                                                                                                                                                        } else {
                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e362); }
                                                                                                                                                        }
                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                          s0 = input.substr(peg$currPos, 2);
                                                                                                                                                          if (s0.toLowerCase() === peg$c318) {
                                                                                                                                                            peg$currPos += (2);
                                                                                                                                                          } else {
                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e363); }
                                                                                                                                                          }
                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                            s0 = input.substr(peg$currPos, 2);
                                                                                                                                                            if (s0.toLowerCase() === peg$c319) {
                                                                                                                                                              peg$currPos += (2);
                                                                                                                                                            } else {
                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e364); }
                                                                                                                                                            }
                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                              s0 = input.substr(peg$currPos, 4);
                                                                                                                                                              if (s0.toLowerCase() === peg$c320) {
                                                                                                                                                                peg$currPos += (4);
                                                                                                                                                              } else {
                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e365); }
                                                                                                                                                              }
                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                if (s0.toLowerCase() === peg$c321) {
                                                                                                                                                                  peg$currPos += (4);
                                                                                                                                                                } else {
                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e366); }
                                                                                                                                                                }
                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                  s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                  if (s0.toLowerCase() === peg$c322) {
                                                                                                                                                                    peg$currPos += (6);
                                                                                                                                                                  } else {
                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e367); }
                                                                                                                                                                  }
                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                    s0 = input.substr(peg$currPos, 7);
                                                                                                                                                                    if (s0.toLowerCase() === peg$c323) {
                                                                                                                                                                      peg$currPos += (7);
                                                                                                                                                                    } else {
                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e368); }
                                                                                                                                                                    }
                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                      s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                      if (s0.toLowerCase() === peg$c324) {
                                                                                                                                                                        peg$currPos += (6);
                                                                                                                                                                      } else {
                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e369); }
                                                                                                                                                                      }
                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                        s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                        if (s0.toLowerCase() === peg$c325) {
                                                                                                                                                                          peg$currPos += (5);
                                                                                                                                                                        } else {
                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e370); }
                                                                                                                                                                        }
                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                          s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                          if (s0.toLowerCase() === peg$c180) {
                                                                                                                                                                            peg$currPos += (4);
                                                                                                                                                                          } else {
                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e217); }
                                                                                                                                                                          }
                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                            s0 = input.substr(peg$currPos, 6);
                                                                                                                                                                            if (s0.toLowerCase() === peg$c326) {
                                                                                                                                                                              peg$currPos += (6);
                                                                                                                                                                            } else {
                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e371); }
                                                                                                                                                                            }
                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                              s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                              if (s0.toLowerCase() === peg$c327) {
                                                                                                                                                                                peg$currPos += (3);
                                                                                                                                                                              } else {
                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e372); }
                                                                                                                                                                              }
                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                s0 = input.substr(peg$currPos, 7);
                                                                                                                                                                                if (s0.toLowerCase() === peg$c187) {
                                                                                                                                                                                  peg$currPos += (7);
                                                                                                                                                                                } else {
                                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e224); }
                                                                                                                                                                                }
                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                  s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                                  if (s0.toLowerCase() === peg$c328) {
                                                                                                                                                                                    peg$currPos += (3);
                                                                                                                                                                                  } else {
                                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e373); }
                                                                                                                                                                                  }
                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                    s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                                    if (s0.toLowerCase() === peg$c329) {
                                                                                                                                                                                      peg$currPos += (3);
                                                                                                                                                                                    } else {
                                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e374); }
                                                                                                                                                                                    }
                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                      s0 = input.charAt(peg$currPos);
                                                                                                                                                                                      if (s0.toLowerCase() === peg$c330) {
                                                                                                                                                                                        peg$currPos++;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e375); }
                                                                                                                                                                                      }
                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                        s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                        if (s0.toLowerCase() === peg$c331) {
                                                                                                                                                                                          peg$currPos += (5);
                                                                                                                                                                                        } else {
                                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e376); }
                                                                                                                                                                                        }
                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                          s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                          if (s0.toLowerCase() === peg$c332) {
                                                                                                                                                                                            peg$currPos += (5);
                                                                                                                                                                                          } else {
                                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e377); }
                                                                                                                                                                                          }
                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                            s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                                            if (s0.toLowerCase() === peg$c333) {
                                                                                                                                                                                              peg$currPos += (2);
                                                                                                                                                                                            } else {
                                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e378); }
                                                                                                                                                                                            }
                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                              s0 = input.substr(peg$currPos, 8);
                                                                                                                                                                                              if (s0.toLowerCase() === peg$c334) {
                                                                                                                                                                                                peg$currPos += (8);
                                                                                                                                                                                              } else {
                                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e379); }
                                                                                                                                                                                              }
                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                                if (s0.toLowerCase() === peg$c335) {
                                                                                                                                                                                                  peg$currPos += (5);
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e380); }
                                                                                                                                                                                                }
                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                  s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                                                  if (s0.toLowerCase() === peg$c336) {
                                                                                                                                                                                                    peg$currPos += (2);
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$e381); }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                    s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                                    if (s0.toLowerCase() === peg$c337) {
                                                                                                                                                                                                      peg$currPos += (5);
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$e382); }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                      s0 = input.substr(peg$currPos, 4);
                                                                                                                                                                                                      if (s0.toLowerCase() === peg$c338) {
                                                                                                                                                                                                        peg$currPos += (4);
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$e383); }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                        s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                                                        if (s0.toLowerCase() === peg$c339) {
                                                                                                                                                                                                          peg$currPos += (2);
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$e384); }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                          s0 = input.substr(peg$currPos, 2);
                                                                                                                                                                                                          if (s0.toLowerCase() === peg$c340) {
                                                                                                                                                                                                            peg$currPos += (2);
                                                                                                                                                                                                          } else {
                                                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$e385); }
                                                                                                                                                                                                          }
                                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                                            s0 = input.charAt(peg$currPos);
                                                                                                                                                                                                            if (s0.toLowerCase() === peg$c341) {
                                                                                                                                                                                                              peg$currPos++;
                                                                                                                                                                                                            } else {
                                                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$e386); }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                                              s0 = input.substr(peg$currPos, 3);
                                                                                                                                                                                                              if (s0.toLowerCase() === peg$c342) {
                                                                                                                                                                                                                peg$currPos += (3);
                                                                                                                                                                                                              } else {
                                                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$e387); }
                                                                                                                                                                                                              }
                                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                                s0 = input.substr(peg$currPos, 5);
                                                                                                                                                                                                                if (s0.toLowerCase() === peg$c343) {
                                                                                                                                                                                                                  peg$currPos += (5);
                                                                                                                                                                                                                } else {
                                                                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$e388); }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementName() {
    let s0;

    s0 = peg$parseSvgElementNameShapeElements();
    if (s0 === peg$FAILED) {
      s0 = peg$parseSvgElementNameContainerElement();
      if (s0 === peg$FAILED) {
        s0 = peg$parseSvgElementNameFilterPrimitives();
        if (s0 === peg$FAILED) {
          s0 = peg$parseSvgElementNameAnimationElements();
          if (s0 === peg$FAILED) {
            s0 = peg$parseSvgElementNameTextRelatedElements();
            if (s0 === peg$FAILED) {
              s0 = peg$parseSvgElementNameFontAndGlyphElements();
              if (s0 === peg$FAILED) {
                s0 = peg$parseSvgElementNameOtherSpecializedElements();
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementNameShapeElements() {
    let s0;

    s0 = input.substr(peg$currPos, 6);
    if (s0.toLowerCase() === peg$c344) {
      peg$currPos += (6);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e389); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 7);
      if (s0.toLowerCase() === peg$c345) {
        peg$currPos += (7);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e390); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 4);
        if (s0.toLowerCase() === peg$c346) {
          peg$currPos += (4);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e391); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 4);
          if (s0.toLowerCase() === peg$c347) {
            peg$currPos += (4);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e392); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 7);
            if (s0.toLowerCase() === peg$c348) {
              peg$currPos += (7);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e393); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 8);
              if (s0.toLowerCase() === peg$c349) {
                peg$currPos += (8);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e394); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 4);
                if (s0.toLowerCase() === peg$c350) {
                  peg$currPos += (4);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e395); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 5);
                  if (s0.toLowerCase() === peg$c351) {
                    peg$currPos += (5);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e396); }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementNameContainerElement() {
    let s0;

    s0 = input.substr(peg$currPos, 3);
    if (s0.toLowerCase() === peg$c329) {
      peg$currPos += (3);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e374); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.charAt(peg$currPos);
      if (s0.toLowerCase() === peg$c352) {
        peg$currPos++;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e397); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 6);
        if (s0.toLowerCase() === peg$c353) {
          peg$currPos += (6);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e398); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 4);
          if (s0.toLowerCase() === peg$c354) {
            peg$currPos += (4);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e399); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 8);
            if (s0.toLowerCase() === peg$c355) {
              peg$currPos += (8);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e400); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 6);
              if (s0.toLowerCase() === peg$c356) {
                peg$currPos += (6);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e401); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 3);
                if (s0.toLowerCase() === peg$c357) {
                  peg$currPos += (3);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e402); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 4);
                  if (s0.toLowerCase() === peg$c358) {
                    peg$currPos += (4);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e403); }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementNameFilterPrimitives() {
    let s0;

    s0 = input.substr(peg$currPos, 7);
    if (s0.toLowerCase() === peg$c359) {
      peg$currPos += (7);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e404); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 13);
      if (s0.toLowerCase() === peg$c360) {
        peg$currPos += (13);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e405); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 11);
        if (s0.toLowerCase() === peg$c361) {
          peg$currPos += (11);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e406); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 19);
          if (s0.toLowerCase() === peg$c362) {
            peg$currPos += (19);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e407); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 16);
            if (s0.toLowerCase() === peg$c363) {
              peg$currPos += (16);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e408); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 17);
              if (s0.toLowerCase() === peg$c364) {
                peg$currPos += (17);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e409); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 17);
                if (s0.toLowerCase() === peg$c365) {
                  peg$currPos += (17);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e410); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 14);
                  if (s0.toLowerCase() === peg$c366) {
                    peg$currPos += (14);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e411); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 12);
                    if (s0.toLowerCase() === peg$c367) {
                      peg$currPos += (12);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e412); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 7);
                      if (s0.toLowerCase() === peg$c368) {
                        peg$currPos += (7);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e413); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 7);
                        if (s0.toLowerCase() === peg$c369) {
                          peg$currPos += (7);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e414); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 7);
                          if (s0.toLowerCase() === peg$c370) {
                            peg$currPos += (7);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e415); }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 7);
                            if (s0.toLowerCase() === peg$c371) {
                              peg$currPos += (7);
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e416); }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 7);
                              if (s0.toLowerCase() === peg$c372) {
                                peg$currPos += (7);
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$e417); }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 14);
                                if (s0.toLowerCase() === peg$c373) {
                                  peg$currPos += (14);
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$e418); }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.substr(peg$currPos, 7);
                                  if (s0.toLowerCase() === peg$c374) {
                                    peg$currPos += (7);
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$e419); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = input.substr(peg$currPos, 7);
                                    if (s0.toLowerCase() === peg$c375) {
                                      peg$currPos += (7);
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$e420); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = input.substr(peg$currPos, 11);
                                      if (s0.toLowerCase() === peg$c376) {
                                        peg$currPos += (11);
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$e421); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = input.substr(peg$currPos, 12);
                                        if (s0.toLowerCase() === peg$c377) {
                                          peg$currPos += (12);
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$e422); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = input.substr(peg$currPos, 8);
                                          if (s0.toLowerCase() === peg$c378) {
                                            peg$currPos += (8);
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$e423); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = input.substr(peg$currPos, 12);
                                            if (s0.toLowerCase() === peg$c379) {
                                              peg$currPos += (12);
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$e424); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = input.substr(peg$currPos, 18);
                                              if (s0.toLowerCase() === peg$c380) {
                                                peg$currPos += (18);
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$e425); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = input.substr(peg$currPos, 11);
                                                if (s0.toLowerCase() === peg$c381) {
                                                  peg$currPos += (11);
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$e426); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = input.substr(peg$currPos, 6);
                                                  if (s0.toLowerCase() === peg$c382) {
                                                    peg$currPos += (6);
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$e427); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = input.substr(peg$currPos, 12);
                                                    if (s0.toLowerCase() === peg$c383) {
                                                      peg$currPos += (12);
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$e428); }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementNameAnimationElements() {
    let s0;

    s0 = input.substr(peg$currPos, 7);
    if (s0.toLowerCase() === peg$c384) {
      peg$currPos += (7);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e429); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 13);
      if (s0.toLowerCase() === peg$c385) {
        peg$currPos += (13);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e430); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 16);
        if (s0.toLowerCase() === peg$c386) {
          peg$currPos += (16);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e431); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 5);
          if (s0.toLowerCase() === peg$c387) {
            peg$currPos += (5);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e432); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 3);
            if (s0.toLowerCase() === peg$c388) {
              peg$currPos += (3);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e433); }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementNameTextRelatedElements() {
    let s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c389) {
      peg$currPos += (4);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e434); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 5);
      if (s0.toLowerCase() === peg$c390) {
        peg$currPos += (5);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e435); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 8);
        if (s0.toLowerCase() === peg$c391) {
          peg$currPos += (8);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e436); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 4);
          if (s0.toLowerCase() === peg$c392) {
            peg$currPos += (4);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e437); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 4);
            if (s0.toLowerCase() === peg$c393) {
              peg$currPos += (4);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e438); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 5);
              if (s0.toLowerCase() === peg$c81) {
                peg$currPos += (5);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e113); }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementNameFontAndGlyphElements() {
    let s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c252) {
      peg$currPos += (4);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e297); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 9);
      if (s0.toLowerCase() === peg$c394) {
        peg$currPos += (9);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e439); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 5);
        if (s0.toLowerCase() === peg$c395) {
          peg$currPos += (5);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e440); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 13);
          if (s0.toLowerCase() === peg$c396) {
            peg$currPos += (13);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e441); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 5);
            if (s0.toLowerCase() === peg$c397) {
              peg$currPos += (5);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e442); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 5);
              if (s0.toLowerCase() === peg$c398) {
                peg$currPos += (5);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e443); }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseSvgElementNameOtherSpecializedElements() {
    let s0;

    s0 = input.substr(peg$currPos, 8);
    if (s0.toLowerCase() === peg$c399) {
      peg$currPos += (8);
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e444); }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 4);
      if (s0.toLowerCase() === peg$c97) {
        peg$currPos += (4);
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e445); }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 7);
        if (s0.toLowerCase() === peg$c163) {
          peg$currPos += (7);
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e200); }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 6);
          if (s0.toLowerCase() === peg$c400) {
            peg$currPos += (6);
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$e446); }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 6);
            if (s0.toLowerCase() === peg$c401) {
              peg$currPos += (6);
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$e447); }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 13);
              if (s0.toLowerCase() === peg$c402) {
                peg$currPos += (13);
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$e448); }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 4);
                if (s0.toLowerCase() === peg$c403) {
                  peg$currPos += (4);
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$e449); }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 13);
                  if (s0.toLowerCase() === peg$c404) {
                    peg$currPos += (13);
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$e450); }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 6);
                    if (s0.toLowerCase() === peg$c405) {
                      peg$currPos += (6);
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$e451); }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 7);
                      if (s0.toLowerCase() === peg$c406) {
                        peg$currPos += (7);
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$e452); }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 5);
                        if (s0.toLowerCase() === peg$c407) {
                          peg$currPos += (5);
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$e453); }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 9);
                          if (s0.toLowerCase() === peg$c408) {
                            peg$currPos += (9);
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$e454); }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 14);
                            if (s0.toLowerCase() === peg$c409) {
                              peg$currPos += (14);
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$e455); }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 12);
                              if (s0.toLowerCase() === peg$c410) {
                                peg$currPos += (12);
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$e456); }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 9);
                                if (s0.toLowerCase() === peg$c411) {
                                  peg$currPos += (9);
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$e457); }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.substr(peg$currPos, 7);
                                  if (s0.toLowerCase() === peg$c412) {
                                    peg$currPos += (7);
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$e458); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = input.substr(peg$currPos, 14);
                                    if (s0.toLowerCase() === peg$c413) {
                                      peg$currPos += (14);
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$e459); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = input.substr(peg$currPos, 6);
                                      if (s0.toLowerCase() === peg$c322) {
                                        peg$currPos += (6);
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$e367); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = input.substr(peg$currPos, 10);
                                        if (s0.toLowerCase() === peg$c414) {
                                          peg$currPos += (10);
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$e460); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = input.substr(peg$currPos, 4);
                                          if (s0.toLowerCase() === peg$c220) {
                                            peg$currPos += (4);
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$e461); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = input.substr(peg$currPos, 5);
                                            if (s0.toLowerCase() === peg$c79) {
                                              peg$currPos += (5);
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$e111); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = input.substr(peg$currPos, 7);
                                              if (s0.toLowerCase() === peg$c415) {
                                                peg$currPos += (7);
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$e462); }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseTagName() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$currPos;
    s2 = input.charAt(peg$currPos);
    if (peg$r8.test(s2)) {
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e463); }
    }
    if (s2 !== peg$FAILED) {
      s3 = [];
      s4 = input.charAt(peg$currPos);
      if (peg$r9.test(s4)) {
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e464); }
      }
      while (s4 !== peg$FAILED) {
        s3.push(s4);
        s4 = input.charAt(peg$currPos);
        if (peg$r9.test(s4)) {
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e464); }
        }
      }
      s2 = [s2, s3];
      s1 = s2;
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }

    return s0;
  }

  function peg$parseAttrName() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$currPos;
    s2 = input.charAt(peg$currPos);
    if (peg$r8.test(s2)) {
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e463); }
    }
    if (s2 !== peg$FAILED) {
      s3 = [];
      s4 = input.charAt(peg$currPos);
      if (peg$r9.test(s4)) {
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e464); }
      }
      while (s4 !== peg$FAILED) {
        s3.push(s4);
        s4 = input.charAt(peg$currPos);
        if (peg$r9.test(s4)) {
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e464); }
        }
      }
      s2 = [s2, s3];
      s1 = s2;
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }

    return s0;
  }

  function peg$parseSymbol() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$currPos;
    s2 = input.charAt(peg$currPos);
    if (peg$r10.test(s2)) {
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e465); }
    }
    if (s2 !== peg$FAILED) {
      s3 = [];
      s4 = input.charAt(peg$currPos);
      if (peg$r9.test(s4)) {
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e464); }
      }
      while (s4 !== peg$FAILED) {
        s3.push(s4);
        s4 = input.charAt(peg$currPos);
        if (peg$r9.test(s4)) {
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e464); }
        }
      }
      s2 = [s2, s3];
      s1 = s2;
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }

    return s0;
  }

  function peg$parseHTMLDomVarName() {
    let s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = peg$currPos;
    s2 = input.charAt(peg$currPos);
    if (peg$r11.test(s2)) {
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e466); }
    }
    if (s2 !== peg$FAILED) {
      s3 = [];
      s4 = input.charAt(peg$currPos);
      if (peg$r12.test(s4)) {
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e467); }
      }
      while (s4 !== peg$FAILED) {
        s3.push(s4);
        s4 = input.charAt(peg$currPos);
        if (peg$r12.test(s4)) {
          peg$currPos++;
        } else {
          s4 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e467); }
        }
      }
      s2 = [s2, s3];
      s1 = s2;
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      s0 = input.substring(s0, peg$currPos);
    } else {
      s0 = s1;
    }

    return s0;
  }

  function peg$parsewhitespace() {
    let s0, s1;

    peg$silentFails++;
    s0 = [];
    s1 = input.charAt(peg$currPos);
    if (peg$r13.test(s1)) {
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e469); }
    }
    if (s1 !== peg$FAILED) {
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        s1 = input.charAt(peg$currPos);
        if (peg$r13.test(s1)) {
          peg$currPos++;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e469); }
        }
      }
    } else {
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$parseNL();
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e468); }
    }

    return s0;
  }

  function peg$parse__() {
    let s0, s1;

    peg$silentFails++;
    s0 = [];
    s1 = input.charAt(peg$currPos);
    if (peg$r13.test(s1)) {
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e469); }
    }
    while (s1 !== peg$FAILED) {
      s0.push(s1);
      s1 = input.charAt(peg$currPos);
      if (peg$r13.test(s1)) {
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$e469); }
      }
    }
    peg$silentFails--;

    return s0;
  }

  function peg$parseNL() {
    let s0, s1, s2;

    peg$silentFails++;
    s0 = peg$currPos;
    s1 = [];
    s2 = input.charAt(peg$currPos);
    if (peg$r14.test(s2)) {
      peg$currPos++;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e471); }
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = input.charAt(peg$currPos);
        if (peg$r14.test(s2)) {
          peg$currPos++;
        } else {
          s2 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$e471); }
        }
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$f62(s1);
    }
    s0 = s1;
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$e470); }
    }

    return s0;
  }

  peg$result = peg$startRuleFunction();

  const peg$success = (peg$result !== peg$FAILED && peg$currPos === input.length);
  function peg$throw() {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
      peg$fail(peg$endExpectation());
    }

    throw peg$buildStructuredError(
      peg$maxFailExpected,
      peg$maxFailPos < input.length ? peg$getUnicode(peg$maxFailPos) : null,
      peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    );
  }
  if (options.peg$library) {
    return /** @type {any} */ ({
      peg$result,
      peg$currPos,
      peg$FAILED,
      peg$maxFailExpected,
      peg$maxFailPos,
      peg$success,
      peg$throw: peg$success ? undefined : peg$throw,
    });
  }
  if (peg$success) {
    return peg$result;
  } else {
    peg$throw();
  }
}

const peg$allowedStartRules = [
  "ExtHTMLDocument"
];

export {
  peg$allowedStartRules as StartRules,
  peg$SyntaxError as SyntaxError,
  peg$parse as parse
};
